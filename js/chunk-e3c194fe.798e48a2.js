(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-e3c194fe"],{"05fe":function(s,t,a){s.exports=a.p+"img/1489669-20181016195337336-1777000798.9b7e5e73.png"},"0741":function(s,t,a){s.exports=a.p+"img/8e36dfe9c1618385743e62f06fcca9fd.5f7fff86.jpg"},"12c4":function(s,t,a){s.exports=a.p+"img/image-20201203133939269.ef4bd530.png"},"17e9":function(s,t,a){s.exports=a.p+"img/1489669-20181016194136097-936358657.fe209ad1.png"},"1e41":function(s,t,a){s.exports=a.p+"img/1489669-20181016195304547-1979156977.efd008bc.png"},"1eb9":function(s,t){},"291b":function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"articles"},[a("Banner"),a("div",{staticClass:"content"},[a("article",{staticClass:"markdown-body"},[a(s.currentArticle,{tag:"component"})],1)])],1)},r=[],l=(a("a4d3"),a("e01a"),a("4de4"),a("b9ad")),n=a("fdba"),v=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",{staticClass:"menus"},s._l(s.menus,(function(t){return a("li",{key:t.id},[a("a",{attrs:{href:"#"+t.id}},[s._v("#"+s._s(t.title))]),t[s.childLabel]?a("ul",{staticClass:"child"},[a("menu-tree",{attrs:{menus:t[s.childLabel],"child-label":s.childLabel}})],1):s._e()])})),0)},p=[],_={name:"menuTree",props:{menus:{type:[Object,Array],required:!0},childLabel:{type:String,default:"child"}},data:function(){return{}},methods:{}},c=_,i=(a("925b"),a("2877")),o=Object(i["a"])(c,v,p,!1,null,"3121c763",null),h=o.exports,d=(a("365c"),function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)}),j=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h2",[s._v("Scheme 五法")]),a("h3",[s._v("Scheme 五法之第一法 —— car 之法则")]),a("p",[s._v("基本元件 "),a("em",[s._v("car")]),s._v(" 仅定义为针对非空列表。")]),a("h3",[s._v("Scheme 五法之第二法 —— cdr 之法则")]),a("p",[s._v("基本元件 "),a("em",[s._v("cdr")]),s._v(" 仅定义为针对非空列表。任意非空列表的 "),a("em",[s._v("cdr")]),s._v(" 总是另一个列表。")]),a("h3",[s._v("Scheme 五法之第三法 —— cons 之法则")]),a("p",[s._v("基本元件 "),a("em",[s._v("cons")]),s._v(" 需要两个参数。第二个参数必须是一个列表。结果是一个列表。")]),a("h3",[s._v("Scheme 五法之第四法 —— Null? 之法则")]),a("p",[s._v("基本元件 "),a("em",[s._v("null?")]),s._v(" 仅定义为针对列表。")]),a("h3",[s._v("Scheme 五法之第五法 —— eq? 之法则")]),a("p",[s._v("基本元件 "),a("em",[s._v("eq?")]),s._v(" 需要两个参数。每个参数都必须是一个非数字的原子。")]),a("h2",[s._v("Scheme十诫")]),a("h3",[s._v("第一诫")]),a("p",[s._v("当对一个原子列表 "),a("em",[s._v("lat")]),s._v(" 进行递归调用时，询问两个有关 "),a("em",[s._v("lat")]),s._v(" 的问题："),a("em",[s._v("(null? lat)")]),s._v(" 和 "),a("strong",[s._v("else")]),s._v("。")]),a("p",[s._v("当对一个数字 "),a("em",[s._v("n")]),s._v(" 进行递归调用时，询问两个有关 "),a("em",[s._v("n")]),s._v(" 的问题："),a("em",[s._v("(zero? n)")]),s._v(" 和 "),a("strong",[s._v("else")]),s._v("。")]),a("p",[s._v("当对一个S-表达式列表 "),a("em",[s._v("l")]),s._v(" 进行递归调用时，询问三个有关 "),a("em",[s._v("l")]),s._v(" 的问题："),a("em",[s._v("(null? lat)")]),s._v("、"),a("em",[s._v("(atom? (car l))")]),s._v(" 和 "),a("strong",[s._v("else")]),s._v("。")]),a("h3",[s._v("第二诫")]),a("p",[s._v("使用 "),a("em",[s._v("cons")]),s._v(" 来构建列表。")]),a("h3",[s._v("第三诫")]),a("p",[s._v("构建一个列表的时候，描述第一个典型元素，之后 "),a("em",[s._v("cons")]),s._v(" 该元素到自然递归（natural recursion）上。")]),a("h3",[s._v("第四诫")]),a("p",[a("strong",[s._v("在递归时总是改变至少一个参数")]),s._v("。")]),a("p",[s._v("在递归时改变的参数，必须向着不断接近结束条件而改变。改变的参数必须在结束条件中得以测试： 当使用 "),a("em",[s._v("cdr")]),s._v(" 时，用 "),a("em",[s._v("null?")]),s._v(" 测试是否结束； 当使用 "),a("em",[s._v("sub1")]),s._v(" 时,用 "),a("em",[s._v("zero?")]),s._v(" 测试是否结束。")]),a("h3",[s._v("第五诫")]),a("p",[s._v("当用 ➕ 构建一个值时，总是使用 0 作为结束代码行的值，因为加上 0 不会改变加法的值。")]),a("p",[s._v("当用 ✖ 构建一个值时，总是使用 1 作为结柬代码行的值，因为乘以 1 不会改变乘法的值。")]),a("p",[s._v("当用 "),a("em",[s._v("cons")]),s._v(" 构建一个值时，总是考虑把 0 作为结束代码行的值。")]),a("h3",[s._v("第六诫")]),a("p",[s._v("简化工作只在功能正确之后开展。")]),a("h3",[s._v("第七诫")]),a("p",[s._v("对具有相同性质的 "),a("em",[s._v("subparts")]),s._v("（子部件）进行递归调用：")]),a("ul",[a("li",[s._v("列表的子列表。")]),a("li",[s._v("算术表达式的子表达式。")])]),a("h3",[s._v("第八诫")]),a("p",[s._v("使用辅助函数来抽象表示方式。")]),a("h3",[s._v("第九诫")]),a("p",[s._v("用函数来抽象通用模式。")]),a("h3",[s._v("第十诫")]),a("p",[s._v("构建函数,一次收集多个值。")]),a("hr"),a("p",[s._v("有听过一句话：“人类用循环，而上帝用递归。”这本书算是一个递归算法的入门吧。现在很多时候，我总是拘泥于语言的具体实现细节，而忘记了Coding时应该注意的核心思想才是最最重要的。总体来说本书写得还挺有意思的，微言精义自在其中；最后两章看得也确实是云里雾里，头都大了。另外，scheme这个语言写起来实在是难受，我愿称它为"),a("code",{pre:!0},[s._v("括号语言")]),s._v(" ：）。")]),a("h1",[s._v("Ch 1-3")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("car")]),s._v("：返回一个非空列表的第一个原子")]),a("li",[a("code",{pre:!0},[s._v("cdr")]),s._v("： 返回一个非空列表第一个原子之外的其他原子")]),a("li",[a("code",{pre:!0},[s._v("cons")]),s._v("：添加一个原子到一个列表的开头")]),a("li",[a("code",{pre:!0},[s._v("(quote())")]),s._v("：空列表")]),a("li",[a("code",{pre:!0},[s._v("null?")]),s._v("：仅针对列表")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-scheme"}},[s._v("#lang scheme\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" atom?\n ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (x)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("and")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("not")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("pair?")])]),s._v(" x)) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("not")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" x)))))  \n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; judge if every elem in lat is an atom")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" lat?\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (l)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" l)"),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("#t")]),s._v(")\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("atom?")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" l))("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("lat?")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" l)))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("#f")]),s._v("))))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; (lat? 'a b c)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; remove the first elem that equals augment a in lat")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" rember\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (a lat)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("quote")])]),s._v("()))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n        (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("eq?")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) a) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat))\n        ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat)("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("rember")]),s._v(" a\n                      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))))))))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";(rember 'a '(b a c d))")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; returm a list that consists of the first elem of each list in l")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" firsts\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (l)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" l) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("quote")])]),s._v("()))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" l)) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("firsts")]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" l)))))))\n\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";(firsts '((apple peach pumpkin)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";          (plum pear cherry)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";          (grape raisin pea)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";          (bean carrot eggplant)))")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; insert after the old elem")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" insertR\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (new old lat)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("quote")])]),s._v("()))\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("eq?")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) old)\n       ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" old ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" new ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat))))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("insertR")]),s._v(" new old\n                                        ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))))))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";(insertR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";  'topping 'fudge")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";  '(ice cream with fudge for dessert)) ;")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; insert before the old elem")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" insertL\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (new old lat)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("quote")])]),s._v("()))\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("eq?")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) old)\n       ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" new lat))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("insertL")]),s._v(" new old\n                                        ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))))))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";(insertL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";  'topping 'fudge")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";  '(ice cream with fudge for dessert)) ;")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; remove all the elem that equals augment a in lat")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" multirember\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (a lat)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("quote")])]),s._v("()))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n        (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("eq?")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) a) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("multirember")]),s._v(" a ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))\n        ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat)("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("multirember")]),s._v(" a\n                      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))))))))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";(multirember 'a '(b a c d a c a))")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("; insert after the old elem")]),s._v("\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("define")])]),s._v(" multiinsertR\n  ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("lambda")])]),s._v(" (new old lat)\n    ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cond")])]),s._v("\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("null?")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("quote")])]),s._v("()))\n      (("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("eq?")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) old)\n       ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" old ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" new\n                       ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("multiinsertR")]),s._v(" new old ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))))\n      ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("else")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cons")])]),s._v(" ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("car")])]),s._v(" lat) ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("multiinsertR")]),s._v(" new old\n                                        ("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[a("span",{pre:!0,attrs:{class:"hljs-builtin-name"}},[s._v("cdr")])]),s._v(" lat)))))))\n\n("),a("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("multiinsertR")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-symbol"}},[s._v("'topping")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-symbol"}},[s._v("'fudge")]),s._v("\n  '(ice cream with fudge for fudge dessert))"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v(";")]),s._v("\n")])])])}],u={},m=Object(i["a"])(u,d,j,!1,null,null,null),g=m.exports,y=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},w=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("h1",[s._v("第一部分 运用领域驱动模型")]),e("p",[s._v("在领域驱动的设计中，3个基本用途决定了模型的选择。")]),e("ol",[e("li",[s._v("模型和设计的核心互相影响。")]),e("li",[s._v("模型是团队所有成员使用的通用语言的中枢。")]),e("li",[s._v("模型是浓缩的知识。")])]),e("h2",[s._v("1 消化知识")]),e("p",[s._v("技术人才更愿意从事精细的框架工作，试图用技术来解决领域问题。他们把学习领域知识和领域建模的工作留给别人去做。软件核心的复杂性需要我们直接去面对和解决，如果不这样做，则可能导致工作重点的偏离。")]),e("p",[s._v("以下几方面因素促使上述案例得以成功：")]),e("ol",[e("li",[s._v("模型和实现的绑定")]),e("li",[s._v("建立了一种基于模型的语言")]),e("li",[s._v("开发一个蕴含丰富知识的模型")]),e("li",[s._v("提炼模型。")]),e("li",[s._v("头脑风暴和实验。")])]),e("p",[s._v("处理这些责任传递的特性不再是一些附属于装货作业的次要特性，而是由一个独立的模型来提供支持，这个模型正是在理解了作业与责任之间的重要关系之后开发出来的。")]),e("h2",[s._v("2 交流与语言的使用")]),e("p",[s._v("毕竟，难道需求不应该独立于实现它们的设计吗？这种观点忽视了所有语言都要基于某种模型这一事实。")]),e("hr"),e("p",[s._v("UML图无法传达模型的两个最重要的方面，一个方面是模型所表示的概念的意义，另一方面是对象应该做哪些事情。")]),e("p",[s._v("其他文档应该着重说明含义，以便使人们能够深入理解大尺度结构，并将注意力集中在核心元素上。当编程语言无法直接明了地实现概念时，文档可以澄清设计意图。我们应该把书面文档作为代码和口头讨论的补充。")]),e("p",[s._v("如果文档不再担负重要的作用，那么纯粹靠意志和纪律保持其更新就是浪费精力。")]),e("hr"),e("p",[s._v("解释性模型不必是对象模型，而且最好不是。实际上在这些模型中不使用UML是有好处的，这样可以避免人们错误地认为这些模型与软件设计是一致的。")]),e("h2",[s._v("3 绑定模型和实现")]),e("p",[s._v("那些压根儿就没有领域模型的项目，仅仅通过编写代码来实现一个又一个的功能，它们无法利用前两章所讨论的知识消化和沟通所带来的好处。如果涉及复杂的领域就会使项目举步维艰。")]),e("p",[s._v("另一方面，许多复杂项目确实在尝试使用某种形式的领域模型，但是并没有把代码的编写与模型紧密联系起来。这些项目所设计的模型，在项目初期还可能用来做一些探索工作，但是随着项目的进展，这些模型与项目渐行渐远，甚至还会起误导作用。所有在模型上花费的精力都无法保证程序设计的正确性，因为模型和设计是不同的。")]),e("p",[s._v("MODEL-DRIVEN DESIGN（模型驱动设计）不再将分析模型和程序设计分离开，而是寻求一种能够满足这两方面需求的单一模型。不考虑纯粹的技术问题，程序设计中的每个对象都反映了模型中所描述的相应概念。这就要求我们以更高的标准来选择模型，因为它必须同时满足两种完全不同的目标。")]),e("p",[s._v("如果编写代码的人员认为自己没必要对模型负责，或者不知道如何让模型为应用程序服务，那么这个模型就和程序没有任何关联。如果开发人员没有意识到改变代码就意味着改变模型，那么他们对程序的重构不但不会增强模型的作用，反而还会削弱它的效果。同样，如果建模人员不参与到程序实现的过程中，那么对程序实现的约束就没有切身的感受，即使有，也会很快忘记。")]),e("h1",[s._v("第二部分 模型驱动设计的构造块")]),e("h2",[s._v("4 分离领域")]),e("p",[s._v("要想创建出能够处理复杂任务的程序，需要做到关注点分离——使设计中的每个部分都得到单独的关注。在分离的同时，也需要维持系统内部复杂的交互关系。")]),e("p",[e("img",{attrs:{src:a("c63c"),alt:"1606614688813"}})]),e("p",[s._v("最早将用户界面层与应用层和领域层相连的模式是MODEL-VIEW-CONTROLLER（MVC，模型—视图—控制器）框架。")]),e("p",[s._v("应用层和领域层可以调用基础设施层所提供的SERVICE。如果SERVICE的范围选择合理，接口设计完善，那么通过把详细行为封装到服务接口中，调用程序就可以保持与SERVICE的松散连接，并且自身也会很简单。")]),e("p",[s._v("然而，并不是所有的基础设施都是以可供上层调用的SERVICE的形式出现的。有些技术组件被设计成直接支持其他层的基本功能（如为所有的领域对象提供抽象基类），并且提供关联机制（如MVC及类似框架的实现）。这种“架构框架”对于程序其他部分的设计有着更大的影响。")]),e("p",[e("strong",[s._v("在MODEL-DRIVEN DESIGN中，领域层的软件构造反映出了模型概念。")])]),e("h3",[s._v("The Smart UI “反模式”")]),e("p",[s._v("领域驱动设计只有应用在大型项目上才能产生最大的收益，而这也确实需要高超的技巧。不是所有的项目都是大型项目；也不是所有的项目团队都能掌握那些技巧。")]),e("p",[s._v("在这里介绍SMART UI能够帮助我们理解为什么需要将应用程序与领域分离，而且更重要的是，还能让我们知道什么时候不需要这样做。")]),e("p",[s._v("记住，在项目中使用智能用户界面后，除非重写全部的应用模块，否则不能改用其他的设计方法。")]),e("h2",[s._v("5 软件中所表示的模型")]),e("p",[s._v("Entity：用来表示某种具有连续性和标识的事物的呢（可以跟踪它所经历的不同状态，甚至可以跨不同的实现跟踪它）")]),e("p",[s._v("Value Object：用于描述某种状态的属性呢")]),e("p",[s._v("Service：领域中还有一些方面适合用动作或操作来表示，这比用对象表示更加清楚。这些方面最好用SERVICE来表示，而不应把操作的责任强加到ENTITY或VALUE OBJECT上，尽管这样做稍微违背了面向对象的建模传统。")]),e("h3",[s._v("关联")]),e("p",[s._v("至少有3种方法可以使得关联更易于控制。")]),e("ol",[e("li",[s._v("规定一个遍历方向。")]),e("li",[s._v("添加一个限定符，以便有效地减少多重关联。")]),e("li",[s._v("消除不必要的关联。")])]),e("p",[s._v("不管是什么特殊规则，只要发现了关联的约束，就应该将这些约束添加到模型和实现中。它们可以使模型更精确，使实现更易于维护。"),e("strong",[s._v("（参考书中例子）")])]),e("h3",[s._v("ENTITY")]),e("p",[s._v("主要由标识定义的对象被称作ENTITY。ENTITY（实体）有特殊的建模和设计思路。它们具有生命周期，这期间它们的形式和内容可能发生根本改变，但必须保持一种内在的连续性。为了有效地跟踪这些对象，必须定义它们的标识。它们的类定义、职责、属性和关联必须由其标识来决定，而不依赖于其所具有的属性。")]),e("p",[e("strong",[s._v("当一个对象由其标识（而不是属性）区分时，那么在模型中应该主要通过标识来确定该对象的定义。使类定义变得简单，并集中关注生命周期的连续性和标识。")])]),e("ul",[e("li",[s._v("Entity建模")])]),e("p",[s._v("不要将注意力集中在属性或行为上，应该摆脱这些细枝末节，抓住ENTITY对象定义的最基本特征，尤其是那些用于识别、查找或匹配对象的特征。")]),e("ul",[e("li",[s._v("设计标识操作")])]),e("p",[s._v("不管系统是如何定义的，都必须确保标识属性在系统中是唯一的。")]),e("p",[s._v("当对象属性没办法形成真正唯一键时，另一种经常用到的解决方案是为每个实例附加一个在类中唯一的符号（如一个数字或字符串）。一旦这个ID符号被创建并存储为ENTITY的一个属性，必须将它指定为不可变的。它必须永远不变，即使开发系统无法直接强制这条规则。")]),e("p",[e("em",[s._v("在这些技术问题的干扰下，人们很容易忽略基本的概念问题：两个对象是同一事物时意味着什么？我们很容易为每个对象分配一个ID，或是编写一个用于比较两个实例的操作，但如果这些ID或操作没有对应领域中有意义的区别，那只会使问题更混乱。这就是分配标识的操作通常需要人工输入的原因。例如，支票簿对账软件可以提供一些有可能匹配的账目，但它们是否真的匹配则要由用户最终决定。")])]),e("h3",[s._v("VALUE OBJECT")]),e("p",[s._v("当我们只关心一个模型元素的属性时，应把它归类为VALUE OBJECT。我们应该使这个模型元素能够表示出其属性的意义，并为它提供相关功能。VALUE OBJECT应该是不可变的。不要为它分配任何标识，而且不要把它设计成像ENTITY那么复杂。")]),e("ul",[e("li",[e("p",[s._v("何时允许可变性")]),e("p",[s._v("如果一个VALUE的实现是可变的，那么就不能共享它。无论是否共享VALUE OBJECT，在可能的情况下都要将它们设计为不可变的。")])])]),e("h3",[s._v("SERVICE")]),e("p",[s._v("有时，对象不是一个事物。")]),e("p",[s._v("在某些情况下，最清楚、最实用的设计会包含一些特殊的操作，这些操作从概念上讲不属于任何对象。与其把它们强制地归于哪一类，不如顺其自然地在模型中引入一种新的元素，这就是SERVICE（服务）。")]),e("p",[s._v("现在，一个比较常见的错误是没有努力为这类行为找到一个适当的对象，而是逐渐转为过程化的编程。但是，当我们勉强将一个操作放到不符合对象定义的对象中时，这个对象就会产生概念上的混淆，而且会变得很难理解或重构。复杂的操作很容易把一个简单对象搞乱，使对象的角色变得模糊。此外，由于这些操作常常会牵扯到很多领域对象——需要协调这些对象以便使它们工作，而这会产生对所有这些对象的依赖，将那些本来可以单独理解的概念缠杂在一起。")]),e("p",[s._v("SERVICE是作为接口提供的一种操作，它在模型中是独立的，它不像ENTITY和VALUE OBJECT那样具有封装的状态。SERVICE是技术框架中的一种常见模式，但它们也可以在领域层中使用。")]),e("p",[s._v("使用SERVICE时应谨慎，它们不应该替代ENTITY和VALUE OBJECT的所有行为。但是，当一个操作实际上是一个重要的领域概念时，SERVICE很自然就会成为MODEL-DRIVEN DESIGN中的一部分。将模型中的独立操作声明为一个SERVICE，而不是声明为一个不代表任何事情的虚拟对象，可以避免对任何人产生误导。")]),e("p",[s._v("好的SERVICE有以下3个特征。")]),e("ol",[e("li",[s._v("与领域概念相关的操作不是ENTITY或VALUE OBJECT的一个自然组成部分。")]),e("li",[s._v("接口是根据领域模型的其他元素定义的。")]),e("li",[s._v("操作是无状态的：这里所说的无状态是指任何客户都可以使用某个SERVICE的任何实例，而不必关心该实例的历史状态。")])]),e("blockquote",[e("p",[s._v("我们在这里会遇到领域层与应用层之间很微妙的分界线。例如，如果银行应用程序可以把我们的交易进行转换并导出到一个电子表格文件中，以便进行分析，那么这个导出操作就是应用层SERVICE。‚文件格式‛在银行领域中是没有意义的，它也不涉及业务规则。")]),e("p",[s._v("另一方面，账户之间的转账功能属于领域层SERVICE，因为它包含重要的业务规则（如处理相应的借方账户和贷方账户），而且‚资金转账‛是一个有意义的银行术语。在这种情况下，SERVICE自己并不会做太多的事情，而只是要求两个Account对象完成大部分工作。")])]),e("h3",[s._v("建模范式")]),e("p",[s._v("不要和实现范式对抗。我们总是可以用别的方式来考虑领域。找到适合于范式的模型概念。")]),e("p",[s._v("把通用语言作为依靠的基础。即使工具之间没有严格联系时，语言使用上的高度一致性也能防止各个设计部分分裂。")]),e("p",[s._v("不要一味依赖UML。有时固定使用某种工具（如UML绘图工具）将导致人们通过歪曲模型来使它更容易画出来。例如，UML确实有一些特性很适合表达约束，但它并不是在所有情况下都适用。有时使用其他风格的图形（可能适用于其他范式）或者简单的语言描述比牵强附会地适应某种对象视图更好。")]),e("p",[s._v("保持怀疑态度。工具是否真正有用武之地？不能因为存在一些规则，就必须使用规则引擎。规则也可以表示为对象，虽然可能不是特别优雅。多个范式会使问题变得非常复杂。")]),e("h2",[s._v("6 领域对象的生命周期")]),e("p",[s._v("接下来，我们将注意力转移到生命周期的开始阶段，使用FACTORY（工厂）来创建和重建复杂对象和AGGREGATE（聚合），从而封装它们的内部结构。最后，在生命周期的中间和末尾使用REPOSITORY（存储库）来提供查找和检索持久化对象并封装庞大基础设施的手段。")]),e("h3",[s._v("Aggregate（聚合）")]),e("p",[s._v("换句话说，我们如何知道一个由其他对象组成的对象从哪里开始，又到何处结束呢？在任何具有持久化数据存储的系统中，对数据进行修改的事务必须要有范围，而且要有保持数据一致性的方式（也就是说，保持数据遵守固定规则）")]),e("p",[s._v("固定规则（invariant）是指在数据变化时必须保持的一致性规则，其涉及AGGREGATE成员之间的内部关系。而任何跨越AGGREGATE的规则将不要求每时每刻都保持最新状态。通过事件处理、批处理或其他更新机制，这些依赖会在一定的时间内得以解决。但在每个事务完成时，AGGREGATE内部所应用的固定规则必须得到满足")]),e("p",[s._v("每个AGGREGATE都有一个根（root）和一个边界（boundary）。边界定义了AGGREGATE的内部都有什么。根则是AGGREGATE所包含的一个特定ENTITY。对AGGREGATE而言，外部对象只可以引用根，而边界内部的对象之间则可以互相引用。")]),e("p",[e("strong",[s._v("聚合拥有明确的边界，这在微服务中很重要")])]),e("p",[e("em",[s._v("节选自《微服务架构设计模式》")])]),e("ul",[e("li",[e("p",[e("strong",[s._v("微服务")]),s._v("中聚合的规则：")]),e("ul",[e("li",[e("p",[s._v("只引用聚合根")])]),e("li",[e("p",[s._v("聚合间的引用必须使用主键")]),e("p",[e("img",{attrs:{src:a("2a9e"),alt:"image-20201203133902014"}})])]),e("li",[e("p",[s._v("在一个事务中，只能创建或更新一个聚合")])])])]),e("li",[e("p",[s._v("使用聚合设计业务逻辑")]),e("p",[e("img",{attrs:{src:a("12c4"),alt:"image-20201203133939269"}})])]),e("li",[e("p",[s._v("领域事件是聚合发生的事情，由领域模型中的一个类表示。事件通常代表状态的变化。")])])]),e("h3",[s._v("Factory")]),e("p",[s._v("但我们仍然需要一种更加抽象且不与其他对象发生耦合的构造机制。这就是FACTORY，它是一种负责创建其他对象的程序元素")]),e("p",[s._v("FACTORY封装了创建复杂对象或AGGREGATE所需的知识。它提供了反映客户目标的接口，以及被创建对象的抽象视图。")]),e("p",[s._v("因此，应该将创建复杂对象的实例和AGGREGATE的职责转移给单独的对象，这个对象本身可能没有承担领域模型中的职责，但它仍是领域设计的一部分。提供一个封装所有复杂装配操作的接口，而且这个接口不需要客户引用要被实例化的对象的具体类。在创建AGGREGATE时要把它作为一个整体，并确保它满足固定规则。")]),e("h3",[s._v("Repository")]),e("p",[s._v("REPOSITORY将某种类型的所有对象表示为一个概念集合（通常是模拟的）。它的行为类似于集合（collection），只是具有更复杂的查询功能。在添加或删除相应类型的对象时，REPOSITORY的后台机制负责将对象添加到数据库中，或从数据库中删除对象。这个定义将一组紧密相关的职责集中在一起，这些职责提供了对AGGREGATE根的整个生命周期的全程访问。")]),e("p",[s._v("底层技术可能会限制我们的建模选择。例如，关系数据库可能对复合对象结构的深度有实际的限制。同样，开发人员要获得REPOSITORY的使用及其查询实现之间的双向反馈。")]),e("p",[s._v("由于在这种情况下REPOSITORY基于数据来创建对象，因此很多人认为REPOSITORY就是FACTORY，而从技术角度来看的确如此。但我们最好还是从模型的角度来看待这一问题，前面讲过，重建一个已存储的对象并不是创建一个新的概念对象。从领域驱动设计的角度来看，FACTORY和REPOSITORY具有完全不同的职责。FACTORY负责制造新对象，而REPOSITORY负责查找已有对象。")]),e("h2",[s._v("7 使用语言：一个扩展的事例")]),e("h1",[s._v("第三部分")]),e("h2",[s._v("8 突破")]),e("h2",[s._v("9 将隐式概念转变为显式概念")]),e("p",[s._v("约束是模型概念中非常重要的类别。它们通常是隐含的，将它们显式地表现出来可以极大地提高设计质量。")]),e("p",[s._v("将约束条件提取到其自己的方法中，这样就可以通过方法名来表达约束的含义，从而在设计中显式地表现出这条约束。")]),e("p",[s._v("约束和过程是两大类模型概念，当我们用面向对象语言编程时，不会立即想到它们，然而它们一旦被我们视为模型元素，就真的可以让我们的设计更为清晰。")]),e("h3",[s._v("Specification 模式")]),e("p",[s._v("SPECIFICATION将规则保留在领域层。由于规则是一个完备的对象，所以这种设计能够更加清晰地反映模型。")]),e("p",[s._v("SPECIFICATION最有价值的地方在于它可以将看起来完全不同的应用功能统一起来。出于以下3个目的中的一个或多个，我们可能需要指定对象的状态。")]),e("ol",[e("li",[s._v("验证对象，检查它是否能满足某些需求或者是否已经为实现某个目标做好了准备。")]),e("li",[s._v("从集合中选择一个对象（如上述例子中的查询过期发票）。")]),e("li",[s._v("指定在创建新对象时必须满足某种需求。")])]),e("p",[s._v("最后一点也很重要。这种接口更加便于测试，因为接口显式地定义了生成器的输入，而这同时也可用来验证输出。也就是说，传入生成器接口的用于约束创建过程的同一个SPECIFICATION也可发挥其验证的作用（如果实现方式能够支持这一点的话），以保证被创建的对象是正确的。（这是ASSERTION的例子，将会在第10章中讨论。）")]),e("h2",[s._v("10 柔性设计")]),e("p",[s._v("为了使项目能够随着开发工作的进行加速前进，而不会由于它自己的老化停滞不前，设计必须要让人们乐于使用，而且易于做出修改。这就是柔性设计（supple design）。")]),e("h2",[s._v("11 应用分析模式")]),e("h2",[s._v("12 将设计模式应用于模型")]),e("ul",[e("li",[s._v("Strategy模式")]),e("li",[s._v("Composite模式")])])])}],k={},f=Object(i["a"])(k,y,w,!1,null,null,null),b=f.exports,S=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},C=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h1",[s._v("1 MySQL构架与历史")]),a("ul",[a("li",[s._v("并发控制 "),a("ul",[a("li",[s._v("锁粒度")]),a("li",[s._v("锁策略：在锁的开销和数据的安全性之间寻求平衡")]),a("li",[s._v("表锁："),a("code",{pre:!0},[s._v("MySQL")]),s._v("中最基本的锁策略，也是开销最小")]),a("li",[s._v("行级锁：只在存储引擎层实现")])])]),a("li",[s._v("事务 "),a("ul",[a("li",[s._v("ACID: "),a("ul",[a("li",[s._v("原子性")]),a("li",[s._v("一致性")]),a("li",[s._v("隔离性")]),a("li",[s._v("持久性")])])]),a("li",[s._v("隔离级别 "),a("ul",[a("li",[s._v("未提交读"),a("code",{pre:!0},[s._v("READ UMCOMMITED")]),s._v("：脏读")]),a("li",[s._v("提交读"),a("code",{pre:!0},[s._v("READ COMMITED")])]),a("li",[s._v("可重复读"),a("code",{pre:!0},[s._v("REPEATABLE READ")]),s._v("：默认的事务隔离级别；无法解决幻读")]),a("li",[s._v("可串行化"),a("code",{pre:!0},[s._v("SERIALIZABLE")]),s._v("：通过锁")])])]),a("li",[s._v("脏读：事务可以读取未提交的数据")]),a("li",[s._v("幻读")]),a("li",[s._v("死锁：两个或多个事务在统一资源上相互占用，并请求锁定对方占用的资源，从而导致恶性循环的现象")]),a("li",[a("code",{pre:!0},[s._v("MySQL")]),s._v("服务器层不管理事务，事务是由下层的存储引擎实现的")]),a("li",[a("code",{pre:!0},[s._v("MVCC")]),s._v("("),a("code",{pre:!0},[s._v("Multiversion Concurrency Control")]),s._v(")")]),a("li",[a("code",{pre:!0},[s._v("InnoDB")]),s._v("引擎")])])])]),a("h1",[s._v("2 MySQL基准测试")]),a("p",[s._v("基准测试是针对系统设计的一种压力测试")]),a("ul",[a("li",[s._v("集成式")]),a("li",[s._v("单组件式")])]),a("p",[s._v("测试指标")]),a("ul",[a("li",[s._v("吞吐量：单位时间内的事务处理数 常用单位：每秒事务数（"),a("code",{pre:!0},[s._v("TPS")]),s._v("）每分钟事务数（"),a("code",{pre:!0},[s._v("TPM")]),s._v("）")]),a("li",[s._v("响应时间或者延迟")]),a("li",[s._v("并发性：并发性基准测试需要关注的是正在工作中的并发操作，或者是同时工作中的线程数或者连接数")]),a("li",[s._v("可扩展性")])]),a("p",[s._v("基准测试方法")]),a("ul",[a("li",[s._v("设计")]),a("li",[s._v("运行多长时间")]),a("li",[s._v("获取系统性能和状态")]),a("li",[s._v("获取准确的测试结果")]),a("li",[s._v("运行并分析结果")]),a("li",[a("strong",[s._v("绘图的重要性")])])]),a("p",[s._v("基准测试工具")]),a("ul",[a("li",[s._v("集成式测试工具 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("ab")])]),a("li",[a("code",{pre:!0},[s._v("http_load")])]),a("li",[a("code",{pre:!0},[s._v("JMeter")])])])]),a("li",[s._v("单组件测试工具 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("mysqlslap")])]),a("li",[a("code",{pre:!0},[s._v("MySQL Benchmark Suite")])]),a("li",[a("code",{pre:!0},[s._v("Super Smack")])])])])]),a("h1",[s._v("3 服务器性能剖析")]),a("h2",[s._v("性能剖析简介")]),a("p",[s._v("本书：响应时间")]),a("p",[s._v("性能剖析报告")]),a("p",[a("strong",[s._v("无论是外部测量还是猜测，数据都不是百分之百准确的，这就是系统不透明所带来的的风险。")])]),a("p",[s._v("理解性能剖析")]),a("h2",[s._v("对应用程序进行性能剖析")]),a("p",[s._v("Q：性能剖析本身会导致服务器变慢吗？ page 73")]),a("p",[s._v("安利了一个软件："),a("code",{pre:!0},[s._v("New Relic")])]),a("h2",[s._v("剖析MySQL查询")]),a("p",[s._v("慢查询日志")]),a("p",[s._v("本书安利工具"),a("code",{pre:!0},[s._v("pt-query-digest")])]),a("p",[a("code",{pre:!0},[s._v("V/M")]),s._v("列提供了方差均值比，也就是常说的离差指数；离差指数高的查询对应的执行时间的变化较大，这类查询往往值得去优化")]),a("ul",[a("li",[s._v("使用"),a("code",{pre:!0},[s._v("SHOW PROFILE")]),a("ul",[a("li",[s._v("首先要"),a("code",{pre:!0},[s._v("SET profiling = 1")])])])]),a("li",[s._v("使用"),a("code",{pre:!0},[s._v("SHOW STATUS")])]),a("li",[a("code",{pre:!0},[s._v("pt-query-digest")]),s._v("提供了字节偏移值，可以直接跳转到细节部分")])]),a("h2",[s._v("诊断间歇性问题")]),a("p",[s._v("单条查询问题还是服务器问题？")]),a("p",[s._v("捕获诊断数据")]),a("ul",[a("li",[s._v("可靠且实时的触发器，也就是区分问题什么时候出现的方法")]),a("li",[s._v("一个收集诊断数据的工具")])]),a("p",[s._v("安利"),a("code",{pre:!0},[s._v("Percona ToolKit")]),s._v("中的"),a("code",{pre:!0},[s._v("pt-stalk")])]),a("p",[s._v("案例分析 page 99")]),a("p",[s._v("是什么导致了性能低下？")]),a("ul",[a("li",[s._v("资源被过度使用，余量已经不足以正常工作")]),a("li",[s._v("资源没有被正常配置")]),a("li",[s._v("资源已经损坏或者失灵")])]),a("h1",[s._v("4 Schema与数据类型优化")]),a("h2",[s._v("选择优化的数据类型")]),a("ul",[a("li",[s._v("更小的通常更好")]),a("li",[s._v("简单就好 "),a("ul",[a("li",[s._v("用"),a("code",{pre:!0},[s._v("MySQL")]),s._v("内建类型来存储日期和时间")]),a("li",[s._v("用整型存储"),a("code",{pre:!0},[s._v("IP")]),s._v("地址")])])]),a("li",[s._v("尽量避免"),a("code",{pre:!0},[s._v("NULL")])])]),a("h2",[s._v("MySQL Schema 设计中的陷阱")]),a("ul",[a("li",[s._v("太多的列")]),a("li",[s._v("太多的关联")]),a("li",[s._v("全能的枚举")]),a("li",[s._v("变相的枚举")])]),a("h2",[s._v("范式和反范式")]),a("blockquote",[a("p",[s._v("基础概念： https://blog.csdn.net/wenco1/article/details/88077279")])]),a("h2",[s._v("缓存表和汇总表")]),a("ul",[a("li",[s._v("物化视图：预先计算并且储存在磁盘上的表，可以通过各种各样的策略刷新和更新")]),a("li",[s._v("计数器表")])]),a("blockquote",[a("p",[a("code",{pre:!0},[s._v("ON DUPLICATE KEY UPDATE")]),s._v(":该语句是基于主键（PRIMARY KEY）或唯一索引（UNIQUE INDEX）使用的。 如果已存在该唯一标示或主键就更新；如果不存在该唯一标示或主键则作为新行插入。")])]),a("h2",[s._v("加快"),a("code",{pre:!0},[s._v("ALTER TABLE")]),s._v("的速度")]),a("p",[s._v("影子拷贝：用要求的表结构创建一张和源表无关的新表，然后通过重命名和删表操作交换两张表")]),a("h1",[s._v("5 创建高性能的索引")]),a("blockquote",[a("p",[a("code",{pre:!0},[s._v("ORM")]),s._v("：对象关系映射")])]),a("h2",[s._v("索引基础")]),a("ul",[a("li",[s._v("B-Tree 索引 "),a("ul",[a("li",[s._v("适用于全键值、键值范围或键前缀查找")]),a("li",[s._v("限制")])])]),a("li",[s._v("哈希索引 "),a("ul",[a("li",[s._v("无法用于排序")])])]),a("li",[s._v("空间数据索引")]),a("li",[s._v("全文索引")])]),a("h2",[s._v("高性能索引策略")]),a("p",[s._v("==page 153 ~ 182 跳过==")]),a("h2",[s._v("索引案例学习")]),a("ul",[a("li",[s._v("支持多个过滤条件")]),a("li",[s._v("避免多个范围条件 "),a("ul",[a("li",[s._v("范围条件查询和多个等值条件查询")])])]),a("li",[s._v("优化排序")])]),a("h2",[s._v("维护索引和表")]),a("h1",[s._v("6 查询性能优化")]),a("p",[s._v("要优化查询，实际上要优化子任务：要么消除其中一些子任务，要么减少子任务的执行次数，要么让子任务运行的更快")]),a("h2",[s._v("优化数据访问")]),a("p",[s._v("每次看到"),a("code",{pre:!0},[s._v("SELECT *")]),s._v("都要问问自己，这样真的必要吗？")]),a("ul",[a("li",[s._v("响应时间")]),a("li",[s._v("扫描行数与返回行数")]),a("li",[s._v("扫描行数与访问类型 "),a("ul",[a("li",[a("strong",[s._v("要明白一下是怎么回事")]),a("ul",[a("li",[s._v("扫描表")]),a("li",[s._v("扫描索引")]),a("li",[s._v("范围访问")]),a("li",[s._v("单值访问")])])])])])]),a("h2",[s._v("重构查询方式")]),a("ul",[a("li",[s._v("切分查询（分治法）")]),a("li",[s._v("分解关联查询")])]),a("h2",[s._v("查询执行的基础")]),a("ol",[a("li",[s._v("客户端发送一条查询给服务器")]),a("li",[s._v("服务器先检查缓存，如果命中了缓存，则立刻返回储存在缓存中的结果。否则进入下一阶段")]),a("li",[s._v("服务器进行"),a("code",{pre:!0},[s._v("SQL")]),s._v("解析、预处理，再由优化器生成对应的执行计划")]),a("li",[a("code",{pre:!0},[s._v("MySQL")]),s._v("根据优化器生成的执行计划，调用存储引擎的"),a("code",{pre:!0},[s._v("API")]),s._v("来执行查询")]),a("li",[s._v("将结果返回给客户端")])]),a("p",[a("code",{pre:!0},[s._v("MySQL")]),s._v("客户端/服务器之间的通信协议是半双工的")]),a("p",[s._v("查询状态 page 207")]),a("p",[s._v("一些能够处理的优化类型 page 211")]),a("p",[a("strong",[s._v("MySQL如何关联查询")]),s._v(" page 216 图")]),a("h2",[s._v("查询优化器的提示")]),a("h2",[s._v("优化特定类型的查询")]),a("h2",[s._v("案例")]),a("ul",[a("li",[s._v("使用MySQL构建一个队列表")]),a("li",[s._v("计算两点之间的距离")]),a("li",[s._v("使用用户自定义函数")])]),a("h1",[s._v("7 MySQL高级特性")]),a("p",[s._v("==跳过==")]),a("h1",[s._v("8 优化服务器设置")]),a("p",[s._v("配置MySQL，应当从理解MySQL内核和行为开始")])])}],E={},T=Object(i["a"])(E,S,C,!1,null,null,null),P=T.exports,A=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},I=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("ul",[a("li",[s._v("应用层（Application Layer）")]),a("li",[s._v("传输层（Transport Layer）")]),a("li",[s._v("网络层（Network Layer）")]),a("li",[s._v("数据链路层（Data Link Layer）")]),a("li",[s._v("物理层（Physical Layer）")])]),a("h1",[s._v("1 计算机网络和因特网")]),a("h2",[s._v("什么是因特网")]),a("p",[s._v("端系统通过通信链路和分组交换机连接到一起")]),a("ul",[a("li",[s._v("分组")]),a("li",[s._v("分组交换机 "),a("ul",[a("li",[s._v("路由器")]),a("li",[s._v("链路层交换机")])])]),a("li",[s._v("因特网服务提供商：ISP")])]),a("p",[s._v("因特网的主要协议统称为：TCP/IP")]),a("hr"),a("ul",[a("li",[s._v("分布式应用程序：涉及多个交换数据的端系统")]),a("li",[s._v("套接字接口")])]),a("hr"),a("ul",[a("li",[s._v("什么是协议 "),a("ul",[a("li",[s._v("人类协议")]),a("li",[s._v("网络协议")]),a("li",[a("strong",[s._v("协议定义了在两个或多个通信实体之间交换的报文的格式和顺序，以及报文发送和/或接收一条报文或其他事件所采取的动作")])])])]),a("li",[s._v("掌握计算机网络领域知识的过程就是理解网络协议的构成、原理和工作方式的过程")])]),a("hr"),a("h2",[s._v("网络边缘")]),a("ul",[a("li",[s._v("接入网：指端系统物理连接到其边缘路由器的网络 "),a("ul",[a("li",[s._v("家庭接入：DSL（数字用户线）、电缆、FTTH、拨号和卫星 "),a("ul",[a("li",[s._v("DSL")]),a("li",[s._v("电缆因特网接入（cable Internet access） "),a("ul",[a("li",[s._v("混合光纤同轴系统")]),a("li",[s._v("共享广播媒体")])])]),a("li",[s._v("光纤到户（Fiber To The House） "),a("ul",[a("li",[s._v("主动光线网络：本质解释交换因特网")]),a("li",[s._v("被动光纤网络(Passive Optical Network)")])])])])]),a("li",[s._v("企业（和家庭）接入：以太网和WiFi")]),a("li",[s._v("广域无线接入：3G和LTE（Long-Term Evolution）")])])])]),a("hr"),a("ul",[a("li",[s._v("物理媒体 "),a("ul",[a("li",[s._v("导引型媒体：电波沿着固体媒体前行 "),a("ul",[a("li",[s._v("双绞铜线")]),a("li",[s._v("同轴电缆")]),a("li",[s._v("光纤")]),a("li",[s._v("陆地无线电信道")]),a("li",[s._v("卫星无线电信道")])])]),a("li",[s._v("非导引型媒体")])])])]),a("hr"),a("h2",[s._v("网络核心")]),a("ul",[a("li",[s._v("分组交换 "),a("ul",[a("li",[s._v("存储转发分组")]),a("li",[s._v("排队时延和分组丢失")]),a("li",[s._v("转发表和路由选择协议")])])]),a("li",[s._v("电路交换：端到端连接，传统电话网络 "),a("ul",[a("li",[s._v("复用：对于FDM，每条电路连续的得到部分带宽；对于TDM，每条电路在短时间间隔（即时隙）中周期性地得到所有带宽")])])]),a("li",[s._v("网络的网络")])]),a("hr"),a("h2",[s._v("分组交换网中的时延、丢包和吞吐量")]),a("ul",[a("li",[s._v("时延类型 "),a("ul",[a("li",[s._v("处理时延")]),a("li",[s._v("排队时延")]),a("li",[s._v("传输时延：路由器推出分组所需要的时间")]),a("li",[s._v("传播时延：路由器之间距离的函数")])])]),a("li",[s._v("排队时延和丢包 "),a("ul",[a("li",[a("strong",[s._v("流量强度")]),s._v("：比特到达队列的平均速率/传输速率")]),a("li",[s._v("设计系统时流量强度不能大于1")])])]),a("li",[s._v("端到端时延 "),a("ul",[a("li",[s._v("处理时延+传输时延+传播时延")])])]),a("li",[s._v("吞吐量 "),a("ul",[a("li",[s._v("瓶颈链路的传输速率")])])])]),a("hr"),a("h2",[s._v("协议层次及其服务模型")]),a("ul",[a("li",[s._v("协议分层 "),a("ul",[a("li",[s._v("5层互联网协议栈：应用层、传输层、网络层、链路层、物理层")])])]),a("li",[s._v("封装 "),a("ul",[a("li",[s._v("一个分组具有两种类型的字段：首部字段和有效载荷字段")])])])]),a("hr"),a("p",[s._v("面对攻击的网络")]),a("h1",[s._v("2 应用层")]),a("h2",[s._v("应用层协议原理")]),a("ul",[a("li",[s._v("客户-服务器体系结构 "),a("ul",[a("li",[s._v("有一个总是打开的主机称为服务器，具有固定的、周知的地址（IP地址）")]),a("li",[s._v("客户之间不直接通信")])])]),a("li",[s._v("P2P体系结构 "),a("ul",[a("li",[s._v("自扩展性")])])])]),a("hr"),a("p",[s._v("两个不同端系统上的进程，通过跨越计算机网络交换报文而相互通信")]),a("p",[a("strong",[s._v("在一对进程间的通信会话场景中，发起通信的进程被标识为客户，在会话开始时等待联系的进程是服务器")])]),a("ul",[a("li",[s._v("进程与计算机网络之间的接口")])]),a("p",[s._v("进程通过一个称为"),a("strong",[s._v("套接字")]),s._v("的软件接口向网络发送报文和从网络接收报文")]),a("p",[s._v("套接字也称为应用程序和网络之间的"),a("strong",[s._v("应用程序编程接口")]),s._v("（Application Programming Interface API）或者说是应用程序进程与运输层协议之间的接口 ==Page 59 2.1.3 第一段==")]),a("ul",[a("li",[s._v("进程寻址 "),a("ul",[a("li",[s._v("主机地址：IP地址")]),a("li",[s._v("在目的主机中指定接收进程的标识符：目的地端口号")])])])]),a("hr"),a("ul",[a("li",[s._v("可供应用程序使用的运输服务 "),a("ul",[a("li",[s._v("可靠数据传输 "),a("ul",[a("li",[s._v("容忍丢失的应用")])])]),a("li",[s._v("吞吐量 "),a("ul",[a("li",[s._v("带宽敏感的应用")]),a("li",[s._v("弹性应用")])])]),a("li",[s._v("定时")]),a("li",[s._v("安全性")])])])]),a("hr"),a("ul",[a("li",[s._v("因特网提供的运输服务 "),a("ul",[a("li",[s._v("TCP服务 "),a("ul",[a("li",[s._v("面向连接的服务")]),a("li",[s._v("可靠的数据传送服务")]),a("li",[s._v("TCP安全：在应用层上实现的强化——安全套接字层（Secure Sockets Layer SSL）")])])]),a("li",[s._v("UDP服务")])])])]),a("hr"),a("ul",[a("li",[s._v("应用层协议定义了运行在不同端系统上的应用程序进程如何相互传递报文 "),a("ul",[a("li",[s._v("交换的报文类型")]),a("li",[s._v("各种报文类型的语法")]),a("li",[s._v("字段的语义")]),a("li",[s._v("确定一个进程何时以及如何发送报文，对报文进行响应的规则")])])]),a("li",[a("strong",[s._v("应用层协议只是网络应用的一部分")])])]),a("h2",[s._v("Web和HTTP")]),a("p",[s._v("HTTP概况")]),a("p",[s._v("Web的应用层协议是"),a("strong",[s._v("超文本传输协议")])]),a("p",[s._v("Web页面是由对象组成的")]),a("p",[s._v("HTTP使用TCP作为它的支撑运输协议")]),a("p",[s._v("HTTP服务器不保存关于客户的任何信息，所以说HTTP是一个"),a("strong",[s._v("无状态协议")])]),a("hr"),a("ul",[a("li",[s._v("采用非持续连接的HTTP")]),a("li",[s._v("采用持续连接的HTTP")])]),a("hr"),a("ul",[a("li",[s._v("HTTP报文格式 "),a("ul",[a("li",[s._v("HTTP请求报文 "),a("ul",[a("li",[s._v("请求行")]),a("li",[s._v("首部行")])])]),a("li",[s._v("HTTP响应报文 "),a("ul",[a("li",[s._v("初始状态行")]),a("li",[s._v("首部行")]),a("li",[s._v("实体体")])])])])])]),a("hr"),a("p",[s._v("用户与服务器的交互：cookie")]),a("p",[s._v("允许站点对用户进行跟踪")]),a("p",[s._v("用户首次访问一个站点时，可能需要提供一个用户标识；后继会话中，浏览器向服务器传递一个cookie首部，从而向该服务器标识了用户。")]),a("hr"),a("p",[s._v("Web缓存")]),a("ul",[a("li",[s._v("Web缓存器也叫代理服务器")]),a("li",[s._v("大大减小对客户请求的响应时间")]),a("li",[s._v("大大减少一个机构的接入链路到因特网的通信量")])]),a("hr"),a("p",[s._v("条件GET方法")]),a("ul",[a("li",[s._v("允许缓存器证实它的对象是最新的 "),a("ul",[a("li",[s._v("请求报文中使GET方法")]),a("li",[s._v("请求报文中包含一个"),a("code",{pre:!0},[s._v("If-Modified-Since")]),s._v("行")])])]),a("li",[s._v("状态行为 301 Not Modified")])]),a("hr"),a("h2",[s._v("因特网中的电子邮件")]),a("ul",[a("li",[s._v("用户代理")]),a("li",[s._v("邮件服务器")]),a("li",[s._v("简单邮件传输协议")])]),a("hr"),a("p",[s._v("SMTP")]),a("ul",[a("li",[s._v("SMTP一般不使用中间邮件服务器发送邮件")]),a("li",[s._v("使用的是持续连接")])]),a("p",[s._v("与HTTP对比")]),a("ul",[a("li",[s._v("HTTP是一个拉协议，SMTP是一个推协议")]),a("li",[s._v("SMTP要求每一个报文采用7比特ASCII码格式")]),a("li",[s._v("HTTP把每个对象封装到它自己的HTTP响应报文中，而SMTP吧所有报文对象放在一个报文之中")])]),a("hr"),a("p",[s._v("邮件访问协议")]),a("ul",[a("li",[s._v("POP3 "),a("ul",[a("li",[s._v("特许")]),a("li",[s._v("事务处理")]),a("li",[s._v("更新")])])]),a("li",[s._v("IMAP")]),a("li",[s._v("基于Web的电子邮件")])]),a("hr"),a("h2",[s._v("DNS：因特网的目录服务")]),a("p",[s._v("DNS（域名系统，Domain Name System)")]),a("ul",[a("li",[s._v("一个由分层的DNS服务器实现的分布式数据库")]),a("li",[s._v("一个使得主机能够查询分布式数据库的"),a("strong",[s._v("应用层协议")])])]),a("p",[s._v("提供了什么服务？")]),a("ul",[a("li",[s._v("将用户提供的主机名解析为IP地址")]),a("li",[s._v("主机别名")]),a("li",[s._v("邮件服务器别名")]),a("li",[s._v("负载分配")])]),a("hr"),a("p",[s._v("DNS工作机理")]),a("p",[s._v("有三种类型的DNS服务器：")]),a("ul",[a("li",[s._v("根DNS服务器：提供了TLD服务器的IP地址")]),a("li",[s._v("顶级域（Top-Level Domain）DNS服务器：提供了权威DNS服务器的IP地址")]),a("li",[s._v("权威DNS服务器")])]),a("p",[s._v("本地DNS服务器")]),a("p",[s._v("DNS缓存")]),a("hr"),a("p",[s._v("DNS记录和报文")]),a("ul",[a("li",[s._v("DNS报文")]),a("li",[s._v("在DNS数据库中插入记录")])]),a("hr"),a("h2",[s._v("P2P文件分发")]),a("ul",[a("li",[s._v("P2P体系结构的扩展性")]),a("li",[a("code",{pre:!0},[s._v("BitTorrent")])])]),a("hr"),a("h2",[s._v("视频流和内容分发网")]),a("p",[s._v("目前为止，对流式视频最为重要的性能度量是平均端到端吞吐量")]),a("p",[s._v("Dynamic Adaptive Stream over HTTP, DASH 经HTTP的动态适应流")]),a("ul",[a("li",[s._v("内容分发网 "),a("ul",[a("li",[s._v("两种服务器安置原则 "),a("ul",[a("li",[s._v("深入")]),a("li",[s._v("邀请做客")])])]),a("li",[s._v("CDN操作")]),a("li",[s._v("集群选择策略：动态地将客户定向到CDN中的某个服务器集群或数据中心的机制")])])])]),a("hr"),a("h2",[s._v("套接字实验")]),a("p",[s._v("Web服务器：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-python"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" socket "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" *\n\nserverSocket = socket(AF_INET, SOCK_STREAM)\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# prepare a server socket")]),s._v("\nserverPort = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12000")]),s._v("\nserverSocket.bind(("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"192.168.1.7"')]),s._v(", serverPort))\n\nserverSocket.listen("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")\nprint("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"The server is ready to receive..."')]),s._v(")\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(":\n    connectionSocket, addr = serverSocket.accept()\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(":\n        message = connectionSocket.recv("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1024")]),s._v(")\n        filename = message.split()["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("]\n        print(filename["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(":])\n        f = open(filename["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(":])\n        outputData = f.read()\n        "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# send one http header line into socket")]),s._v("\n        header = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"HTTP/1.1 200 OK\\r\\n\\r\\n"')]),s._v("\n        connectionSocket.send(header.encode())\n        "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# send the content of the requested file to the client")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" range("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", len(outputData)):\n            connectionSocket.send(outputData[i].encode())\n\n        connectionSocket.close()\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("except")]),s._v(" IOError:\n        "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# send respond message for file not found")]),s._v("\n        header = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" HTTP/1.1 404 Not Found"')]),s._v("\n        connectionSocket.send(header.encode())\n\n        "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# close client socket")]),s._v("\n        connectionSocket.close()\n\nserverSocket.close()\n\n")])]),a("p",[s._v("UDP ping 程序")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-python"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# client")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" datetime\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" socket "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" *\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" statistics\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" time\n\nserverName = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'192.168.1.7'")]),s._v("\nserverPort = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12000")]),s._v("\nMAX_ATTEMPTS = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v("\nSOCKET_TIMEOUT = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n\nrtts = []\nreceivedPackets = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\nsentPackets = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("in")]),s._v(" range(MAX_ATTEMPTS):\n    sentPackets += "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n    startTime = datetime.datetime.now()\n    msg = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Ping {} {}"')]),s._v(".format(i+"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", startTime.strftime("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"%H:%M:%S"')]),s._v("))\n\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("with")]),s._v(" socket(AF_INET, SOCK_DGRAM) "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("as")]),s._v(" s:\n        s.settimeout(SOCKET_TIMEOUT)\n        s.sendto(msg.encode(), (serverName, serverPort))\n\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(":\n            message, addr = s.recvfrom("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1024")]),s._v(")\n            receiveTime = datetime.datetime.now()\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("except")]),s._v(" timeout:\n            print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Request {} time out"')]),s._v(".format(i+"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("))\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(":\n            delta = (receiveTime - startTime) / datetime.timedelta(microseconds="),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1000")]),s._v(")\n            rtts.append(delta)\n            receivedPackets += "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("\n            print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Ping {} {} {} ms"')]),s._v(".format(i+"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(",\n                                            startTime.strftime("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"%H:%M:%S"')]),s._v("),\n                                            str(delta)))\n\npacket_loss = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100")]),s._v(" * (float(receivedPackets) / float(sentPackets))\n\nprint("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"\\n--- {} ping statistics ---"')]),s._v(".format(serverName))\nprint("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"{} packets transmitted, {} received, {}% packet loss"')]),s._v(".format(sentPackets, receivedPackets, packet_loss))\nprint("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"rtt min/avg/max = {:.3f}/{:.3f}/{:.3f} ms"')]),s._v(".format(min(rtts), statistics.median(rtts), max(rtts)))\n")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-python"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# serverimport random")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("from")]),s._v(" socket "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" *\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Create a UDP socket")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Notice the use of SOCK_DGRAM for UDP packets")]),s._v("\nserverSocket = socket(AF_INET, SOCK_DGRAM)\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Assign IP address and port number to socket")]),s._v("\nserverSocket.bind(("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'192.168.1.7'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12000")]),s._v("))\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("True")]),s._v(":\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Generate random number in the range of 0 to 10")]),s._v("\n    rand = random.randint("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(")\n\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Receive the client packet along with the address it is coming from")]),s._v("\n    message, address = serverSocket.recvfrom("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1024")]),s._v(")\n\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# Capitalize the message from the client")]),s._v("\n    message = message.decode().upper()\n\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("# If rand is less is than 4, we consider the packet lost and do not")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" rand < "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(":\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("continue")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(":\n        serverSocket.sendto(message.encode(), address)\n")])]),a("h1",[s._v("3 运输层")]),a("h2",[s._v("概述和运输层服务")]),a("p",[s._v("运输层协议为运行在不同主机上的应用进程之间提供了"),a("strong",[s._v("逻辑通信")]),s._v("功能（而非物理）")]),a("p",[s._v("运输层协议是在端系统中而不是路由器中实现的，==运输层协议只在工作在端系统中==（Page 123 家庭的例子）在端系统中，运输层协议将来自应用进程的报文移动到网络边缘（网络层）")]),a("p",[s._v("网路路由器仅作用于该数据报的网络层字段，即他们不检查封装在该数据报的运输层报文段的字段")]),a("p",[s._v("本书中将TCP和UDP的分组统称为报文段，而将数据报名称保留给网络层分组")]),a("p",[s._v("两种最低限度的运输层服务（同时也是UDP所能提供的仅有的两种服务）：")]),a("ul",[a("li",[s._v("进程到进程的数据交付")]),a("li",[s._v("差错检查")])]),a("hr"),a("h2",[s._v("多路复用与多路分解")]),a("p",[s._v("多路分解：将运输层报文段中的数据交付到正确的套接字的工作")]),a("p",[s._v("多路复用：在源主机从不同套接字中收集数据块，并为每个数据块封装上首部信息，从而生成报文段，然后将报文段传递到网络层")]),a("p",[s._v("一个UDP套接字是由一个二元组全面标识的，该二元组包含一个目的IP地址和一个目的的端口号")]),a("p",[s._v("TCP套接字是由一个四元组（源IP地址，源端口号，目的IP地址，目的端口号）来标识的")]),a("p",[s._v("如今高性能的Web服务器通常只使用一个进程，但为每个新的客户连接传建一个具有新连接套接字的新线程")]),a("hr"),a("h2",[s._v("无连接运输：UDP")]),a("p",[s._v("使用UDP时，在发送报文段之前，发送方和接收方的运输层实体之间没有握手")]),a("p",[s._v("UDP优点（Page 131）：")]),a("ul",[a("li",[s._v("关于发送什么数据以及何时发送的应用层控制更为精细")]),a("li",[s._v("无需建立连接")]),a("li",[s._v("无连接状态")]),a("li",[s._v("分组首部开销小")])]),a("p",[s._v("多媒体应用开发人员会将因特网电话、视频会议等实时应用运行在UDP之上，因为TCP的拥塞控制会是它们的性能变得很差，即使如此，在UDP上运行多媒体是有争议的。")]),a("p",[s._v("在端到端基础上在运输层提供差错检测")]),a("hr"),a("h2",[s._v("*可靠数据传输协议")]),a("p",[s._v("可靠数据传输协议的下层协议也许是不可靠的")]),a("p",[s._v("FSM描述")]),a("ul",[a("li",[a("p",[s._v("经完全可靠信道的可靠数据传输")])]),a("li",[a("p",[s._v("经具有比特差错信号的可靠数据传输")]),a("ul",[a("li",[s._v("肯定确认与否定确认")]),a("li",[s._v("停等协议")])])]),a("li",[a("p",[s._v("经具有比特差错的丢包信道的可靠数据传输")]),a("ul",[a("li",[s._v("倒计数计时器")]),a("li",[s._v("比特交替协议")])])]),a("li",[a("p",[s._v("流水线可靠数据传播协议：以不停等方式运行")])])]),a("p",[s._v("解决流水线的差错恢复基本方法：")]),a("ul",[a("li",[s._v("回退N步（GBN）协议 "),a("ul",[a("li",[s._v("又被称为滑动窗口协议")])])]),a("li",[s._v("选择重传 "),a("ul",[a("li",[s._v("窗口长度必须小于序号空间大小的一半")])])])]),a("hr"),a("h2",[s._v("面向连接的运输：TCP")]),a("ul",[a("li",[s._v("面向连接的")]),a("li",[s._v("全双工服务")]),a("li",[s._v("点对点")]),a("li",[s._v("三次握手")]),a("li",[a("strong",[s._v("TCP的组成包括：一台主机上的缓存、变量和与进程连接的套接字，以及另一台主机上的另一组缓存、变量和与进程连接的套接字")])])]),a("hr"),a("p",[s._v("TCP报文段结构 Page 154 图")]),a("ul",[a("li",[s._v("序号：该报文段首字节的字节流的编号")]),a("li",[s._v("确认号：主机A填充进报文段的"),a("strong",[s._v("确认号")]),s._v("是主机A期望从主机B收到的下一字节的"),a("strong",[s._v("序号")])])]),a("p",[s._v("主机一条TCP连接中接收到失序报文段时怎么办？")]),a("p",[s._v("TCP中没有确定详细的规则，好的方法是接收方保留失序的字节，并等待缺少的字节以填补该间隔")]),a("p",[s._v("学习案例：Telnet（==关于三次握手在确认号和序号方面的解释==）")]),a("hr"),a("p",[s._v("往返时间的估计与超时")]),a("ol",[a("li",[s._v("估计往返时间")])]),a("p",[s._v("报文段的样本RTT就是从某报文段被发（即交到IP）到对该报文段的确认被收到之间的时间量")]),a("p",[s._v("大部分TCP的实现并不是为每个发送的报文段测量一个"),a("code",{pre:!0},[s._v("SampleRTT")])]),a("p",[a("code",{pre:!0},[s._v("EstimatedRTT = (1 - α) · EstimatedRTT + α · SampledRTT")])]),a("p",[s._v("同时测量RTT的变化也是很有价值的")]),a("p",[a("code",{pre:!0},[s._v("DevRTT = (1 - β) · DevRTT + β · |EstiamtedRTT - SampledRTT|")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("设置和管理重传超时间隔")])]),a("p",[a("code",{pre:!0},[s._v("TimeoutInterval = EstimatesRTT + 4 · DevRTT")])]),a("hr"),a("p",[s._v("可靠数据传输")]),a("p",[s._v("累计确认")]),a("ol",[a("li",[a("p",[s._v("一些有趣的情况 Page 161")])]),a("li",[a("p",[s._v("超时时间加倍：每个发送方的重传都是经过越来越长的时间间隔后进行的")])]),a("li",[a("p",[s._v("快速重传")]),a("p",[s._v("冗余ACK：再次确认某个报文段的ACK")]),a("p",[s._v("一旦收到3个冗余ACK，TCP就执行快速重传")])]),a("li",[a("p",[s._v("回退N步还是选择重传？")]),a("blockquote",[a("p",[s._v("对TCP提出的一种修改意见是所谓的"),a("strong",[s._v("选择确认")]),s._v("， 它允许TCP接收方有选择地确认最后一个正确接收的有序报文段。")])])])]),a("hr"),a("p",[s._v("流量控制")]),a("p",[s._v("流量控制服务实际是一个速度匹配服务，即发送方的发送速率与接收方应用程序的读取速率相匹配")]),a("p",[a("em",[s._v("流量控制和拥塞控制是针对完全不同的原因而采取的措施")])]),a("p",[s._v("前提："),a("code",{pre:!0},[s._v("LastByteRcvd - LastByteRead <= RcvBuffer")])]),a("p",[s._v("发送方主机A："),a("code",{pre:!0},[s._v("LastByteSent - LastByteAcked <= rwnd")])]),a("p",[a("code",{pre:!0},[s._v("rwnd")]),s._v(" 是主机B的空闲空间")]),a("p",[s._v("当主机B的接收窗口为0时，主机A继续发送只有一个字节数据的报文段")]),a("hr"),a("p",[s._v("TCP连接管理")]),a("p",[s._v("3次握手详解")]),a("p",[s._v("4次挥手")]),a("hr"),a("h2",[s._v("*拥塞控制原理")]),a("ol",[a("li",[a("p",[s._v("情况1：两个发送方和一台具有无穷大缓存的路由器")]),a("p",[s._v("当分组的到达速率接近链路容量时，分组经历巨大的排队时延")])]),a("li",[a("p",[s._v("情况2：两个发送方和一台具有有限缓存的路由器")]),a("p",[s._v("发送方必须执行重传以补偿因为缓存溢出而丢弃（丢失）的分组")]),a("p",[s._v("发送方在遇到大时延时所进行的不必要重传会引起路由器利用其链路带宽来转发不必要的副本")])]),a("li",[a("p",[s._v("情况3：四个发送方和具有有限缓存的台路由器及多跳路径")]),a("p",[s._v("当一个分组眼一条路径被丢弃时，每个上游路由器用于转发该分组到丢弃该分组而使用的传输容量最终被浪费掉了")])])]),a("hr"),a("ul",[a("li",[s._v("拥塞控制方法 "),a("ul",[a("li",[s._v("端到端拥塞控制（TCP采用）")]),a("li",[s._v("网络辅助的拥塞控制 "),a("ul",[a("li",[s._v("直接网络反馈")]),a("li",[s._v("路由器标记或更新从发送方流向接收方的分组中的某个字段来指示拥塞的产生")])])])])])]),a("hr"),a("h2",[s._v("TCP拥塞控制")]),a("ol",[a("li",[s._v("TCP发送方如何限制向其连接发送流量的？")])]),a("p",[s._v("运行在发送方的TCP拥塞控制机制跟踪一个额外的变量——"),a("strong",[s._v("拥塞窗口")]),s._v("（"),a("code",{pre:!0},[s._v("cwnd")]),s._v("）")]),a("p",[s._v("在发送中未被确认的数据量不会超过"),a("code",{pre:!0},[s._v("cwnd")]),s._v("和"),a("code",{pre:!0},[s._v("rwnd")]),s._v("中的最小值")]),a("p",[s._v("==假设"),a("code",{pre:!0},[s._v("rwnd")]),s._v("足够大==，则有："),a("code",{pre:!0},[s._v("LastByteSent - LastByteAcked <= cwnd")])]),a("p",[s._v("通过调节"),a("code",{pre:!0},[s._v("cwnd")]),s._v("的值，发送方能调整它向连接发送数据的速率")]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("TCP发送方是如何感知它与目的地之间的路径出现了拥塞的？")])]),a("p",[s._v("出现丢包事件")]),a("p",[s._v("将丢包事件定义为：出现超时或者"),a("strong",[s._v("三次冗余ACK")]),s._v("（3.5.4）")]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("TCP发送方怎样确定它应当发送的速率呢？")])]),a("ul",[a("li",[s._v("一个丢失的报文段意味着拥塞，因此当丢失报文段的时候应当适当降低TCP发送方的速率")]),a("li",[s._v("一个确认报文段指示该网络正在向接收方交付发送方的报文段，因此当对先前未确认的报文段的确认到达时，能够增加发送方的速率")]),a("li",[s._v("带宽探测")])]),a("hr"),a("p",[s._v("TCP拥塞控制算法")]),a("p",[a("em",[s._v("TCP分岔：优化云服务的性能")])]),a("p",[s._v("MSS： Maximum Segment Size")]),a("ul",[a("li",[a("p",[s._v("慢启动")]),a("p",[s._v("每经过一个RTT，发送速率就翻番（指数增长）")]),a("p",[s._v("什么时候停止：")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("cwnd")]),s._v("超过阈值时，结束慢启动转移到拥塞避免模式")]),a("li",[s._v("检测到3个冗余ACK，TCP执行一种快速重传，并进入快速回复状态")])])]),a("li",[a("p",[s._v("拥塞避免")]),a("p",[s._v("线性增长")]),a("p",[a("code",{pre:!0},[s._v("cwnd = cwnd + MSS · (MSS / cwnd)")])])]),a("li",[a("p",[s._v("快速恢复")]),a("p",[s._v("对收到的每个冗余的ACK，"),a("code",{pre:!0},[s._v("cwnd")]),s._v("的值增加一个MSS；最终，当对丢失报文段的一个ACK到达时，TCP在降低"),a("code",{pre:!0},[s._v("cwnd")]),s._v("之后（降低多少不同版本不一样）进入拥塞避免状态")])]),a("li",[a("p",[s._v("回顾")]),a("p",[s._v("加性增、乘性减（Additive-Increase, Multiplicative-Decrease, AIMD）")])]),a("li",[a("p",[s._v("对TCP吞吐量的宏观描述")])]),a("li",[a("p",[s._v("经高带宽路径的TCP")])])]),a("hr"),a("p",[s._v("公平性")]),a("p",[s._v("明确拥塞通告（Explicit Congestion Notification, ECN）：网络辅助拥塞控制")]),a("p",[s._v("TCP友好速率控制（TCP-Friendly Rated Control, TFRC）")]),a("hr"),a("h2",[s._v("实现一个可靠运输协议")]),a("p",[s._v("实验指导书：https://media.pearsoncmg.com/aw/aw_kurose_network_3/labs/lab5/lab5.html")]),a("h1",[s._v("4 网络层：数据平面")]),a("h2",[s._v("网络层概述")]),a("p",[s._v("路由器不运行应用层和运输层协议")]),a("p",[s._v("两种重要的网络层功能：")]),a("ul",[a("li",[s._v("转发 "),a("ul",[a("li",[s._v("数据平面中实现的唯一功能")]),a("li",[a("strong",[s._v("指将分组从一个输入链路接口转移到适当的输出链路接口的路由器本地动作")])])])]),a("li",[s._v("路由选择 "),a("ul",[a("li",[s._v("控制平面中实现")]),a("li",[a("strong",[s._v("指确定分组从源到目的地所采取的端到端路径的网络范围处理过程")])])])])]),a("p",[s._v("转发表——每台网络路由器中的关键元素")]),a("hr"),a("p",[s._v("网络服务模型")]),a("p",[s._v("因特网：尽力而为服务模型与适当带宽供给相结合")]),a("hr"),a("h2",[s._v("路由器工作原理")]),a("p",[s._v("硬件实现：")]),a("ul",[a("li",[s._v("输入端口")]),a("li",[s._v("交换结构")]),a("li",[s._v("输出端口")]),a("li",[s._v("路由选择处理器")])]),a("hr"),a("p",[s._v("输入端口原理与基于目的地转发")]),a("p",[s._v("-> 线路端接 -> 数据链路处理（协议、拆封）-> 查找、转发、排队 -> 交换结构")]),a("p",[s._v("分组目的地址的前缀进行匹配")]),a("p",[s._v("最长前缀匹配规则")]),a("hr"),a("p",[s._v("交换")]),a("p",[s._v("方式：")]),a("ul",[a("li",[s._v("内存")]),a("li",[s._v("总线")]),a("li",[s._v("纵横式（经互联网交换）：非阻塞的")])]),a("hr"),a("p",[s._v("何时会出现排队？")]),a("ul",[a("li",[s._v("输入排队 & 输出排队")])]),a("hr"),a("p",[s._v("分组调度")]),a("ul",[a("li",[s._v("先进先出")]),a("li",[s._v("优先权排队 "),a("ul",[a("li",[s._v("在非抢占式优先权排队规则下，一旦分组开始传输，就不能打断")])])]),a("li",[s._v("循环和加权公平排队")])]),a("hr"),a("h2",[s._v("*网际协议")]),a("p",[s._v("IPv4数据报格式")]),a("ul",[a("li",[s._v("版本")]),a("li",[s._v("首部长度")]),a("li",[s._v("服务类型")]),a("li",[s._v("数据报长度")]),a("li",[s._v("标识、标志、片偏移")]),a("li",[s._v("寿命")]),a("li",[s._v("协议：协议号是将网络层与运输层绑定到一起的黏合剂，端口号是将运输层与应用层绑定到一起的黏合剂")]),a("li",[s._v("首部检验和")]),a("li",[s._v("源和目的IP地址")]),a("li",[s._v("选项")]),a("li",[s._v("数据（有效载荷）")])]),a("hr"),a("p",[s._v("IPv4数据报分片")]),a("p",[s._v("IPv4编址")]),a("p",[s._v("主机与物理链路之间的边界叫做接口")]),a("p",[s._v("从技术上将，一个IP地址与一个接口相关联，而不是与包括该接口的主机或路由器相关联")]),a("p",[s._v("子网：为了确定子网，分开主机和路由器的每个接口，产生几个隔离的网络岛，使用接口端接这些隔离的网络的端点。这些"),a("strong",[s._v("隔离")]),s._v("的网络中的每一个都叫做一个子网。")]),a("ol",[a("li",[a("p",[s._v("获取一块地址")])]),a("li",[a("p",[s._v("获取主机地址：动态主机配置协议")]),a("p",[s._v("DHCP（Dynamic Host Configuration）是一个四个步骤的过程：")]),a("ul",[a("li",[s._v("DHCP服务器发现")]),a("li",[s._v("DHCP服务器提供")]),a("li",[s._v("DHCP请求")]),a("li",[s._v("DHCK ACK")])])])]),a("hr"),a("p",[s._v("网络地址转换（Network Address Translation, NAT）")]),a("hr"),a("p",[s._v("IPv6")]),a("p",[s._v("相比IPv4的重大变化：")]),a("ul",[a("li",[s._v("扩大的地址容量")]),a("li",[s._v("简化高效的40字节首部")]),a("li",[s._v("流标签")])]),a("p",[s._v("IPv4到IPv6的迁移")]),a("p",[s._v("建隧道：将整个IPv6数据报放到一个IPv4数据报的数据（有效载荷）字段中")]),a("hr"),a("h2",[s._v("通用转发和SDN")]),a("p",[s._v("软件定义网络（Software Defined Network, SDN）")]),a("h1",[s._v("5 网络层：控制平面")]),a("h2",[s._v("概述")]),a("ul",[a("li",[s._v("路由器控制")]),a("li",[s._v("逻辑集中式控制")])]),a("hr"),a("h2",[s._v("*路由选择算法")]),a("p",[s._v("分类方式")]),a("ul",[a("li",[s._v("集中式/分散式路由选择算法")]),a("li",[s._v("静态/动态路由选择算法")]),a("li",[s._v("负载敏感/负载迟钝算法")])]),a("hr"),a("p",[s._v("链路状态路由选择算法（Link State, LS）")]),a("p",[s._v("当LS算法终止时，对于每个节点，我们都得到从源节点沿着它的最低开销路径的前一节点")]),a("hr"),a("p",[s._v("距离向量路由选择算法（Distance-Vector, DV）")]),a("p",[s._v("Bellman-Ford方程 $$ d_x(y)=min_v{c(x,v)+d_v(y)} $$")]),a("ol",[a("li",[s._v("链路开销改变与链路故障")]),a("li",[s._v("增加毒性逆转")])]),a("hr"),a("h2",[s._v("因特网中自治系统内部的路由选择：OSPF")]),a("p",[s._v("开放最短路优先（OSPF）")]),a("p",[s._v("使用OSPF时，路由器向自治系统内所有其他路由器广播路由选择信息，而不仅仅是向其相邻路由器广播")]),a("ul",[a("li",[s._v("安全")]),a("li",[s._v("多条相同开销的路径")]),a("li",[s._v("对单播与多播路由选择的综合支持")]),a("li",[s._v("支持在单个AS中的层次结构")])]),a("hr"),a("h2",[s._v("*ISP之间的路由选择：BGP")]),a("p",[s._v("在因特网中，所有的AS运行相同的AS间路由选择协议，称为边界网关协议（Broder Gateway Protocol, BGP）")]),a("p",[s._v("对于位于相同AS中的目的地而言，在路由器转发表中的表项由AS内部路由选择协议所决定；而对于位于该AS外部的目的地而言，需要用到BGP")]),a("hr"),a("p",[s._v("通告BGP路由信息")]),a("p",[s._v("网关路由器-位于AS边缘 / 内部路由器-仅连接自己AS中的主机和路由器")]),a("ul",[a("li",[s._v("BGP连接 "),a("ul",[a("li",[s._v("外部BGP")]),a("li",[s._v("内部BGP")])])])]),a("p",[s._v("Page 258 例子")]),a("hr"),a("p",[s._v("确定最好的路由")]),a("ul",[a("li",[a("p",[s._v("BGP属性")]),a("ul",[a("li",[s._v("AS-PATH：包含了已经通过了的AS的列表")]),a("li",[s._v("NEXT-HOP：AS-PATH起始的路由器接口的IP地址")])])]),a("li",[a("p",[s._v("热土豆路由选择")]),a("ul",[a("li",[s._v("对于某路由器，尽可能快地将分组送出其AS，而不担心其AS外部到目的地的余下部分的开销")])])]),a("li",[a("p",[s._v("路由器选择算法")]),a("ul",[a("li",[s._v("如果到相同前缀有两条或者多条路由，则顺序调用下列消除规则： "),a("ol",[a("li",[s._v("路由被指派一个本地偏好（本地偏好值是一种"),a("strong",[s._v("策略决定")]),s._v("）")]),a("li",[s._v("从余下的路由中选择具有最短AS-PATH的路由")]),a("li",[s._v("从余下的路由中使用热土豆路由选择")]),a("li",[s._v("仍有余下，则使用BGP标识符")])])])])])]),a("hr"),a("p",[s._v("IP任播")]),a("p",[s._v("IP任播被DNS系统广泛用于将DNS请求指向最近的根DNS服务器")]),a("hr"),a("p",[s._v("路由选择策略")]),a("p",[s._v("任何穿越某ISP主干网的流量必须是其源或目的（或两者）位于该ISP的某个客户网络中；不然的话这些流量将会免费搭车通过该ISP网络")]),a("hr"),a("h2",[s._v("SDN控制平面")]),a("ul",[a("li",[s._v("基于流的转发")]),a("li",[s._v("数据平面和控制平面分离")]),a("li",[s._v("网络控制功能：位于数据平面交换机外部")]),a("li",[s._v("可编程的网络")])]),a("hr"),a("p",[s._v("SDN控制器（自顶向下）：")]),a("ul",[a("li",[s._v("对于网络控制应用程序层的接口")]),a("li",[s._v("网络范围状态管理层")]),a("li",[s._v("通信层：SDN控制器和受控网络设备之间的通信（"),a("code",{pre:!0},[s._v("OpenFlow")]),s._v("协议）")])]),a("p",[s._v("数据平面与控制平面交互的例子 page 269")]),a("hr"),a("h2",[s._v("ICMP：互联网控制报文协议")]),a("p",[s._v("最典型的用途：差错报告")]),a("hr"),a("h2",[s._v("网络管理和SNMP")]),a("ul",[a("li",[s._v("管理服务器")]),a("li",[s._v("被管设备 "),a("ul",[a("li",[s._v("管理信息库")]),a("li",[s._v("网络管理代理")])])]),a("li",[s._v("网络管理协议 "),a("ul",[a("li",[s._v("简单网络管理协议（Simple Network Management Protocol, SNMP）")])])])]),a("h1",[s._v("6 链路层和局域网")]),a("h2",[s._v("链路层概述")]),a("p",[s._v("节点：运行链路层协议的任何设备")]),a("p",[s._v("链路：沿着通信路径连接相邻节点的通信信道")]),a("ul",[a("li",[s._v("链路层协议提供的可能服务： "),a("ul",[a("li",[s._v("成帧")]),a("li",[s._v("链路接入：媒体（媒介）访问控制（Medium Access Control, MAC）")]),a("li",[s._v("可靠交付")]),a("li",[s._v("差错检测和纠正")])])])]),a("p",[s._v("链路层的主体部分是在网络适配器（网络接口卡）中实现的，因此许多功能是在硬件中实现的")]),a("hr"),a("h2",[s._v("差错检测和纠正技术")]),a("ul",[a("li",[a("p",[s._v("奇偶校验")]),a("ul",[a("li",[s._v("二维奇偶校验：检测和纠正"),a("strong",[s._v("单个")]),s._v("比特差错")]),a("li",[s._v("前向纠错：接收方检测和纠正差错的能力")])])]),a("li",[a("p",[s._v("检验和")]),a("ul",[a("li",[s._v("运输层差错检验基于软件实现，采用简单而快速如检验和这趟的方案是重要的")])])]),a("li",[a("p",[s._v("循环冗余检测（CRC）")]),a("ul",[a("li",[a("p",[s._v("链路层差错检测在适配器中专用的硬件实现，能够快速执行更复杂的CRC操作")])]),a("li",[a("p",[s._v("page 292")])]),a("li",[a("p",[s._v("$$ R=remainder\\frac{D·2^r}{G} $$")])])])])]),a("hr"),a("h2",[s._v("多路访问链路和协议")]),a("p",[s._v("如何协调多个发送和接收节点对一个共享广播信道的访问，就是多路访问问题")]),a("ul",[a("li",[s._v("信道划分协议 "),a("ul",[a("li",[s._v("时分多路复用 TDM")]),a("li",[s._v("频分多路复用 FDM")]),a("li",[s._v("码分多址 CDMA "),a("ul",[a("li",[s._v("对每一个节点分配一种不同的编码，然后每个节点用它唯一的编码来对它发送的数据进行编码")])])])])]),a("li",[s._v("随机接入协议 "),a("ul",[a("li",[s._v("每个传输节点总是以信道的全部速率进行发送，当有碰撞时，涉及碰撞的每个阶段反复的重发它的帧，直到该帧无碰撞地通过为止 "),a("ul",[a("li",[s._v("时隙 ALOHA")]),a("li",[s._v("ALOHA")]),a("li",[s._v("载波侦听多路访问 CSMA")]),a("li",[s._v("具有碰撞检测的载波侦听多路访问")])])])])]),a("li",[s._v("轮流协议")]),a("li",[s._v("轮询协议 "),a("ul",[a("li",[s._v("令牌传递协议")])])]),a("li",[s._v("DOCSIS：用于电缆因特网接入的链路层协议")])]),a("hr"),a("h2",[s._v("交换局域网")]),a("p",[s._v("MAC地址")]),a("p",[s._v("并不是主机或路由器具有链路层地址，而是他们的适配器（即网络接口）具有链路层地址")]),a("p",[s._v("MAC地址具有扁平结构，无论适配器到哪里都不会发生变化")]),a("p",[s._v("地址解析协议 ARP")]),a("p",[s._v("网络层地址（IP）与链路层地址（MAC）之间相互转换")]),a("p",[s._v("DNS为在因特网中任何地方的主机解析主机名，而"),a("strong",[s._v("ARP只为在同一个子网上的主机和路由器接口解析IP地址")])]),a("p",[s._v("APR查询")]),a("ul",[a("li",[s._v("查询ARP报文是在广播帧中发送的，而响应ARP报文是在一个标准帧中发送")]),a("li",[s._v("ARP是即插即用的")]),a("li",[s._v("最好把ARP看成是跨越链路层和网络层边界两边的协议")])]),a("hr"),a("p",[s._v("以太网")]),a("p",[s._v("以太网帧结构")]),a("ul",[a("li",[s._v("数据字段")]),a("li",[s._v("目的地址")]),a("li",[s._v("源地址")]),a("li",[s._v("类型字段")]),a("li",[s._v("CRC")]),a("li",[s._v("前同步码")])]),a("hr"),a("p",[s._v("链路层交换机")]),a("ul",[a("li",[a("p",[s._v("交换机转发和过滤")]),a("p",[s._v("借助交换机表完成")])]),a("li",[a("p",[s._v("自学习")])]),a("li",[a("p",[s._v("性质")]),a("ul",[a("li",[s._v("消除碰撞")]),a("li",[s._v("异质的链路")]),a("li",[s._v("管理")])])]),a("li",[a("p",[s._v("交换机和路由器比较")]),a("ul",[a("li",[s._v("小网络：交换机就够了")]),a("li",[s._v("大网络：两者都用更加智能")])])])]),a("hr"),a("p",[s._v("虚拟局域网（VLAN）")]),a("p",[s._v("支持VLAN的交换机允许经一个单一的物理局域网基础设施定义多个虚拟局域网")]),a("p",[s._v("VLAN干线连接 + 802.1Q（一种扩展的以太网帧格式）")]),a("hr"),a("h2",[s._v("链路虚拟化：网络作为链路层")]),a("p",[s._v("多协议标签交换（Multiprotocol Label Switch, MPLS）")]),a("p",[s._v("固定长度标签")]),a("p",[s._v("MPLS基于标签执行交换，而不必考虑分组的IP地址")]),a("p",[s._v("已经被用于实现VPN")]),a("hr"),a("h2",[s._v("Web页面的请求过程")]),a("ol",[a("li",[a("p",[s._v("准备：DHCP、UDP、IP和以太网")]),a("p",[s._v("便携机与网络连接时，所采取的的一个网络相关的动作是运行DHCP协议，以从本地DHCP服务器获得一个IP地址以及其他信息")])]),a("li",[a("p",[s._v("仍在准备：DNS和ARP")]),a("p",[s._v("为了生成TCP套接字，需要使用DNS协议知道名字到IP地址的转换服务")])]),a("li",[a("p",[s._v("仍在准备：域内路由选择到DNS服务器")])]),a("li",[a("p",[s._v("Web客户 - 服务器交互：TCP和HTTP")])])]),a("h1",[s._v("7 无线网络和移动网络")]),a("h2",[s._v("概述")]),a("ul",[a("li",[s._v("无线网络 "),a("ul",[a("li",[s._v("组成 "),a("ul",[a("li",[s._v("无线主机")]),a("li",[s._v("无线链路")]),a("li",[s._v("基站")]),a("li",[s._v("网络基础设施")])])]),a("li",[s._v("分类 "),a("ul",[a("li",[s._v("单跳，基于基础设施")]),a("li",[s._v("单跳，无基础设施")]),a("li",[s._v("多跳，基于基础设施")]),a("li",[s._v("多跳，无基础设施")])])])])])]),a("hr"),a("h2",[s._v("无线链路和网络特征")]),a("p",[s._v("信噪比（Signal-to-Noise Ratio, SNR）：较大的信噪比能够使接收方更容易从背景噪声中提取传输的信号")]),a("p",[s._v("物理层调制技术的动态选择能用于适配对信道条件的调制技术")]),a("p",[a("strong",[s._v("隐藏终端问题")])]),a("p",[s._v("码分多址（CDMA）")]),a("ul",[a("li",[s._v("不同主机使用一个共享媒体通信时，需要有一个协议来保证多个发送方发送的信号不在接收方相互干扰。")]),a("li",[s._v("属于信道划分协议")])]),a("p",[s._v("数学意义：https://blog.csdn.net/qq_34022601/article/details/89458950")]),a("hr"),a("h2",[s._v("WiFi：802.11 无线 LAN")]),a("p",[s._v("体系结构：")]),a("ul",[a("li",[s._v("基本服务集（BSS） "),a("ul",[a("li",[s._v("多个无线站点")]),a("li",[s._v("中央基站")])])])]),a("p",[s._v("信道与关联")]),a("p",[s._v("802.11标准要求每个AP周期性地发送信标帧")]),a("hr"),a("p",[s._v("802.11 MAC 协议")]),a("p",[s._v("短帧间间隔（SIFS）和分布式帧间间隔（DIFS）")]),a("p",[s._v("带碰撞避免的CSMA")]),a("ul",[a("li",[s._v("与以太网MAC协议的区别： "),a("ul",[a("li",[s._v("使用碰撞避免而非碰撞检测")]),a("li",[s._v("使用链路层确认/重传方案")])])])]),a("p",[s._v("避免碰撞")]),a("ol",[a("li",[s._v("处理隐藏终端： "),a("ul",[a("li",[s._v("短请求发送（RTS）和短允许发送（CTS）")])])]),a("li",[s._v("使用802.11作为一个点对点链路")])]),a("hr"),a("p",[s._v("IEEE802.11帧")]),a("ol",[a("li",[s._v("有效载荷与CRC字段")]),a("li",[s._v("地址字段")]),a("li",[s._v("序号、持效期和帧控制字段")])]),a("hr"),a("p",[s._v("802.11中的高级特色")]),a("ul",[a("li",[s._v("802.11速率适应")]),a("li",[s._v("功率管理")])]),a("p",[s._v("ZigBee：面向低功率、低工作周期、低成本设备的个人域网络")]),a("hr"),a("h2",[s._v("蜂窝因特网接入")]),a("p",[s._v("全球移动通信网络（GSM）")]),a("p",[s._v("2G蜂窝网体系：语音与电话网连接")]),a("p",[s._v("3G蜂窝数据网：将因特网扩展到蜂窝用户")]),a("ul",[a("li",[s._v("3G核心网 "),a("ul",[a("li",[s._v("服务通用分组无线服务支持节点（SGSN）")]),a("li",[s._v("网关GPRS支持节点（GGSN）")])])]),a("li",[s._v("3G无线电接入网：无线边缘 "),a("ul",[a("li",[s._v("无线电网络控制器")])])]),a("li",[s._v("4G系统体系结构：一个全IP核心网 "),a("ul",[a("li",[s._v("语音和数据都承载在IP数据报中")])])])]),a("hr"),a("h2",[s._v("移动管理：原理")]),a("ul",[a("li",[s._v("移动性： "),a("ul",[a("li",[s._v("用户仅在相同的无线接入网中移动")]),a("li",[s._v("用户在接入网间移动，当在网间移动时关闭连接")]),a("li",[s._v("用户在接入网之间移动，同时维持进行中的连接")])])])]),a("p",[s._v("如果一个移动实体在移动过程中能够保持其IP地址不变，从应用的角度，移动性就变得不可见")]),a("ul",[a("li",[s._v("归属代理 "),a("ul",[a("li",[s._v("与外部代理交互以跟踪移动节点的COA")]),a("li",[s._v("监视到达的数据报")])])]),a("li",[s._v("外部代理 "),a("ul",[a("li",[s._v("为移动节点创建一个"),a("strong",[s._v("转交地址（Care-Of Address, COA）")])]),a("li",[s._v("告诉归属代理该移动节点在它的网络中且具有给定的COA")])])])]),a("ol",[a("li",[s._v("寻址")]),a("li",[s._v("路由选择到移动节点 "),a("ul",[a("li",[s._v("间接路由选择")]),a("li",[s._v("直接路由选择 "),a("ul",[a("li",[s._v("克服了三角路由选择的低效问题，以增加复杂性为代价")])])])])])]),a("hr"),a("h2",[s._v("移动IP")]),a("p",[s._v("支持移动性的因特网体系结构与协议")]),a("ul",[a("li",[s._v("代理发现")]),a("li",[s._v("向归属代理注册")]),a("li",[s._v("数据报的间接路由选择")])]),a("hr"),a("h2",[s._v("管理蜂窝网中的移动性")]),a("ul",[a("li",[s._v("归属网络维护一个称作归属位置注册器数据库")]),a("li",[s._v("被访网络维护一个称作访问者位置注册数据库")])]),a("p",[s._v("移动交换中心，MSC")]),a("hr"),a("p",[s._v("GSM的切换")]),a("p",[s._v("移动用户会周期性的测量来自当前基站和周围基站的信标信号强度，以1-2秒的频率汇报给当前基站")]),a("p",[s._v("GSM中的切换由旧的基站发起")]),a("ul",[a("li",[s._v("新旧基站共享同一个MSC")]),a("li",[s._v("新旧基站来自不同MSC")])]),a("h1",[s._v("8 计算机网络中的安全")]),a("p",[s._v("安全通信")]),a("ul",[a("li",[s._v("机密性")]),a("li",[s._v("报文完整性")]),a("li",[s._v("端点鉴别")]),a("li",[s._v("运行完整性")])]),a("hr"),a("h2",[s._v("密码学的原则")]),a("ul",[a("li",[a("p",[s._v("一些术语：")]),a("ul",[a("li",[s._v("明文")]),a("li",[s._v("加密算法")]),a("li",[s._v("密文")]),a("li",[s._v("密钥")]),a("li",[s._v("解密算法")])])]),a("li",[a("p",[s._v("对称密钥系统")]),a("ul",[a("li",[s._v("例子 "),a("ul",[a("li",[s._v("凯撒密码")]),a("li",[s._v("单码代替密码")])])]),a("li",[s._v("根据入侵者所拥有的信息 "),a("ul",[a("li",[s._v("唯密文攻击")]),a("li",[s._v("已知明文攻击")]),a("li",[s._v("选择明文攻击")])])]),a("li",[s._v("对称加密技术 "),a("ul",[a("li",[s._v("流密码")]),a("li",[s._v("块密码")])])])])]),a("li",[a("p",[s._v("公开密钥系统")]),a("ul",[a("li",[a("p",[s._v("RSA算法")]),a("ul",[a("li",[a("p",[s._v("$$ (a\\ mod\\ n )^d mod\\ n = a^d \\ mod\\ n $$")])]),a("li",[a("p",[a("strong",[s._v("一个报文只不过是一种比特模式，并且所有比特模式能唯一地被一个整数表示")])])])])]),a("li",[a("p",[s._v("会话密钥")])]),a("li",[a("p",[s._v("RSA的安全性依赖于以下事实：目前没有已知的算法可以快速的进行一个数的因数分解，这种情况下公开值n无法快速分解成素数p和q")])])])])]),a("hr"),a("h2",[s._v("报文完整性和数字签名")]),a("ol",[a("li",[s._v("报文确实来自于源发送方")]),a("li",[s._v("报文到达时没有被篡改")])]),a("ul",[a("li",[s._v("密码散列函数 "),a("ul",[a("li",[s._v("MD5")]),a("li",[s._v("SHA-1")])])])]),a("p",[s._v("保证报文完整性：")]),a("ul",[a("li",[s._v("报文鉴别码：为报文附加一个鉴别密钥，然后取得该结果的散列")]),a("li",[s._v("数字签名：先取得该报文的散列，然后用我们的私钥加密 "),a("ul",[a("li",[a("strong",[s._v("公钥认证")])])])])]),a("h2",[s._v("端点鉴别")]),a("p",[s._v("一个实体经过计算机网络向另一个实体证明其身份的过程")]),a("p",[s._v("不重数：在一个协议的生存期中只能使用一次的数")]),a("h2",[s._v("安全电子邮件")]),a("p",[s._v("电子邮件加密方案的范例：PGP")]),a("h2",[s._v("使TCP连接安全：SSL")]),a("p",[s._v("简化版流程")]),a("ol",[a("li",[s._v("握手 "),a("ul",[a("li",[s._v("创建TCP连接")]),a("li",[s._v("验证对方身份的真实性")]),a("li",[s._v("发送一个主密钥")])])]),a("li",[s._v("密钥导出")]),a("li",[s._v("数据传输")])]),a("h2",[s._v("使无线LAN安全")]),a("p",[s._v("有线等效保密（Wired Equivalent Privacy, WEP）")]),a("p",[s._v("IEEE802.11i")]),a("h2",[s._v("运行安全性：防火墙和入侵检测系统")]),a("ul",[a("li",[a("p",[s._v("防火墙的目标")]),a("ul",[a("li",[s._v("从外部到内部和从内部到外部的所有流量都通过防火墙")]),a("li",[s._v("仅被授权的流量（本地安全策略定义）允许通过")]),a("li",[s._v("防火墙自身免于渗透")])])]),a("li",[a("p",[s._v("防火墙的分类")]),a("ul",[a("li",[a("p",[s._v("传统分组过滤器")]),a("p",[s._v("可以基于端口号和地址的结合")])]),a("li",[a("p",[s._v("状态分组过滤器")])]),a("li",[a("p",[s._v("应用程序网关")]),a("p",[s._v("是一个应用程序特定的服务器，所有应用程序数据（入和出的）都必须通过它")])])])])]),a("hr"),a("p",[s._v("入侵检测系统：观察到潜在恶意流量时能产生告警的设备（Intrusion Detection System, IDS）")]),a("h1",[s._v("9 多媒体网络")]),a("h2",[s._v("多媒体网络应用")]),a("ol",[a("li",[a("p",[s._v("流式存储音频和视频")]),a("ul",[a("li",[s._v("流：客户开始从服务器接收文件几秒之后，通常就开始播放视频")]),a("li",[s._v("相互作用")]),a("li",[s._v("连续播放")])]),a("p",[s._v("对于"),a("strong",[s._v("流式视频")]),s._v("来说，最重要的性能测度是平均吞吐量")])]),a("li",[a("p",[s._v("会话式IP语音和视频")]),a("p",[s._v("时延敏感")])]),a("li",[a("p",[s._v("流式实况音频和视频")])])]),a("h2",[s._v("流式存储视频")]),a("p",[s._v("UDP流、HTTP流、适应性HTTP流")]),a("p",[a("strong",[s._v("客户端应用缓存")])]),a("ul",[a("li",[s._v("HTTP流 "),a("ol",[a("li",[s._v("预取视频")]),a("li",[s._v("客户应用缓存和TCP缓存")]),a("li",[s._v("流式视频的分析")]),a("li",[s._v("视频的早期中止和重定位")])])])]),a("h2",[s._v("IP语音")]),a("p",[s._v("现在（2017年）几乎所有的VoIP应用默认运行在UDP上")]),a("p",[s._v("原因：")]),a("ul",[a("li",[a("p",[s._v("使用TCP增加了端到端时延")])]),a("li",[a("p",[s._v("由于TCP的拥塞控制，发送方的传输速率可能减少到低于接收方的排空速率，可能导致缓存“饥饿”，从而对接收方的语音可理解程度产生严重影响")])]),a("li",[a("p",[s._v("在接收方消除音频的时延抖动：")]),a("ul",[a("li",[s._v("固定播放时延")]),a("li",[s._v("适应性播放时延")])])]),a("li",[a("p",[s._v("从丢包中恢复：")]),a("ul",[a("li",[s._v("前向纠错（FEC）")]),a("li",[s._v("交织")]),a("li",[s._v("掩盖差错")])])])]),a("p",[s._v("Eg：Skype的VoIP")]),a("h2",[s._v("实时会话式应用的协议")]),a("ol",[a("li",[a("p",[s._v("RTP")]),a("p",[s._v("RTP通常运行在UDP之上")])]),a("li",[a("p",[s._v("SIP")]),a("p",[s._v("一个开放和轻型的"),a("strong",[s._v("会话发起协议")])])])]),a("h2",[s._v("支持多媒体的网络")]),a("ul",[a("li",[a("p",[s._v("支持多媒体应用的三种网络层方法")]),a("ul",[a("li",[s._v("尽可能利用尽力而为服务")]),a("li",[s._v("区分服务")]),a("li",[s._v("每连接服务质量（QoS）保证")])])])]),a("p",[s._v("监管：漏桶")]),a("ul",[a("li",[a("p",[a("em",[s._v("平均速率")])]),a("p",[s._v("监管平均速率的时间间隔：一个平均速率被限制为每秒100个分组对的流要比一个每分钟6000个分组的源收到的约束更严格")])]),a("li",[a("p",[a("em",[s._v("峰值速率")])])]),a("li",[a("p",[a("em",[s._v("突发长度")])])])])])}],M={},D=Object(i["a"])(M,A,I,!1,null,null,null),x=D.exports,L=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},B=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("ul",[a("li",[a("p",[a("strong",[s._v("在早期的进度策划时，允许充分的系统测试时间是非常重要的")])]),a("p",[s._v("对于软件任务的进度安排，作者给出的经验法则是：")]),a("p",[s._v("1/3 计划")]),a("p",[s._v("1/6 编码")]),a("p",[s._v("1/4 构件测试和早期系统测试")]),a("p",[s._v("1/4 系统测试，所有构件已完成")])]),a("li",[a("p",[a("strong",[s._v("一个十人开发团队的构成")])]),a("ul",[a("li",[s._v("外科医生")]),a("li",[s._v("副手")]),a("li",[s._v("管理员")]),a("li",[s._v("编辑")]),a("li",[s._v("两个文秘")]),a("li",[s._v("程序职员")]),a("li",[s._v("工具维护人员")]),a("li",[s._v("测试人员")]),a("li",[s._v("语言专家")])])]),a("li",[a("p",[s._v("作者认为，在系统设计中，"),a("strong",[s._v("概念完整性应该是最重要的考虑因素")]),s._v("。")]),a("p",[s._v("概念完整性：为了反映一系列连贯的设计思路，宁可省略一些不规则的特性和改进，也不提倡独立和无法整合的系统，哪怕它们其实包含着许多很好的设计。")]),a("p",[s._v("如何保证概念完整性：将设计方法、体系结构方面的工作与具体实现相分离是获得概念完整性的强有力方法。")])]),a("li",[a("p",[a("strong",[s._v("大型编程项目中的交流")])]),a("ul",[a("li",[a("p",[s._v("非正式途径")])]),a("li",[a("p",[s._v("会议")])]),a("li",[a("p",[a("strong",[s._v("项目工作手册")])]),a("ul",[a("li",[a("p",[s._v("使用原因")]),a("ol",[a("li",[s._v("不仅仅是思路，同时也是早期的备忘录")]),a("li",[s._v("控制信息发布")])])]),a("li",[a("p",[s._v("处理机制")])])])])]),a("p",[a("strong",[s._v("交流和组织的技能需要管理者仔细考虑，相关经验的积累和能力的提高同软件技术本身一样重要。")])])]),a("li",[a("p",[a("strong",[s._v("计算机产品的文档")])]),a("ul",[a("li",[s._v("目标：定义待满足的目标和需要，定义迫切需要的资源、约束和优先级")]),a("li",[s._v("技术说明：计算机手册加性能说明")]),a("li",[s._v("进度")]),a("li",[s._v("预算")]),a("li",[s._v("组织结构图")]),a("li",[s._v("工作空间的分配")]),a("li",[s._v("报价、预测、价格")])])]),a("li",[a("p",[s._v("系统软件开发是减少混乱度（减少熵）的过程，所以它本身是处于亚稳态的；软件维护是提高混乱度（增加熵）的过程，即使是最熟练的软件维护工作，也只是放缓了系统退化到非稳态的进程。")])]),a("li",[a("p",[a("strong",[s._v("关键的地方和构建无Bug程序的核心，是把系统的结构作为控制结构来考虑，而不是独立的分支语句。")])])]),a("li",[a("p",[a("strong",[s._v("PERT图")])])]),a("li",[a("p",[a("strong",[s._v("软件文档的重要性")])]),a("ol",[a("li",[a("p",[s._v("一份文档会包括：")]),a("ul",[a("li",[s._v("使用程序： "),a("ul",[a("li",[s._v("目的")]),a("li",[s._v("环境：机器、配置和操作系统")]),a("li",[s._v("范围：输入的有效范围；允许显示的合法输出范围")]),a("li",[s._v("实现功能和使用的算法")]),a("li",[s._v("IO格式")]),a("li",[s._v("操作指令")]),a("li",[s._v("选项：用户的功能选项有哪些？如何选择？")]),a("li",[s._v("运行时间：在指定配置下，解决特定规模问题所需要的时间？")]),a("li",[s._v("精度和校验")]),a("li",[s._v("验证程序：一些测试用例")])])])])])]),a("p",[s._v("​ 2. "),a("strong",[s._v("自文档化")])])]),a("li",[a("p",[a("strong",[s._v("抽象数据类型")]),s._v("和"),a("strong",[s._v("层次化类型")]),s._v("是两个互不相干的概念。")]),a("p",[s._v("抽象数据类型的概念是指对象类型应该通过一个名称、一系列合适的值和操作来定义，而不是理应被隐藏的存储结构。")]),a("p",[s._v("层次化类型是允许通过接口的定义被后续子类型精化。")])]),a("li",[a("p",[a("strong",[s._v("没有银弹")])]),a("ul",[a("li",[s._v("层次化，通过分层的模块或者对象")]),a("li",[s._v("增量化，使系统可以持续地运行")])])]),a("li",[a("p",[a("strong",[s._v("增量开发模型更佳")]),s._v("——渐进地精化")])])]),a("hr"),a("p",[s._v("读完第四章，我忍不住记录一下自己的想法：就作者提出的编程人员提出参与外部技术文档的编写这一行为来说，是的，也许从大局上来看，它是不利好的，就如章节的末尾作者所说的，“垂直划分从根本上减少了劳动量”，而事实上水平分割的体系对于一个个体的成长来说才是最有帮助的，因为他能够因此触及一个项目的更多方面，而不是单纯的作为流水线上面的一颗螺丝钉。当然，作者是基于一个大型系统，编程人员也大多是经验丰富的老手，我以上的观点就此来看是有失偏颇；只是从我自己的角度看，作者的看法是资本主义上的政治正确——如果我是管理者，我也赞成垂直划分；而如果我是开发者，我肯定会选择水平分割")]),a("hr"),a("h2",[s._v("感想")]),a("p",[s._v("前阵子有幸在华为实习了两个月， 关于《人月神话》，结合实习的经历，还是多少有一点感触吧。")]),a("p",[s._v("Brooks提出的令我印象最深刻的观点是："),a("strong",[s._v("软件开发过程中参与人员与时间并不是线性的")]),s._v("——沟通和交流的成本非常大，它会很快消耗任务分解所节省下来的个人时间。这也意味着，添加更多的人手，实际上是延长了而不是缩短了时间进度。这一观点确实挺颠覆的，在软件项目中，还真不是所谓的“人多力量大”，一个小模块由一至二个人负责是最合适的，每个人的编码习惯、工作节奏各不相同，参与者越多，沟通成本越大。")]),a("p",[s._v("但是在企业中，很多时候面对的是一个大型项目，不得不需要足够的人手来支撑，此时就需要"),a("strong",[s._v("文档化的规格说明")]),s._v("以及"),a("strong",[s._v("会议")]),s._v("来提供高效沟通的媒介。我刚进入部门的头几天，一直在阅读编码规范手册，之后大多也会依靠产品指导手册辅助工作；身边有一位负责编写接口的同事，大部分时间都在电话会议，这也是从侧面说明了一个大型项目中沟通成本之高。")]),a("p",[s._v("作为学生，项目中占据大多数时间的编码，而"),a("strong",[s._v("Brooks对于软件任务的进度安排给出的经验法则是：1/3 计划、1/6 编码、1/4 构件测试和早期系统测试、1/4 系统测试")]),s._v("，所有构件已完成。测试的过程居然占据了一半的时间！其重要性可见一斑。就我看来，华为对于测试还是比较重视的，测试的责任田、测试平台的搭建都很规范。我实习中大部分时间也是在编写测试用例，可以看出在一个版本发布之前，需要进行重重关卡；毕竟早期错误发现并修改的代价可比发布之后要低得多。")]),a("p",[s._v("另外，在作者在“贵族专制、民主政治和系统设计”这一章中，强调了"),a("strong",[s._v("概念完整性")]),s._v("对于一个成功软件的重要性，主张将设计方法、体系结构方面的工作与具体实现相分离。从大局上来看，这种垂直划分确实从根本上减少了劳动量；但从个人发展的角度，“安安静静地作为一颗螺丝钉仿佛不是这个时代的精神”。关于这个问题，我确实没有参与过实际的开发过程，没有什么发言权，仅在此引用书中一位前辈文章中的看法（并不代表个人意见），“严格按照分工进行开发，提高了质量，看似少了机会，但从长远的角度看，大家对设计的了解更加透彻，对流程的理解更加深刻，为以后的发展打下基础”。")]),a("p",[s._v("《人月神话》对于我这样一个半只脚还在大学校园里的人来说，可能还是有一点抽象。的确，可能只有在真正切身经历过一个企业级别的软件开发项目之后，对于作者观点的体会和认识才能来的更加深刻吧。正如一位读者所说，“它不是良药，不能为你解决实际工作中的问题，但它可以给你提供很多思考的空间，让你变得更加成熟。”《人月神话》确实得以让我站在一个更高的视角来看待软件行业；而我现在需要做的则是脚踏实地走好每一步路。")])])}],N={},O=Object(i["a"])(N,L,B,!1,null,null,null),R=O.exports,H=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h1",[s._v("1 对象导论")]),s._m(0),s._m(1),s._m(2),s._m(3),a("h1",[s._v("2 一切都是对象")]),s._m(4),s._m(5),s._m(6),s._m(7),s._m(8),s._m(9),a("p",[s._v("运用其他构件")]),s._m(10),s._m(11),s._m(12),s._m(13),s._m(14),s._m(15),s._m(16),s._m(17),s._m(18),a("h1",[s._v("3 操作符")]),s._m(19),a("h1",[s._v("4 控制执行流程")]),s._m(20),s._m(21),s._m(22),s._m(23),s._m(24),a("h1",[s._v("5 初始化和清理")]),a("p",[s._v("用构造器确保初始化")]),s._m(25),s._m(26),s._m(27),s._m(28),s._m(29),s._m(30),a("p",[s._v("也就是说如果我们在静态方法中调用非静态成员变量会超前，可能会调用了一个还未初始化的变量。因此编译器会报错。")]),s._m(31),a("p",[s._v("对象的创建过程：Page 96")]),s._m(32),a("h1",[s._v("6 访问权限控制")]),s._m(33),s._m(34),s._m(35),s._m(36),s._m(37),s._m(38),a("p",[s._v("可能想控制如何创建对象，并阻止别人直接访问")]),s._m(39),s._m(40),s._m(41),s._m(42),s._m(43),s._m(44),a("h1",[s._v("7 复用类")]),s._m(45),s._m(46),s._m(47),s._m(48),s._m(49),a("p",[s._v("初始化基类")]),s._m(50),s._m(51),s._m(52),s._m(53),s._m(54),s._m(55),s._m(56),s._m(57),s._m(58),a("p",[s._v("自己是否需要从新类向基类进行向上转型，如果必须向上转型，继承是必要的")]),s._m(59),s._m(60),s._m(61),s._m(62),s._m(63),s._m(64),s._m(65),s._m(66),s._m(67),a("h1",[s._v("8 多态")]),s._m(68),s._m(69),a("p",[s._v("后期绑定就是运行时根据对象的类型进行绑定")]),s._m(70),s._m(71),a("p",[s._v("多态方法允许一种类型表现出与其他相似类型的区别，只要它们是从同一基类中导出出来的")]),a("p",[s._v("如果某个方法是静态的，它的行为不具有多态性：静态方法是与类而不是单个对象相关联的")]),a("p",[s._v("构造器内部多态方法的行为： page 163")]),s._m(72),a("p",[s._v("用继承表达行为间的差异，用字段表达状态上的变化")]),s._m(73),a("h1",[s._v("9 接口")]),s._m(74),s._m(75),s._m(76),s._m(77),s._m(78),s._m(79),s._m(80),s._m(81),s._m(82),s._m(83),s._m(84),s._m(85),s._m(86),s._m(87),a("h1",[s._v("10 内部类")]),a("p",[s._v("==内部类和组合是完全不同的概念==")]),s._m(88),s._m(89),a("p",[s._v("直接创建内部类的对象，必须使用外部类的对象来创建该内部类对象")]),s._m(90),a("h1",[s._v("11 持有对象")]),s._m(91),a("ul",[s._m(92),s._m(93),s._m(94),s._m(95),s._m(96),s._m(97),s._m(98),s._m(99),s._m(100),a("li",[s._m(101),a("ul",[s._m(102),s._m(103),a("li",[s._m(104),a("p",[s._v("public static void commander(Queue=="),a("Command",[s._v("== q) { while(qc.peek() != null) qc.poll().operation(); }")])],1)]),s._m(105)])]),s._m(106),s._m(107)]),a("h1",[s._v("12 通过异常处理错误")]),s._m(108),s._m(109),a("h1",[s._v("13 字符串")]),s._m(110),a("h1",[s._v("14 类型信息")]),s._m(111),a("p",[s._v("Runtime Type Information")]),s._m(112),a("h1",[s._v("15 泛型")]),s._m(113),s._m(114),a("h1",[s._v("16 数组")]),a("h1",[s._v("17 容器深入研究")]),s._m(115),s._m(116),a("p",[s._v("使用情况：普通的解决方案需要过多的对象/产生普通对象太占空间")]),s._m(117),s._m(118),a("p",[s._v("Comparable接口： https://www.cnblogs.com/xiatom/p/10784850.html")]),s._m(119),a("h1",[s._v("21 并发")]),s._m(120),s._m(121),a("p",[s._v("进程是运行在它自己的地址空间内的自包容的程序")]),s._m(122),s._m(123),a("p",[s._v("任何线程都可以启动另一个线程")]),a("p",[s._v("线程调度机制是非确定性的")]),s._m(124),s._m(125),a("hr"),s._m(126),a("h1",[s._v("22 图像化用户界面")]),s._m(127)])},V=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("对象具有状态、行为和标识")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("每个对象都有一个接口")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[s._v("Light")]),a("th",[s._v("类型名称")])])]),a("tbody",[a("tr",[a("td",[s._v("on() off() brighten() dim()")]),a("td",[s._v("接口")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("每个对象都提供服务")])]),a("li",[a("p",[s._v("将实现隐藏起来可以减少bug")])]),a("li",[a("p",[s._v("复用")]),a("ul",[a("li",[s._v("使用现有类合成新类---"),a("strong",[s._v("组合")]),s._v(" （"),a("em",[s._v("has-a")]),s._v("），如果是动态发生的，叫做"),a("strong",[s._v("聚合")])]),a("li",[s._v("建立新类时，应该先组合")])])]),a("li",[a("p",[s._v("继承("),a("em",[s._v("is-a")]),s._v(")")]),a("ul",[a("li",[s._v("使得基类和导出类有差异： "),a("ol",[a("li",[s._v("直接添加新方法")]),a("li",[a("em",[s._v("覆盖")])])])])])]),a("li",[a("p",[a("strong",[s._v("多态")])]),a("ul",[a("li",[a("em",[s._v("后期绑定")])]),a("li",[a("em",[s._v("向上转型")]),s._v("：把导出类看做是它的基类")])])]),a("li",[a("p",[s._v("容器")]),a("ul",[a("li",[s._v("ex: "),a("code",{pre:!0},[s._v("ArrayList")]),s._v(" 和 "),a("code",{pre:!0},[s._v("LinkedList")])]),a("li",[s._v("范型："),a("code",{pre:!0},[s._v("<>")])])])]),a("li",[a("p",[s._v("对象的创建和生命期")]),a("ul",[a("li",[a("em",[s._v("Java")]),s._v("完全采用动态内存分配方式")])])]),a("li",[a("p",[s._v("异常处理")])]),a("li",[a("p",[s._v("并发")])]),a("li",[a("p",[a("em",[s._v("Java")]),s._v("与"),a("em",[s._v("Internet")])]),a("ul",[a("li",[a("p",[s._v("客户/服务机计算技术")]),a("p",[s._v("核心思想：系统具有一个中央信息存储池，用来存储某种数据，它通常存在于数据库中，你可以根据需要将它分发给某些人员或机器集群。")]),a("p",[a("em",[s._v("性能问题")])])]),a("li",[a("p",[s._v("客户端编程")])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("通常用"),a("code",{pre:!0},[s._v("new")]),s._v("来创建一个新的对象")]),s._v("，特例：基本类型")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("em",[s._v("Java")]),s._v("不存在销毁对象的问题，而且有一个"),a("em",[s._v("垃圾储存器")]),s._v("，用来监视用"),a("code",{pre:!0},[s._v("new")]),s._v("创建的所有对象")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("解决了"),a("strong",[s._v("内存泄漏")]),s._v("的问题")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("类")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("字段")]),a("li",[s._v("方法")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("变量没有赋初始值会报错，"),a("em",[a("u",[s._v("当变量作为类的成员使用时，才会给默认值")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.ArrayList;\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.*;\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("static关键字")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("一个"),a("code",{pre:!0},[s._v("static")]),s._v("字段对每个类来说都只有一份存储空间，而非"),a("code",{pre:!0},[s._v("static")]),s._v("字段则是每个对象都有一个存储空间")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("重要用法：不创建任何对象的前提下就可以调用之​。（直接通过类名）")]),a("li",[s._v("“牧羊人” 看护与其隶属同一类型的实例群")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("第一个"),a("em",[s._v("Java")]),s._v("程序")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("strong",[s._v("类的名字必须于文件名相同")])]),a("li",[s._v("类中必须包含一个名为**main()**的方法")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//: object/HelloDate.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/** The first Thinking in Java example program.\n * Displays a string and today's date.\n * @author Bruce Eckel\n * @author www.MindView.net\n * @version 4.0\n*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("HelloDate")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/** Entry point to class & application.\n   * @param args array of string arguments\n   * @throws exceptions No exceptions thrown\n  */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Hello, it\'s: "')]),s._v(");\n    System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Date());\n  }\n} "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Output: (55% match)\nHello, it's:\nWed Oct 05 14:39:36 MDT 2005\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//:~")]),s._v("\n\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("javadoc")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("只能在"),a("code",{pre:!0},[s._v("/**")]),s._v("中出现")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("赋值")]),a("p",[s._v("一个对象赋值给另一个对象 --- 引用相同 --- 指向相同对象")])]),a("li",[a("p",[s._v("别名问题")])]),a("li",[a("p",[s._v("关系操作符")]),a("p",[s._v("比较的是对象的引用")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Equivalence")])]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")])]),s._v("{\n        Integer n1 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Integer("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(");\n        Integer n2 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Integer("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(");\n        System.out.println(n1 == n2);\n        System.out.println(n1 != n2);\n    }\n}"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Output:\nfalse\ntrue\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//~")]),s._v("\n")])]),a("ul",[a("li",[a("p",[a("em",[s._v("“短路”")])])]),a("li",[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("float")]),s._v(" f = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1e-43f")]),s._v("; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 10 to the power")]),s._v("\n")])])]),a("li",[a("p",[s._v("按位操作符")])]),a("li",[a("p",[s._v("移位操作符")])]),a("li",[a("p",[s._v("字符串操作符")]),a("p",[s._v("如果一个表达式以一个字符串起头，后续所有操作数都必须是字符串型")])]),a("li",[a("p",[s._v("类型转换")]),a("ul",[a("li",[s._v("窄化转换&扩展转换")])])]),a("li",[a("p",[s._v("四舍五入 "),a("code",{pre:!0},[s._v("Math.round()")])])]),a("li",[a("p",[s._v("两个足够大的"),a("code",{pre:!0},[s._v("int")]),s._v("值执行乘法运算，结果就会溢出")])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("Math")]),s._v("库中的静态方法"),a("code",{pre:!0},[s._v("random()")]),s._v(" 也有"),a("code",{pre:!0},[s._v("Random")]),s._v("对象："),a("code",{pre:!0},[s._v("Random rand = new Random()")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("forreach")]),s._v("语法："),a("code",{pre:!0},[s._v("for(int i : range(10))")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("一般的**"),a("code",{pre:!0},[s._v("continue")]),s._v("**会退回最内层循环的开头（顶部），并继续执行")]),a("li",[s._v("带标签的**"),a("code",{pre:!0},[s._v("continue")]),s._v("**会到达标签的位置，并重新进入紧接在那个标签后面的循环")]),a("li",[s._v("一般的**"),a("code",{pre:!0},[s._v("break")]),s._v("**会中断并跳出当前循环")]),a("li",[s._v("带标签的**"),a("code",{pre:!0},[s._v("break")]),s._v("**会中断并跳出标签所指的循环，一般情况下可以理解为"),a("em",[s._v("跳出两层循环")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("switch")]),s._v("语句")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("选择因子必须是**"),a("code",{pre:!0},[s._v("int")]),a("strong",[s._v("或者")]),a("code",{pre:!0},[s._v("char")]),s._v("**那样的整数值")]),a("li",[s._v("别忘了末尾的**"),a("code",{pre:!0},[s._v("break")]),s._v("**")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Tester")])]),s._v("{\n    String s1;\n    String s2 = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hello"')]),s._v(";\n    String s3;\n    Tester() {s3 = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"world"')]),s._v("}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ConstructorTest")])]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")])]),s._v("{\n  \t\tTester t = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Tester();\n    }\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("方法重载")]),a("ul",[a("li",[s._v("多种方式创建一个对象")]),a("li",[s._v("区分重载方法："),a("em",[s._v("参数类型的差异")])])])]),a("li",[a("p",[a("code",{pre:!0},[s._v("this")]),s._v("关键字")]),a("ul",[a("li",[s._v("只能在方法内部使用")]),a("li",[s._v("如果是在方法内部调用同一个类中的另外一个方法，则不必使用")]),a("li",[s._v("常常在"),a("code",{pre:!0},[s._v("return")]),s._v("中用于返回当前对象的引用")]),a("li",[a("strong",[s._v("只能调用一个构造器")]),s._v("，必须将构造器调用置于最起始处")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("再理解"),a("code",{pre:!0},[s._v("static")]),s._v("：就是没有"),a("code",{pre:!0},[s._v("this")]),s._v("的方法")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("静态方法内部不能调用非静态方法")]),s._v("：")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("这是类加载机制的最后一步，在这个阶段，"),a("code",{pre:!0},[s._v("java")]),s._v("程序代码才开始真正执行。我们知道，在准备阶段已经为类变量赋过一次值。在初始化阶端，程序员可以根据自己的需求来赋值了。"),a("strong",[s._v("初始化时候才会为我们的普通成员变量赋值。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("写到这答案已经出来了，"),a("strong",[s._v("静态方法是属于类的，动态方法属于实例对象")]),s._v("，在类加载的时候就会分配内存，可以通过类名直接去访问，非静态成员（变量和方法）属于类的对象，所以只有该对象初始化之后才存在，然后通过类的对象去访问。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("清理")]),a("ul",[a("li",[s._v("对象可能不被垃圾回收")]),a("li",[s._v("垃圾回收并不等于“析构”")]),a("li",[s._v("垃圾回收只与内存有关")])])]),a("li",[a("p",[s._v("垃圾回收站如何工作")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("Java")]),s._v("虚拟机将采用一种"),a("em",[s._v("自适应")]),s._v("的垃圾回收技术 "),a("ul",[a("li",[s._v("停止-复制：堆空间出现很多碎片")]),a("li",[s._v("标记-清扫：所有对象都很稳定，垃圾回收器的效率降低")])])])])]),a("li",[a("p",[s._v("成员初始化")]),a("ul",[a("li",[s._v("方法内部必须初始化，否则会报错")]),a("li",[s._v("类的数据成员有初始值，而对象引用则是返回一个"),a("code",{pre:!0},[s._v("null")])]),a("li",[s._v("即使变量定义散布于方法定义间，它们仍旧会在任何方法（包括构造器）被调用之前得到初始化")]),a("li",[s._v("静态初始化只有在必要时刻才会进行")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("静态初始化")]),a("ul",[a("li",[s._v("只执行一次")])])]),a("li",[a("p",[s._v("非静态初始化（实例初始化）")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Tester")]),s._v(" ")]),s._v("{\n\tString s;\n\t{\n\t\ts = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Initializing string in Tester"')]),s._v(";\n\t\tSystem.out.println(s);\n\t}\n\tTester() {\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Tester()"')]),s._v(");\n\t}\n}\n")])]),a("ul",[a("li",[s._v("可变参数列表 "),a("ul",[a("li",[s._v("不用显式的编写数组语法，当你指定参数时，编译器实际上会为你填充数组，你获取的仍旧是一个数组")])])])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("VarargEx19")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("showStrings")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String... args)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("(String s : args)\n\t\t\tSystem.out.print(s + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" "')]),s._v(");\n\t\tSystem.out.println();\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tshowStrings("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"one"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"TWO"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"three"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"four"')]),s._v(");\n\t\tshowStrings("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" String[]{"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"1"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"2"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"3"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"4"')]),s._v("});\n\t}\n}\n")])]),a("ul",[a("li",[s._v("枚举类型")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("enum")]),s._v(" Spiciness {\n  NOT, MILD, MEDIUM, HOT, FLAMING\n} \n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Burrito")]),s._v(" ")]),s._v("{\n  Spiciness degree;\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Burrito")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Spiciness degree)")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".degree = degree;}\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("describe")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    System.out.print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"This burrito is "')]),s._v(");\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v("(degree) {\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" NOT:    System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"not spicy at all."')]),s._v(");\n                   "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" MILD:\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" MEDIUM: System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"a little hot."')]),s._v(");\n                   "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" HOT:\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" FLAMING:\n      "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("default")]),s._v(":     System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"maybe too hot."')]),s._v(");\n    }\n  }\t\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    Burrito\n      plain = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Burrito(Spiciness.NOT),\n      greenChile = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Burrito(Spiciness.MEDIUM),\n      jalapeno = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Burrito(Spiciness.HOT);\n    plain.describe();\n    greenChile.describe();\n    jalapeno.describe();\n  }\n} "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Output:\nThis burrito is not spicy at all.\nThis burrito is a little hot.\nThis burrito is maybe too hot.\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//:~")]),s._v("\n")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("em",[s._v("Java")]),s._v("中访问权限修饰词："),a("code",{pre:!0},[s._v("public")]),s._v(","),a("code",{pre:!0},[s._v("protected")]),s._v(",包访问权限（没有关键词）,"),a("code",{pre:!0},[s._v("private")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("public")]),s._v("：接口访问权限")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("每个编译单元中只能有一个"),a("code",{pre:!0},[s._v("public")]),s._v("类，否则编译器就不会接受，如果还有额外的类，包外面的世界是看不到这些类的，这些类主要用来为主"),a("code",{pre:!0},[s._v("public")]),s._v("类做支持。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("package")]),s._v("和"),a("code",{pre:!0},[s._v("import")]),s._v("关键字允许你做的，是将单一的全局名字空间分割开")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("strong",[s._v("对包使用的忠告")]),a("ul",[a("li",[s._v("必须位于其名称所指定的目录中，而该目录必须"),a("code",{pre:!0},[s._v("CLASSPATH")]),s._v("开始的目录中可以查询到的")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("private")]),s._v("：你无法访问")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Sundae")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Sundae")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Sundae "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("makeASundae")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Sundae();\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("IceCream")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//! Sundae x = new Sundae();")]),s._v("\n    Sundae x = Sundae.makeASundae();\n  }\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("protected")]),s._v("：继承访问权限")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("把对它的访问权限赋予派生类")]),a("li",[s._v("提供"),a("strong",[s._v("包访问权限")]),s._v("，相同包内的其他类可以访问")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("em",[s._v("设计模式")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Soup2")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Soup2")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// (2) Create a static object and return a reference")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// upon request.(The "Singleton" pattern):')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Soup2 ps1 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Soup2();\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Soup2 "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("access")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" ps1;\n  }\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("Soup2")]),s._v("的对象是作为"),a("code",{pre:!0},[s._v("Soup2")]),s._v("的一个"),a("code",{pre:!0},[s._v("private static")]),s._v("成员而创建的，所以有且仅有一个，而且只能通过"),a("code",{pre:!0},[s._v("public")]),s._v("方法的"),a("code",{pre:!0},[s._v("access()")]),s._v("访问")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("toString()")]),s._v("方法")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("组合")]),s._v("：将对象引用置于新类中即可")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("初始化这些引用： "),a("ul",[a("li",[s._v("定义对象的地方")]),a("li",[s._v("类的构造器中")]),a("li",[s._v("惰性初始化")]),a("li",[s._v("使用实例初始化")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("继承")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("为了继承，一般的规则是把所有的数据成员都指定为"),a("code",{pre:!0},[s._v("private")]),s._v("，把所有的方法指定为"),a("code",{pre:!0},[s._v("public")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("只能在构造器中调用基类构造器来初始化")]),a("li",[s._v("构建过程从基类向外扩散")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("带参数的构造器：用关键字"),a("code",{pre:!0},[s._v("super")]),s._v("显地编写调用基类构造器的语句")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("代理")]),s._v(" page 131")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("确保正确清理")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("protected")]),s._v("关键字")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("* "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("package")]),s._v(" reusing.ex15;\n* "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("BasicDevice")]),s._v(" ")]),s._v("{\n*\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" String s = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Original"')]),s._v(";\n*\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("BasicDevice")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\ts = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Original"')]),s._v("; }\n*\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("changeS")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String c)")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// outside package, only derived ")]),s._v("\n*\t\ts = c;\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// classes can access protected method\t")]),s._v("\n*\t}\n*\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("showS")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n*\t\tSystem.out.println(s);\n*\t}\n* }\n*/\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" reusing.ex15.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("DeviceFail")]),s._v(" ")]),s._v("{\t\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] s)")]),s._v(" ")]),s._v("{\n\t\tBasicDevice fail = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" BasicDevice();\n\t\tfail.showS();\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// fail.changeS("good-bye"); // cannot access protected method \t')]),s._v("\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Device")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("BasicDevice")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("changeBasic")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String t)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("super")]),s._v(".changeS(t); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// calls protected method")]),s._v("\n\t}\t\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tDevice d = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Device();\n\t\td.showS();\n\t\td.changeBasic("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Changed"')]),s._v("); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// derived class can access protected")]),s._v("\n\t\td.showS();\n\t\tDeviceFail.main(args);\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("向上转型")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Instrument")])]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("play")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("tune")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Instrument i)")])]),s._v("{\n\t\ti.play();\n    }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Wind")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Instrument")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")])]),s._v("{\n        Wind flute = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Wind();\n        Instrument.play(flute); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//upcasting")]),s._v("\n    }\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("再论组合与继承")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Amphibian")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("swim")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Amphibian swim"')]),s._v(");\t\t\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("speak")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Amphibian speak"')]),s._v(");\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("eat")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Amphibian eat"')]),s._v(");\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("grow")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Amphibian a)")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Amphibian grow"')]),s._v(");\n\t\ta.eat();\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Frog17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Amphibian")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("swim")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Frog swim"')]),s._v(");\t\t\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("speak")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Frog speak"')]),s._v(");\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("eat")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Frog eat"')]),s._v(");\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("grow")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Amphibian a)")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Frog grow"')]),s._v(");\n\t\ta.eat();\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tFrog17 f = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Frog17();\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// call overridden base-class methods:")]),s._v("\n\t\tf.swim();\n\t\tf.speak();\n\t\tf.eat();\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// upcast Frog17 to Amphibian argument:")]),s._v("\n\t\tf.grow(f);\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// upcast Frog17 to Amphibian and call Amphibian method:")]),s._v("\n\t\tAmphibian.grow(f);\n\t}\n}"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*output:\nFrog swim\nFrog speak\nFrog eat\nFrog grow\nFrog eat\nAmphibian grow\nFrog eat // !!\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//~")]),s._v("\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("=="),a("em",[s._v("@override")]),s._v("==可以防止在不想重载的时候进行重载，想要覆写而不是重载的时候使用：当你不小心重载了就会报错")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("重写（复写）是"),a("strong",[s._v("子类")]),s._v("的方法覆盖"),a("strong",[s._v("父类")]),s._v("的方法，要求"),a("strong",[s._v("方法名和参数相同")]),s._v("，访问修饰符的限制一定要大于被重写方法的访问修饰符，"),a("strong",[s._v("只有非"),a("code",{pre:!0},[s._v("private")]),s._v("方法才可以被覆盖")])])]),a("li",[a("p",[s._v("重载是在同一个类中有两个或两个以上的方法，拥有"),a("strong",[s._v("相同的方法名，但是参数不同")]),s._v("（参数个数、次序、类型不同），对返回值没有要求，可以相同，也可以不同，，方法体也不相同，但是如果参数的个数、类型、次序都相同，方法名也相同，仅返回值不同，则无法构成重载方法，最常见的重载例子就是类的构造函数。")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("final")]),s._v("关键字")]),s._v("：“永远无法改变的”")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("定义为"),a("code",{pre:!0},[s._v("public")]),s._v("，则可以被用于包之外；定义为"),a("code",{pre:!0},[s._v("static")]),s._v("，强调只有一份；定义为"),a("code",{pre:!0},[s._v("final")]),s._v("，说明它是一个常量。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("空白"),a("code",{pre:!0},[s._v("final")]),s._v("：必须在域的定义处或者每个构造器中用表达式对"),a("code",{pre:!0},[s._v("final")]),s._v("进行赋值")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("final")]),s._v("方法：把方法锁定 & 效率")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("继承和初始化")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//ex24")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Insect")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("9")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" j;\n\tInsect() {\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"i = "')]),s._v(" + i + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('", j = "')]),s._v(" + j);\n\t\tj = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("39")]),s._v(";\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" x1 = printInit("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"static Insect.x1 initialized"')]),s._v(");\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("printInit")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String s)")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println(s);\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("47")]),s._v(";\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Beetle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Insect")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" k = printInit("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Beetle.k initialized"')]),s._v(");\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" z = printInit("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"this is an order test"')]),s._v(");\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Beetle")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"k = "')]),s._v(" + k);\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"j = "')]),s._v(" + j);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" x2 = printInit("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"static Beetle.x2 initialized"')]),s._v(");\t\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Scarab")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Beetle")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" n = printInit("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Scarab.n initialized"')]),s._v(");\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Scarab")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"n = "')]),s._v(" + n);\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"j = "')]),s._v(" + j);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" x3 = printInit("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"static Scarab.x3 initialized"')]),s._v(");\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Scarab constructor"')]),s._v(");\n\t\tScarab sc = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Scarab();\t\t\t\n\t}\n}"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*output\nstatic Insect.x1 initialized\nthis is an order test\nstatic Beetle.x2 initialized\nstatic Scarab.x3 initialized\nScarab constructor\ni = 9, j = 0\nBeetle.k initialized\nk = 47\nj = 39\nScarab.n initialized\nn = 47\nj = 39\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//~")]),s._v("\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("继数据抽象和继承之后的第三种基本特征，作用是消除"),a("em",[s._v("类型")]),s._v("之间的耦合关系")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("em",[s._v("Java")]),s._v("中除了"),a("code",{pre:!0},[s._v("static")]),s._v("方法和"),a("code",{pre:!0},[s._v("final")]),s._v("方法，其他所有的方法都是后期绑定")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// polymorphism/biking/Biking5.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// TIJ4 Chapter Polymorphism, Exercise 5, page 286")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Starting from Exercise 1, add a wheels() method in Cycle, which returns the\n* number of wheels. MOdify ride() to call wheels() and verify that polymorphism\n* works.\n*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("package")]),s._v(" polymorphism.biking;\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" org.greggordon.tools.Print.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Cycle")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" String name = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cycle"')]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" wheels = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("travel")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Cycle c)")]),s._v(" ")]),s._v("{\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cycle.ride() "')]),s._v(" + c);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("wheels")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" wheels; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name;\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Unicycle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Cycle")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" String name = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Unicycle"')]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" wheels = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("wheels")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" wheels; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name;\n\t}\t\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Bicycle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Cycle")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" String name = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Bicycle"')]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" wheels = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("wheels")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" wheels; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name;\n\t}\t\n\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Tricycle")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Cycle")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" String name = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Tricycle"')]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" wheels = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("wheels")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" wheels; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name;\n\t}\t\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Biking5")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ride")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Cycle c)")]),s._v(" ")]),s._v("{\n\t\tc.travel(c);\n\t\tprintln("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"wheels: "')]),s._v(" + c.wheels());\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tUnicycle u = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Unicycle();\n\t\tBicycle b = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Bicycle();\n\t\tTricycle t = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Tricycle();\n\t\tride(u); "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// upcast to Cycle")]),s._v("\n\t\tride(b);\n\t\tride(t);\t\t\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//ex10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("A")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ \n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"A.f()"')]),s._v(");\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".g(); \n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("g")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"A.g()"')]),s._v("); \n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("B")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("A")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("g")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"B.g()"')]),s._v(");\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Ex10")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tB b = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" B();\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// automatic upgrade to base-class to call base-class method A.f()")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// which,by polymorphism, will call the derived-class method B.g():")]),s._v("\n\t\tb.f();\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("协变返回类型")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("组合对比继承 "),a("ul",[a("li",[s._v("继承结构,子类可以获得父类内部实现细节,破坏封装。组合结构:整体不能看到部分的内部实现细节,不会破坏封装")]),a("li",[s._v("继承模式是单继承,不支持动态继承,组合模式可以支持动态组合")]),a("li",[s._v("继承结构中,子类可以回溯父类,直到Object类,这样就可以根据业务实现多态(向上转型和向下转型) ,组合中不可以实现多态")]),a("li",[s._v("在开发 过程中,如果复用的部分不会改变,为了安全性和封装的本质,应该使用组合,当我们不仅需要复用,而且还可能要重写或扩展,则应该使用继承")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("接口与内部类提供了一种将接口与实现分离的更加结构化的方法")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("抽象方法 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("abstract void f()")])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//ex3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Dad")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n\tDad() { print(); }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Son")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Dad")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("@Override "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("protected")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Son.i = "')]),s._v(" + i); }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Ex3")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Process of initialization:\n\t\t* 1. Storage for Son s allocated and initialized to binary zero\n\t\t* 2. Dad() called\n\t\t* 3. Son.print() called in Dad() (s.i = 0)\n\t\t* 4. Member initializers called in order (s.i = 1)\n\t\t* 5. Body of Son() called\n\t\t*/")]),s._v("\n\t\tSon s = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Son();\n\t\ts.print();\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("接口 "),a("code",{pre:!0},[s._v("interface")]),a("ul",[a("li",[s._v("自动就是"),a("code",{pre:!0},[s._v("public")])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("package")]),s._v(" interfaces.music10;\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" polymorphism.music.Note;\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" net.mindview.util.Print.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Instrument")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Compile-time constant:")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" VALUE = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v("; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// static and final")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Cannot have method definitions:\t")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("adjust")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("; \n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Playable")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("play")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Note n)")])]),s._v("; "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Automatically public")]),s._v("\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Wind")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Instrument")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Playable")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("play")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Note n)")]),s._v(" ")]),s._v("{\n\t\tprint("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('".play() "')]),s._v(" + n);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Wind"')]),s._v("; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("adjust")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ print("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('".adjust()"')]),s._v("); }\n}\n\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Percussion")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Instrument")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Playable")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("play")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Note n)")]),s._v(" ")]),s._v("{\n\t\tprint("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('".play() "')]),s._v(" + n);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Percussion"')]),s._v("; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("adjust")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ print("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('".adjust()"')]),s._v("); }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Stringed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Instrument")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Playable")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("play")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Note n)")]),s._v(" ")]),s._v("{\n\t\tprint("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('".play() "')]),s._v(" + n);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Stringed"')]),s._v("; }\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("adjust")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ print("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('".adjust()"')]),s._v("); }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Brass")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Wind")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Brass"')]),s._v("; }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Woodwind")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Wind")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Woodwing"')]),s._v("; }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Music10")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Doesn't care about type, so new types")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// added to the system will work right:")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("tune")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Playable p)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//...")]),s._v("\n\t\tp.play(Note.MIDDLE_C);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("tuneAll")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Playable[] e)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("(Playable p : e)\n\t\t\ttune(p);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Upcasting during addition to the array:")]),s._v("\n\t\tPlayable[] orchestra = {\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Wind(),\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Percussion(),\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Stringed(),\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Brass(),\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Woodwind()\n\t\t};\n\t\ttuneAll(orchestra);\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("策略设计模式：根据所传递的参数对象不同而具有不同行为的方法")])]),a("li",[a("p",[s._v("适配器设计模式：适配器中的代码将接受的你接口，并产生你需要的接口")]),a("ul",[a("li",[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("FilterAdapter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Processor")])]),s._v("{\n\tFilter filter;\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("FilterAdpater")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Filter filter)")])]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".filter = filter;\n    }\n}\n")])])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[s._v("抽象类和接口的区别")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("接口是抽象类的变体，接口中所有的方法都是抽象的；而抽象类是声明方法的存在而不去实现它的类")])]),a("li",[a("p",[s._v("接口可以多继承，抽象类不行")])]),a("li",[a("p",[s._v("接口定义方法，不能实现，而抽象类可以实现部分方法")])]),a("li",[a("p",[s._v("接口中基本数据类型为static 而抽类象不是的")])]),a("li",[a("p",[s._v("当你关注一个事物的本质的时候，用抽象类；当你关注一个操作的时候，用接口")])]),a("li",[a("p",[a("em",[s._v("Java")]),s._v("中的多重继承")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//ex13")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDo")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doIt")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDoMore")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDo")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doMore")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDoFaster")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDo")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doFaster")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDoMost")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDoMore")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDoFaster")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doMost")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Doer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("CanDoMost")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doIt")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doMore")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doFaster")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doMost")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("DiamondInheritance13")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tDoer d = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Doer();\n\t\t((CanDoMore)d).doMore();\n\t\t((CanDoFaster)d).doFaster();\n\t\t((CanDo)d).doIt();\t\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("通过继承来扩展接口")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//ex14 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//error but still working")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Cat")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("huntRat")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("drinkMilk")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Dog")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("bitCat")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("eatBone")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Docat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Cat")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Dog")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("scareHuman")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Animal")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Docat")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("huntRat")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"HuntRat"')]),s._v(");}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("drinkMilk")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("bitCat")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("eatBone")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("scareHuman")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"scareHuman"')]),s._v(");}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("bite")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Cat c)")]),s._v(" ")]),s._v("{\n\t\tc.huntRat();\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("scare")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Docat d)")]),s._v(" ")]),s._v("{\n\t\td.scareHuman();\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tAnimal a = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Animal();\n\t\tbite(a);\n\t\tscare(a);\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("适配接口")]),a("ul",[a("li",[a("strong",[s._v("“你可以用任何你想要的对象来调用我的方法，只要你的对象遵循我的接口”")])])]),a("p",[s._v("说实话这边没太看懂 page 182")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("接口中的域隐式的自动是"),a("code",{pre:!0},[s._v("static")]),s._v("和"),a("code",{pre:!0},[s._v("final")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("嵌套接口")])]),a("li",[a("p",[s._v("工厂模式：某个接口或者类的工厂对象上调用的是创建方法，而工厂对象将直接生成接口的某个实现的对象")]),a("p",[s._v("就是一层套一层，每一层都有对应的"),a("em",[s._v("方法类")]),s._v("和"),a("em",[s._v("工厂类")]),s._v("，最后只要在接口上调用就行")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Service")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ServiceFactory")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("Service "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getService")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Implementation1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Service")]),s._v(" ")]),s._v("{\n  Implementation1() {} "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Package access")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Implementation1 method1"')]),s._v(");}\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Implementation1 method2"')]),s._v(");}\n}\t\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Implementation1Factory")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ServiceFactory")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Service "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getService")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Implementation1();\n  }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Implementation2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Service")]),s._v(" ")]),s._v("{\n  Implementation2() {} "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Package access")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Implementation2 method1"')]),s._v(");}\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Implementation2 method2"')]),s._v(");}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Implementation2Factory")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ServiceFactory")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Service "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getService")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Implementation2();\n  }\n}\t\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Factories")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("serviceConsumer")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(ServiceFactory fact)")]),s._v(" ")]),s._v("{\n    Service s = fact.getService();\n    s.method1();\n    s.method2();\n  }\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    serviceConsumer("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Implementation1Factory());\n    "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Implementations are completely interchangeable:")]),s._v("\n    serviceConsumer("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Implementation2Factory());\n  }\n} "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Output:\nImplementation1 method1\nImplementation1 method2\nImplementation2 method1\nImplementation2 method2\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//:~")]),s._v("\n")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("如果想在外部类的非静态方法之外的任意位置创建某个内部类对象，则必须具体指明这个对象的类型："),a("strong",[a("code",{pre:!0},[s._v("OuterClassName.InnerClassName")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("内部类拥有对外围类所有元素的访问权（包括"),a("code",{pre:!0},[s._v("private")]),s._v("）")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("使用"),a("code",{pre:!0},[s._v(".this")]),s._v("与"),a("code",{pre:!0},[s._v(".new")])])]),a("li",[a("p",[s._v("内部类与向上转型")])]),a("li",[a("p",[s._v("在方法和作用域内的内部类")])]),a("li",[a("p",[a("strong",[s._v("匿名内部类 page 197")])]),a("ul",[a("li",[a("p",[s._v("如果定义一个匿名内部类，并且希望它使用一个在其外部对应的对象，那么编译器会要求其参数引用是"),a("code",{pre:!0},[s._v("final")]),s._v("的")])]),a("li",[a("p",[s._v("再访工厂方法：只需要单一的工厂对象了")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" net.mindview.util.Print.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Service")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ServiceFactory")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("Service "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getService")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\t\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Implementation1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Service")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Implementation1")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method1")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Implementation1 method1"')]),s._v(");}\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("method2")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{print("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Implementation1 method2"')]),s._v(");}\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" ServiceFactory factory =\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" ServiceFactory() {\n      "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Service "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getService")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n        "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Implementation1();\n      }\n    };\n}\t\n")])])])])]),a("li",[a("p",[s._v("嵌套类")]),a("ul",[a("li",[a("p",[s._v("如果不需要内部类对象和外围对象之间有联系，那么可以将内部类声明为"),a("code",{pre:!0},[s._v("static")])])]),a("li",[a("p",[a("strong",[s._v("可以使用嵌套类来放置测试代码")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("TestBed")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"f()"')]),s._v("); }\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Tester")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n      TestBed t = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" TestBed();\n      t.f();\n    }\n  }\n}\n")])])]),a("li",[a("p",[s._v("为什么要使用内部类 page 204")]),a("ul",[a("li",[a("em",[s._v("多重继承")]),s._v("的问题")])])]),a("li",[a("p",[s._v("闭包与回调")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//Callbacks.java")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Incrementable")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("increment")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v(";\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Callee1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Incrementable")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("increment")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\ti++;\n\t\tSystem.out.println(i);\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MyIncrement")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("increment")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"other operation"')]),s._v(");}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(MyIncrement mi)")]),s._v(" ")]),s._v("{mi.increment();}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Callee2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MyIncrement")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("increment")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("super")]),s._v(".increment();\n\t\ti += "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(";\n\t\tSystem.out.println(i);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Closure")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Incrementable")])]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("increment")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{\n\t\t\tCallee2."),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".increment();\n\t\t}\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("Incrementable "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getCall")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Closure();\n\t}\n}\n\n\t\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Caller")]),s._v(" ")]),s._v("{\n\t  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" Incrementable callbackReference;\n\t  Caller(Incrementable cbh) { callbackReference = cbh; }\n\t  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("go")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{ callbackReference.increment(); }\n\t}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Callbacks")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    Callee1 c1 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Callee1();\n    Callee2 c2 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Callee2();\n    MyIncrement.f(c2);\n    Caller caller1 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Caller(c1);\n    Caller caller2 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Caller(c2.getCall());\n    caller1.go();\n    caller1.go();\n    caller2.go();\n    caller2.go();\n  }\t\n}"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/*output:\nother operation\n10\n1\n2\nother operation\n20\nother operation\n30\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//~")]),s._v("\n")])])]),a("li",[a("p",[s._v("内部类与控制框架")]),a("ul",[a("li",[s._v("主要用来响应事件的系统称为"),a("em",[s._v("事件驱动系统")])]),a("li",[s._v("使变化的事物与不变得事物分离")])])]),a("li",[a("p",[s._v("内部类的继承 page 212")])]),a("li",[a("p",[s._v("局部内部类")]),a("ul",[a("li",[s._v("和匿名内部类功能差不多，区别在于匿名内部类只能用于实例初始化；而我们需要一个已命名的构造器，或者需要重载构造器时可以用局部内部类")])])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("chp11")]),s._v(" ")]),s._v("{\n\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Gerbil")])]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" gerbilNumber;\n\tGerbil("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i){\n\t\tgerbilNumber = i;\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("hop")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\tSystem.out.println(gerbilNumber);\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tArrayList<Gerbil> gerbil = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" ArrayList<Gerbil>();\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";i < "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(";++i) {\n\t\t\tgerbil.add("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Gerbil(i));\n\t\t}\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("(Gerbil g: gerbil) {\n\t\t\tg.hop();\n\t\t}\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[s._v("添加一组元素 page 220")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("Collection")]),s._v("：每个槽中只能保存一个元素，此类容器包括："),a("code",{pre:!0},[s._v("List")]),s._v("，以特定顺序保存一组元素；"),a("code",{pre:!0},[s._v("Set")]),s._v("，元素不能重复；"),a("code",{pre:!0},[s._v("Queue")]),s._v("，只允许在容器的一端插入对象，并从另一端移除对象")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("Map")]),s._v("：每个槽内保存了两个对象")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("List")]),s._v(":"),a("code",{pre:!0},[s._v("ArrayList")]),s._v("和"),a("code",{pre:!0},[s._v("LinkedList")])]),a("ul",[a("li",[a("code",{pre:!0},[s._v("contains()")]),s._v("：确定某个对象是否在列表中")]),a("li",[a("code",{pre:!0},[s._v("indexOf()")])]),a("li",[a("code",{pre:!0},[s._v("subList(start, end)")])]),a("li",[a("code",{pre:!0},[s._v("containAll()")])]),a("li",[a("code",{pre:!0},[s._v("XXX.retianAll()")]),s._v(":在"),a("code",{pre:!0},[s._v("XXX")]),s._v("中保留交集元素")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[s._v("迭代器")]),a("ul",[a("li",[a("p",[s._v("只能单向移动")])]),a("li",[a("p",[s._v("准备好返回序列的第一个元素，==要先"),a("code",{pre:!0},[s._v(".next()")]),s._v("==")])]),a("li",[a("p",[s._v("接受容器对象并传递它，从而在每个对象上都执行操作，这种思想十分强大")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("Iterator<Gerbil> it = gerbil.iterator();\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(it.hasNext()) \n    it.next().hop();\n")])])]),a("li",[a("p",[a("code",{pre:!0},[s._v("ListIterator")])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("LinkedList")]),s._v(" page 228")]),a("ul",[a("li",[s._v("栈、队列、双端队列")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("Stack")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("Set")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("Map")])]),a("ul",[a("li",[a("code",{pre:!0},[s._v(".keySet()")])]),a("li",[a("code",{pre:!0},[s._v(".values()")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("Queue")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("peek()")]),s._v(" "),a("code",{pre:!0},[s._v("element()")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("poll()")]),s._v(" "),a("code",{pre:!0},[s._v("remove()")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("offer()")]),s._v("：插入队列")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("PriorityQueue")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("li",[a("p",[a("code",{pre:!0},[s._v("ForReach")]),s._v("与迭代器 page 241")]),a("ul",[a("li",[a("p",[s._v("如果要创建自己的"),a("code",{pre:!0},[s._v("iterator")]),s._v("，需要用适配器方法惯用法-两层")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Iterable<Pet> "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("reversed")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Iterable<Pet>() {\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Iterator<Pet> "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("iterator")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Iterator<Pet>() {\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" current = pets.length - "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("hasNext")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" current > -"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n\t\t\t\t\t}\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Pet "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" pets[current--];\n\t\t\t\t\t}\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("remove")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("\n\t\t\t\t\t\tUnsupportedOperationException();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}\n")])])]),a("li",[a("p",[s._v("没有创建自己的"),a("code",{pre:!0},[s._v("Iterator")]),s._v(":")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Iterable<Pet> "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("randomized")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Iterable<Pet>() {\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Iterator<Pet> "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("iterator")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t\t\tList<Pet> shuffled = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("\n\t\t\t\t  \tArrayList<Pet>(Arrays.asList(pets));\n\t\t\t\tCollections.shuffle(shuffled, "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Random());\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" shuffled.iterator();\n\t\t\t}\n\t\t};\n\t}\n")])])])])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("li",[e("p",[e("strong",[s._v("总结")])]),e("p",[e("img",{attrs:{src:a("6435"),alt:"QQ截图20200404115217"}})])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("所有标准异常类都有两个构造器：一个是默认，一个接受"),a("strong",[s._v("字符串")]),s._v("作为参数")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("异常与记录日志")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//Ex7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Ex7")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] ia = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("];\t\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Logger logger = Logger.getLogger("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Ex7 Exceptions"')]),s._v(");\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("logException")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(Exception e)")]),s._v(" ")]),s._v("{ "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Exception e argument")]),s._v("\n\t\tStringWriter trace = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" StringWriter();\n\t\te.printStackTrace("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" PrintWriter(trace));\n\t\tlogger.severe(trace.toString()); \t\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n\t\t\tia["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("] = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(";\t\n\t\t} "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(ArrayIndexOutOfBoundsException e) {\n\t\t\tSystem.err.println(\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Caught ArrayIndexOutOfBoundsException"')]),s._v(");\n\t\t\te.printStackTrace();\n\t\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// call logging method:")]),s._v("\n\t\t\tlogException(e);\n\t\t} \n\t}\t\n}\n")])])]),a("li",[a("p",[s._v("异常说明")])]),a("li",[a("p",[s._v("捕获所有异常")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("Exception")])]),a("li",[s._v("ex 9 好像有点问题")])])]),a("li",[a("p",[s._v("栈轨迹")])]),a("li",[a("p",[s._v("重新抛出异常")]),a("ul",[a("li",[s._v("会把异常抛给上一级环境中的异常处理程序")])])]),a("li",[a("p",[s._v("异常链")]),a("ul",[a("li",[s._v("在捕获一个异常后抛出另一个异常，并且希望把原始异常的信息保存下来")])])]),a("li",[a("p",[a("code",{pre:!0},[s._v("initCause()")]),s._v("方法")])]),a("li",[a("p",[s._v("关于"),a("code",{pre:!0},[s._v("RuntimeException")])]),a("ul",[a("li",[s._v("只能在代码中忽略"),a("code",{pre:!0},[s._v("RuntimeException")]),s._v("（及其子类）类型的异常，其他类型异常的处理都是由编译器强制实施的")])])]),a("li",[a("p",[s._v("使用"),a("code",{pre:!0},[s._v("finally")]),s._v("进行清理")]),a("ul",[a("li",[s._v("当需要把除内存之外的资源恢复到它们的初始状态时，就要用到"),a("code",{pre:!0},[s._v("finally")]),s._v("字句")]),a("li",[s._v("当涉及"),a("code",{pre:!0},[s._v("continue")]),s._v("和"),a("code",{pre:!0},[s._v("break")]),s._v("语句的时候，"),a("code",{pre:!0},[s._v("finally")]),s._v("字句也会得到执行")]),a("li",[s._v("即使在try块中间"),a("code",{pre:!0},[s._v("return")]),s._v("也会起作用")]),a("li",[s._v("异常丢失")])])]),a("li",[a("p",[s._v("异常的限制 page 271")])]),a("li",[a("p",[s._v("异常匹配")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("不可变String")])]),a("li",[a("p",[a("code",{pre:!0},[s._v("StringBuilder")]),s._v("："),a("strong",[s._v("效率问题")])])]),a("li",[a("p",[a("code",{pre:!0},[s._v("String")]),s._v("上的操作 page 288")])]),a("li",[a("p",[s._v("格式化输出")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("Formatter")]),s._v("类")]),a("li",[s._v("格式化说明符")]),a("li",[a("code",{pre:!0},[s._v("Formatter")]),s._v("转换")]),a("li",[a("code",{pre:!0},[s._v("String.format()")])])])]),a("li",[a("p",[s._v("正则表达式")]),a("ul",[a("li",[a("p",[a("code",{pre:!0},[s._v("string.matches()")])])]),a("li",[a("p",[s._v("创建正则表达式 page 298")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//Ex11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.regex.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("RegEx11")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tPattern p = \n\tPattern.compile("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"(?i)((^[aeiou])|(\\\\s+[aeiou]))\\\\w+[aeiou]\\\\b"')]),s._v(");\n\t\tMatcher m = p.matcher("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Arline ate eight apples and one orange while Anita hadn\'t any"')]),s._v(");\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(m.find())\n\t\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Match \\""')]),s._v(" + m.group() + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"\\" at "')]),s._v(" + m.start());\n\t}\n}\n")])]),a("ul",[a("li",[a("p",[a("code",{pre:!0},[s._v("find()")]),s._v("可以在输入的任何位置定位正则表达式，而"),a("code",{pre:!0},[s._v("lookingAt()")]),s._v("和"),a("code",{pre:!0},[s._v("matches()")]),s._v("只有在表达式与输入的最开始处就开始匹配才会成功")])]),a("li",[a("p",[a("code",{pre:!0},[s._v("split()")]),s._v(" page 305")]),a("ul",[a("li",[s._v("将输入字符串断开成字符串"),a("strong",[s._v("数组")])])])]),a("li",[a("p",[a("code",{pre:!0},[s._v("group()")]),s._v(" page 302")])]),a("li",[a("p",[s._v("替换操作")])]),a("li",[a("p",[s._v("正则表达式和Java I/O")])]),a("li",[a("p",[s._v("扫描输入")]),a("ul",[a("li",[a("p",[a("code",{pre:!0},[s._v("Scanner")]),s._v("类")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("useDelimiter()")]),s._v("方法来设置定界符，默认为空白字符")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//Ex20")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Scanner20")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i;\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("long")]),s._v(" L;\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("float")]),s._v(" f;\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("double")]),s._v(" d;\n\tString s;\n\tScanner20(String s) {\n\t\tScanner sc = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Scanner(s);\n\t\ti = sc.nextInt();\n\t\tL = sc.nextLong();\n\t\tf = sc.nextFloat();\n\t\td = sc.nextDouble();\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".s = sc.next(); \t\t\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" String "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" i + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" "')]),s._v(" + L + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" "')]),s._v(" + f + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" "')]),s._v(" + d + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" "')]),s._v(" + s;\n\t}\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\tScanner20 s20 = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Scanner20("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"17 56789 2.7 3.61412 hello"')]),s._v(");\n\t\tSystem.out.println(s20);\n\t}\n}\n")])])]),a("li",[a("p",[s._v("使用正则表达式扫描")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.regex.*;\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.util.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ThreatAnalyzer")]),s._v(" ")]),s._v("{\n  "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" String threatData =\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"58.27.82.161@02/10/2005\\n"')]),s._v(" +\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"204.45.234.40@02/11/2005\\n"')]),s._v(" +\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"58.27.82.161@02/11/2005\\n"')]),s._v(" +\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"58.27.82.161@02/12/2005\\n"')]),s._v(" +\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"58.27.82.161@02/12/2005\\n"')]),s._v(" +\n    "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"[Next log section with different data format]"')]),s._v(";\n  "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    Scanner scanner = "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Scanner(threatData);\n    String pattern = "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"(\\\\d+[.]\\\\d+[.]\\\\d+[.]\\\\d+)@"')]),s._v(" +\n      "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"(\\\\d{2}/\\\\d{2}/\\\\d{4})"')]),s._v(";\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(scanner.hasNext(pattern)) {\n      scanner.next(pattern);\n      MatchResult match = scanner.match();\n      String ip = match.group("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n      String date = match.group("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(");\n      System.out.format("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Threat on %s from %s\\n"')]),s._v(", date,ip);\n    }\n  }\n} "),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* Output:\nThreat on 02/10/2005 from 58.27.82.161\nThreat on 02/11/2005 from 204.45.234.40\nThreat on 02/11/2005 from 58.27.82.161\nThreat on 02/12/2005 from 58.27.82.161\nThreat on 02/12/2005 from 58.27.82.161\n*/")]),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//:~")]),s._v("\n\n")])])])])])])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("strong",[a("code",{pre:!0},[s._v("RTTI")])]),s._v("：在运行时，识别一个对象的类型")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[a("code",{pre:!0},[s._v("Class")]),s._v("类")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("forName()")]),s._v("是取得"),a("code",{pre:!0},[s._v("Class")]),s._v("对象引用的一种方法 "),a("ul",[a("li",[s._v("参数是字符串")]),a("li",[s._v("必须使用全限定名（包括类名）")])])]),a("li",[s._v("使用类而做准备工作： "),a("ul",[a("li",[s._v("加载")]),a("li",[s._v("链接")]),a("li",[s._v("初始化")])])]),a("li",[s._v("使用泛型语法，可以让编译器强制执行额外的类型检查 page 320")]),a("li",[s._v("用于"),a("code",{pre:!0},[s._v("Class")]),s._v("引用的转型语法，即"),a("code",{pre:!0},[s._v("cast()")]),s._v("方法")])])]),a("li",[a("p",[s._v("注册工厂")]),a("ul",[a("li",[s._v("工厂方法设计模式")])])]),a("li",[a("p",[a("code",{pre:!0},[s._v("instanceof")]),s._v("与直接比较（"),a("code",{pre:!0},[s._v("==")]),s._v("）的等价性")])]),a("li",[a("p",[s._v("**反射：运行时的类信息 **page 335")]),a("ul",[a("li",[a("p",[s._v("类方法提取器：动态地提取某个类的信息")])]),a("li",[a("p",[a("code",{pre:!0},[s._v("java.lang.reflect.*")])]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//Ex19")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("import")]),s._v(" java.lang.reflect.*;\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("HasBatteries")]),s._v(" ")]),s._v("{}\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Waterproof")]),s._v(" ")]),s._v("{}\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Shoots")]),s._v(" ")]),s._v("{}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Toy")]),s._v(" ")]),s._v("{\n\tToy() {\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Creating Toy() object"')]),s._v(");\t\n\t}\n\tToy("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i) {\n\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Creating Toy("')]),s._v(" + i + "),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('") object"')]),s._v(");\n\t}\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("FancyToy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Toy")]),s._v(" \n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("HasBatteries")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Waterproof")]),s._v(", "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Shoots")]),s._v(" ")]),s._v("{\n\t\tFancyToy() { "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("super")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("); }\n}\n\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("ToyTest19")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// get appropriate constructor and create new instance:")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n\t\t\tToy"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[s._v("."),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getDeclaredConstructor")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("int")]),s._v("."),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("class")]),s._v(")."),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("newInstance")]),s._v("(1)")]),s._v(";\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// catch four exceptions:")]),s._v("\n\t\t} "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(NoSuchMethodException e) {\n\t\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"No such method: "')]),s._v(" + e);\n\t\t} "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(InstantiationException e) {\n\t\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Unable make Toy: "')]),s._v(" + e);\n\t\t} "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(IllegalAccessException e) {\n\t\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Unable access: "')]),s._v(" + e);\n\t\t} "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v("(InvocationTargetException e) {\n\t\t\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Target invocation problem: "')]),s._v(" + e);\n\t\t}\n\t}\n}\n")])])])])]),a("li",[a("p",[s._v("动态代理")]),a("ul",[a("li",[s._v("需要一个类加载器；一个希望代理实现的接口列表；"),a("code",{pre:!0},[s._v("InvocationHandler")]),s._v("接口的一个实现")])])]),a("li",[a("p",[s._v("接口与类型信息")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("callHiddenMethod()")]),s._v("：运用反射，可以到达并调用所有方法，甚至是"),a("code",{pre:!0},[s._v("private")]),s._v("方法")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",{pre:!0},[s._v("草草略过")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("一个元组类库")]),a("li",[s._v("泛型接口")]),a("li",[s._v("泛型方法")]),a("li",[s._v("匿名内部类")]),a("li",[s._v("构建复杂模型")]),a("li",[s._v("擦除神秘之处")]),a("li",[s._v("通配符")]),a("li",[s._v("自限定")]),a("li",[s._v("混型")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("p",[e("img",{attrs:{src:a("b7c3"),alt:"1589330855603"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("em",[s._v("享元")]),s._v("设计模式")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("每个"),a("code",{pre:!0},[s._v("Map.Entry")]),s._v("对象都只储存了其索引而不是实际的键和值（P468例子）")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("填充容器 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("shuffle()")]),s._v("：打乱顺序")]),a("li",[a("code",{pre:!0},[s._v("map.headMap(key_point)")]),s._v("：返回map中键值严格小于key_point的键（"),a("code",{pre:!0},[s._v("headSet()")]),s._v("同理）")])])]),a("li",[s._v("Collection相关功能方法")]),a("li",[s._v("可选操作 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("Arrays.asList()")]),s._v("生成的List是基于一个固定大小的数组，仅支持那些不会改变数组大小的操作")])])]),a("li",[s._v("Set和存储顺序 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("instancof")]),s._v(" 是 Java 的保留关键字。它的作用是测试它左边的对象是否是它右边的类的实例，返回"),a("code",{pre:!0},[s._v("boolean")]),s._v("的数据类型。")])])]),a("li",[s._v("优先级队列")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("p",[s._v("双向队列")])]),a("li",[a("p",[s._v("理解Map")]),a("ul",[a("li",[a("p",[a("code",{pre:!0},[s._v("hashCode()")]),s._v("是Object类中的方法")])]),a("li",[a("p",[a("code",{pre:!0},[s._v("linkedHashMap")]),s._v("有五个构造函数，其中")]),a("ul",[a("li",[a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//真正有点特殊的就是这个，多了一个参数accessOrder。存储顺序，LinkedHashMap关键的参数之一就在这个，")]),s._v("\n　　"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//true：指定迭代的顺序是按照访问顺序(近期访问最少到近期访问最多的元素)来迭代的。 false：指定迭代的顺序是按照插入顺序迭代，也就是通过插入元素的顺序来迭代所有元素")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//如果你想指定访问顺序，那么就只能使用该构造方法，其他三个构造方法默认使用插入顺序。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("22")]),s._v("     "),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("LinkedHashMap")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" initialCapacity,\n"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("23")]),s._v("                          "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("float")]),s._v(" loadFactor,\n"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("24")]),s._v("                          "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("boolean")]),s._v(" accessOrder)")]),s._v(" ")]),s._v("{\n"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("25")]),s._v("         "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("super")]),s._v("(initialCapacity, loadFactor);\n"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("26")]),s._v("         "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".accessOrder = accessOrder;\n"),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("27")]),s._v("     }\n")])])])])])])]),a("li",[a("p",[s._v("微基准测试")])]),a("li",[a("p",[s._v("对List的选择")]),a("ul",[a("li",[s._v("ArrayList是首选，需要经常做增加删除的话使用LinkedList")])])]),a("li",[a("p",[s._v("对Set的选择")]),a("ul",[a("li",[s._v("只有需要排好序的Set的时候才有TreeSet")]),a("li",[s._v("注意``LinkedHashSet"),a("code",{pre:!0},[s._v("的插入代价比")]),s._v("HashSet`高")]),a("li",[a("code",{pre:!0},[s._v("LinkedHashSet")]),s._v("的特点是内部使用链表维护元素的"),a("strong",[s._v("插入顺序")])])])]),a("li",[a("p",[s._v("对Map的选择")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("HashMap")]),s._v("的性能因子 "),a("ul",[a("li",[s._v("容量")]),a("li",[s._v("初始容量")]),a("li",[s._v("尺寸")]),a("li",[s._v("负载因子：尺寸/容量")])])])])]),a("li",[a("p",[s._v("List的排序与查询")])]),a("li",[a("p",[s._v("设定Collection或Map为不可更改")])]),a("li",[a("p",[s._v("快速报错")])]),a("li",[a("p",[s._v("持有引用")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("SoftReference")])]),a("li",[a("code",{pre:!0},[s._v("WeakReference")])]),a("li",[a("code",{pre:!0},[s._v("PhantomReference")])])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("用并发解决的问题大体可分为： "),a("ul",[a("li",[s._v("速度")]),a("li",[s._v("设计可管理性")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("实现并发最直接的方式是在操作系统级别使用"),a("strong",[s._v("进程")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("一个"),a("strong",[s._v("线程")]),s._v("就是在进程中的一个单一的顺序控制流")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("code",{pre:!0},[s._v("Thread")]),s._v("类")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("package")]),s._v(" concurrency;\n"),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Printer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Runnable")]),s._v(" ")]),s._v("{\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" taskCount;\n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" id = taskCount++;\n    Printer() {\n    System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Printer started, ID = "')]),s._v(" + id);\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    System.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Stage 1..., ID = "')]),s._v(" + id);\n\tThread.yield();\t\n\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Stage 2..., ID = "')]),s._v(" + id);\n\tThread.yield();\n\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Stage 3..., ID = "')]),s._v(" + id);\n\tThread.yield();\n\tSystem.out.println("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Printer ended, ID = "')]),s._v(" + id);\n}\n}\n"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-class"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("E01_Runnable")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; i < "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v("; i++)\n\t\t"),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Thread("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Printer()).start();\n\t}\n}\n")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("使用"),a("code",{pre:!0},[s._v("Exexutor")]),a("ul",[a("li",[a("code",{pre:!0},[s._v("newCachedThreadPool")])]),a("li",[a("code",{pre:!0},[s._v("newFixedThreadPool")])]),a("li",[a("code",{pre:!0},[s._v("newSingleThreadPool")]),s._v("：线程数量为1的"),a("code",{pre:!0},[s._v("FixedThreadPool")])])])]),a("li",[s._v("从任务中产生返回值 "),a("ul",[a("li",[s._v("使用"),a("code",{pre:!0},[s._v("Callable")]),s._v("接口")]),a("li",[a("code",{pre:!0},[s._v("ExecutorService.submit()")]),s._v("方法来调用")])])]),a("li",[s._v("休眠 "),a("ul",[a("li",[s._v("对"),a("code",{pre:!0},[s._v("sleep()")]),s._v("的调用可以抛出"),a("code",{pre:!0},[s._v("InterruptedException")]),s._v("异常")]),a("li",[s._v("异常不能跨线程传播回main()，所以必须本地处理所有任务内部产生的异常")])])]),a("li",[s._v("优先级 "),a("ul",[a("li",[s._v("优先权不会导致死锁")])])]),a("li",[s._v("让步 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("yield()")]),s._v("：给线程调度机制一个暗示")]),a("li",[s._v("大体上对于任何重要的控制或者在调整应用时，不能依赖于"),a("code",{pre:!0},[s._v("yield()")])])])]),a("li",[s._v("后台线程 "),a("ul",[a("li",[s._v("是指程序运行的时候在后台提供一种通用服务的线程")]),a("li",[s._v("所有非后台线程结束时，程序就终止了")])])]),a("li",[s._v("编码的变体")]),a("li",[s._v("加入一个线程 "),a("ul",[a("li",[a("code",{pre:!0},[s._v(".join()")])])])]),a("li",[s._v("捕获异常 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("Thread.UncaughtExceptionHandler")]),s._v("接口")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("共享受限资源 "),a("ul",[a("li",[s._v("加锁 or 根除对变量的共享")]),a("li",[s._v("互斥量")]),a("li",[a("code",{pre:!0},[s._v("synchronized")]),s._v("：将域设置为"),a("code",{pre:!0},[s._v("private")]),s._v("是十分重要的")]),a("li",[s._v("使用显式的"),a("code",{pre:!0},[s._v("Lock")]),s._v("对象")]),a("li",[s._v("原子性和易变性")]),a("li",[s._v("使用"),a("code",{pre:!0},[s._v("volatile")]),s._v("而不是"),a("code",{pre:!0},[s._v("synchronized")]),s._v("唯一安全的情况是类中只有一个可变的域")]),a("li",[s._v("原子类")]),a("li",[s._v("临界区 "),a("ul",[a("li",[s._v("使用同步控制块而不是对整个方法进行同步控制的原因：在保证安全的前提下，对象不加锁的时间更长，使得其他线程能够更多的访问")])])])])]),a("li",[s._v("终结任务 "),a("ul",[a("li",[s._v("在阻塞时终结")]),a("li",[a("strong",[s._v("线程状态")]),a("ul",[a("li",[s._v("新建")]),a("li",[s._v("就绪")]),a("li",[s._v("阻塞")]),a("li",[s._v("死亡")])])]),a("li",[s._v("中断 "),a("ul",[a("li",[s._v("I/O和在"),a("code",{pre:!0},[s._v("sybchronized")]),s._v("块上的等待是不可中断的，意味着I/O具有锁住你的多线程的潜在可能")]),a("li",[s._v("只要任务以不可中断的方式被阻塞，就会有潜在的会锁住程序的可能")]),a("li",[s._v("检查中断")])])]),a("li",[s._v("线程之间的协作 "),a("ul",[a("li",[s._v("握手问题 "),a("code",{pre:!0},[s._v("wait()")]),s._v("和"),a("code",{pre:!0},[s._v("notifyAll()")])]),a("li",[a("em",[s._v("忙等待")]),s._v("：任务测试这个条件的同时，不断进行空循环")]),a("li",[s._v("只能在同步控制方法或者同步控制块里调用")]),a("li",[a("strong",[s._v("错失的信号")])]),a("li",[s._v("当"),a("code",{pre:!0},[s._v("notifyAll()")]),s._v("因某个特定锁而被调用是，只有等待这个锁的任务才会被唤醒")]),a("li",[a("strong",[s._v("消费者与生产者")]),a("ul",[a("li",[s._v("同步队列"),a("code",{pre:!0},[s._v("BlockingQueue")])])])]),a("li",[s._v("任务间使用管道进行输入/输出 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("PipedReader")]),s._v("和"),a("code",{pre:!0},[s._v("PipedWriter")])])])])])]),a("li",[a("strong",[s._v("死锁")]),a("ul",[a("li",[s._v("某个任务在等待另一个任务，后者又等待别的任务，这样一直下去，直到这个链条上的任务又在等待第一个任务释放锁。这得到了一个任务之间相互等待的连续循环，没有哪个线程能继续。")]),a("li",[s._v("哲学家就餐问题")]),a("li",[a("strong",[s._v("发生的条件：")]),a("ul",[a("li",[s._v("互斥条件")]),a("li",[s._v("至少有一个任务持有资源并且正在等待一个当前被别的任务持有的资源")]),a("li",[s._v("资源不能被任务抢占，任务必须把资源释放当做普通事件")]),a("li",[s._v("必须有循环等待")])])])])]),a("li",[s._v("新类库中的构件 "),a("ul",[a("li",[a("code",{pre:!0},[s._v("CountDownLatch")]),s._v("：用来同步一个或多个任务，强制他们等待由其他任务执行的一组操作完成 "),a("ul",[a("li",[s._v("典型用法：将一个程序分割成n个相互独立的可解决任务，并创建一个值为0的"),a("code",{pre:!0},[s._v("CountDownLatch")])]),a("li",[s._v("只能触发一次")])])]),a("li",[a("code",{pre:!0},[s._v("CyclicBarrier")]),s._v("： "),a("ul",[a("li",[s._v("可以多次重用")]),a("li",[s._v("可以提供一个“栅栏动作”，当计数值到达0时自动执行")])])]),a("li",[a("code",{pre:!0},[s._v("DelayQueue")]),s._v("：无界的"),a("code",{pre:!0},[s._v("BlockingQueue")]),s._v("，其中的对象只能在到期时才能从队列中取走")]),a("li",[a("code",{pre:!0},[s._v("PriorityBlockingQueue")])]),a("li",[a("code",{pre:!0},[s._v("ScheduledExecutor")])]),a("li",[a("code",{pre:!0},[s._v("Semaphore")]),a("ul",[a("li",[s._v("计数信号量允许n个任务同时访问这个资源")])])]),a("li",[a("code",{pre:!0},[s._v("Exchanger")]),a("ul",[a("li",[s._v("两个任务间交换对象的栅栏")])])]),a("li",[s._v("仿真")])])]),a("li",[s._v("性能调优 "),a("ul",[a("li",[s._v("乐观锁")]),a("li",[s._v("何为乐观，书中解释为：保持数据为未锁定状态，并希望没有任何其他任务插入修改它")])])]),a("li",[s._v("活动对象")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[a("code",{pre:!0},[s._v("Jframe")])]),a("li",[a("code",{pre:!0},[s._v("JLabel")])]),a("li",[s._v("创建按钮："),a("code",{pre:!0},[s._v("JButton")])]),a("li",[s._v("捕获事件")]),a("li",[s._v("文本区域")]),a("li",[s._v("控制布局")])])}],$={},J=Object(i["a"])($,H,V,!1,null,null,null),U=J.exports,G=a("5ad7"),F=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},z=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h2",[s._v("创建代码仓库")]),a("ul",[a("li",[s._v("配置身份")])]),a("p",[a("code",{pre:!0},[s._v('git config --global user.name "senyihui"')])]),a("p",[a("code",{pre:!0},[s._v('git config --global user.email "senyihui@gmail.com"')])]),a("p",[s._v("后面字符串不加的话就是查询")]),a("ul",[a("li",[s._v("进入项目目录")])]),a("p",[s._v("创建代码仓库 ：在这个目录下输入 "),a("code",{pre:!0},[s._v("git init")])]),a("p",[s._v("（删除本地仓库只需删除此文件夹就行）")]),a("h2",[s._v("提交本地代码")]),a("p",[s._v("先用"),a("code",{pre:!0},[s._v("add")]),s._v("添加进来，再使用"),a("code",{pre:!0},[s._v("commit")]),s._v("真正执行提交操作")]),a("p",[s._v("添加"),a("code",{pre:!0},[s._v("build.gradle")]),s._v("文件："),a("code",{pre:!0},[s._v("git add build.gradle")])]),a("p",[s._v("添加所有文件："),a("code",{pre:!0},[s._v("git add .")])]),a("p",[s._v("提交："),a("code",{pre:!0},[s._v('git commit -m "Fisrt Commit"')])]),a("p",[s._v("一定要通过"),a("code",{pre:!0},[s._v("-m")]),s._v("参数来加上提交的描述信息")]),a("h2",[s._v("忽略文件")]),a("p",[s._v("git提交时会自动忽略"),a("code",{pre:!0},[s._v(".gitignore")]),s._v("中的文件或者目录")]),a("p",[s._v("如果有文件或目录不想添加，那么就在"),a("code",{pre:!0},[s._v(".gitignore")]),s._v("文件中加上")]),a("h2",[s._v("查看修改内容")]),a("p",[s._v("大致文件："),a("code",{pre:!0},[s._v("git status")])]),a("p",[s._v("具体内容："),a("code",{pre:!0},[s._v("git diff")]),s._v("后可加具体相对路径")]),a("h2",[s._v("撤销未提交的修改")]),a("ul",[a("li",[s._v("未commit："),a("code",{pre:!0},[s._v("git checkout filePath")])]),a("li",[s._v("commit过："),a("code",{pre:!0},[s._v("git reset HEAD filePath")])])]),a("h2",[s._v("查看提交记录")]),a("p",[a("code",{pre:!0},[s._v("git log")])]),a("p",[s._v("查看具体一条：")]),a("p",[a("code",{pre:!0},[s._v("git log 53ec5624ca50a9358a5d91141c7a13787257920b -l")])]),a("p",[s._v("查看具体一条的修改内容：")]),a("p",[a("code",{pre:!0},[s._v("git log 53ec5624ca50a9358a5d91141c7a13787257920b -l -p")])]),a("p",[s._v("其中减号代表删除的部分，加号代表增加的部分")]),a("h2",[s._v("分支的用法")]),a("p",[s._v("查看分支："),a("code",{pre:!0},[s._v("git branch")])]),a("p",[s._v("创建分支："),a("code",{pre:!0},[s._v("git branch version1.0")])]),a("p",[s._v("切换到分支上："),a("code",{pre:!0},[s._v("git checkout version1.0")])]),a("p",[s._v("合并分支：")]),a("p",[a("code",{pre:!0},[s._v("git checkout master")])]),a("p",[a("code",{pre:!0},[s._v("git merge version1.0")])]),a("p",[s._v("删除分支："),a("code",{pre:!0},[s._v("git branch -D version1.0")])]),a("h2",[s._v("远程版本库协作")]),a("p",[a("code",{pre:!0},[s._v("git remote add origin https://github.com/senyihui/EmailApplication.git")])]),a("p",[a("code",{pre:!0},[s._v("git push origin master")])]),a("h2",[s._v("版本回退")]),a("p",[s._v("首先，Git必须知道当前版本是哪个版本，在Git中，用"),a("code",{pre:!0},[s._v("HEAD")]),s._v("表示当前版本，也就是最新的提交"),a("code",{pre:!0},[s._v("1094adb...")]),s._v("（注意我的提交ID和你的肯定不一样），上一个版本就是"),a("code",{pre:!0},[s._v("HEAD^")]),s._v("，上上一个版本就是"),a("code",{pre:!0},[s._v("HEAD^^")]),s._v("，当然往上100个版本写100个"),a("code",{pre:!0},[s._v("^")]),s._v("比较容易数不过来，所以写成"),a("code",{pre:!0},[s._v("HEAD~100")]),s._v("。")]),a("p",[s._v("现在，我们要把当前版本"),a("code",{pre:!0},[s._v("append GPL")]),s._v("回退到上一个版本"),a("code",{pre:!0},[s._v("add distributed")]),s._v("，就可以使用"),a("code",{pre:!0},[s._v("git reset")]),s._v("命令：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("$ git reset --hard HEAD^\nHEAD is now at e475afc add distributed\n")])]),a("ul",[a("li",[a("code",{pre:!0},[s._v("HEAD")]),s._v("指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令"),a("code",{pre:!0},[s._v("git reset --hard commit_id")]),s._v("。")]),a("li",[s._v("穿梭前，用"),a("code",{pre:!0},[s._v("git log")]),s._v("可以查看提交历史，以便确定要回退到哪个版本。")]),a("li",[s._v("要重返未来，用"),a("code",{pre:!0},[s._v("git reflog")]),s._v("查看命令历史，以便确定要回到未来的哪个版本。")])])])}],q={},W=Object(i["a"])(q,F,z,!1,null,null,null),Q=W.exports,Y=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},Z=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("h2",[s._v("排序")]),e("p",[s._v("排序算法汇总： https://www.cnblogs.com/onepixel/articles/7674659.html")]),e("p",[s._v("时间复杂度：")]),e("p",[s._v("O(NlogN)：快速排序，堆排序，归并排序，基数排序")]),e("p",[s._v("O(N^2)：插入排序，冒泡排序，选择排序")]),e("p",[s._v("O(N^1.25)：希尔排序")]),e("p",[s._v("O(N+K)：计数排序（空间复杂度也是N+K）")]),e("h3",[s._v("哪种排序方法中关键字的比较与初始顺序无关")]),e("p",[s._v("插入排序，冒泡排序和快速排序的排序趟数与序列的初始状态有关")]),e("p",[e("strong",[s._v("堆排序和选择排序")]),s._v("的排序次数与初始状态无关，即最好情况和最坏情况都一样")]),e("h3",[s._v("快速排序")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-Java"}},[s._v("\t"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("quickSort")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] a, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" low, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" high)")]),s._v(" ")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" mid;\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(low > high) "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n        mid = divide(a, low, high);\n        quickSort(a, low, mid-"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n        quickSort(a, mid+"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", high);\n    }\n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("divide")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] a, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" low, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" high)")])]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" tmp = a[low];\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(low < high) {\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(a[high] >= tmp && low < high) high--;\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(low < high) {a[low] = a[high]; low++;}\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(a[low] <= tmp && low < high) low++;\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(low < high) {a[high] = a[low]; high--;}\n        }\n        a[low] = tmp;\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" low;\n    }\n")])]),e("h3",[s._v("归并排序")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MergeSort")]),s._v(" ")]),s._v("{\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("merge")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] a, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" low, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" mid, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" high)")]),s._v(" ")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] temp = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[high - low + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("];\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = low;"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 左指针")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" j = mid + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 右指针")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" k = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 把较小的数先移到新数组中")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (i <= mid && j <= high) {\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (a[i] < a[j]) {\n                temp[k++] = a[i++];\n            } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n                temp[k++] = a[j++];\n            }\n        }\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 把左边剩余的数移入数组")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (i <= mid) {\n            temp[k++] = a[i++];\n        }\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 把右边边剩余的数移入数组")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (j <= high) {\n            temp[k++] = a[j++];\n        }\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 把新数组中的数覆盖nums数组")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" k2 = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; k2 < temp.length; k2++) {\n            a[k2 + low] = temp[k2];\n        }\n    }\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("mergeSort")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] a, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" low, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" high)")]),s._v(" ")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" mid = low + (high - low) / "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (low < high) {\n            "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 左边")]),s._v("\n            mergeSort(a, low, mid);\n            "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 右边")]),s._v("\n            mergeSort(a, mid + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", high);\n            "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 左右归并")]),s._v("\n            merge(a, low, mid, high);\n            System.out.println(Arrays.toString(a));\n        }\n\n    }\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" a[] = { "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("51")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("46")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("18")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("65")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("97")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("82")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("30")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("77")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("50")]),s._v(" };\n        mergeSort(a, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", a.length - "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n        System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"排序结果："')]),s._v(" + Arrays.toString(a));\n    }\n}\n")])]),e("h3",[s._v("堆排序")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("heapSort")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] arr)")]),s._v(" ")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = arr.length / "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v("; i >= "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; i--) {\n        heapAdjust(arr, i, arr.length);\n    }\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = arr.length - "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("; i > "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; i--) {\n        swap(arr, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", i);\n        heapAdjust(arr, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", i);\n    }\n}\n\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("heapAdjust")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] arr, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i, "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" len)")]),s._v(" ")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" child, father;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (father = arr[i]; leftChild(i) < len; i = child) {\n        child = leftChild(i);\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果左子树小于右子树，则需要比较右子树和父节点")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (child != len - "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" && arr[child] < arr[child + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("]) {\n            child++;\n        }\n        "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果父节点小于孩子结点，则需要交换")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (father < arr[child]) {\n            arr[i] = arr[child];\n        } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        }\n    }\n    arr[i] = father;\n}\n\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("leftChild")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" father)")]),s._v(" ")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" * father + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n}\n")])]),e("h3",[s._v("基数排序")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("radixSort")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[] arr)")]),s._v(" ")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" max = findMax(arr);\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" i = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("; max / i > "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; i *= "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(") {\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("[][] buckets = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v("["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v("][arr.length];\n\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" j = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; j < arr.length; j++) {\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" num = arr[j] / i % "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(";\n            buckets[num][j] = arr[j];\n        }\n\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" index = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" j = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; j < "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v("; j++) {\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" k = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("; k < arr.length; k++) {\n                "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (buckets[j][k] != "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(") {\n                    arr[index++] = buckets[j][k];\n                }\n            }\n        }\n    }\n")])]),e("h2",[s._v("堆")]),e("p",[s._v("堆（英语：heap)是计算机科学中一类特殊的数据结构的统称。堆通常是一个可以被看做一棵树的数组对象。堆总是满足下列性质：")]),e("ul",[e("li",[s._v("堆中某个节点的值总是不大于或不小于其父节点的值；")]),e("li",[s._v("堆总是一棵完全二叉树。")])]),e("h2",[s._v("完全二叉树")]),e("p",[s._v("若设二叉树的深度为h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边，这就是完全二叉树。")]),e("p",[s._v("完全二叉树是由"),e("a",{attrs:{href:"http://baike.baidu.com/view/427110.htm"}},[s._v("满二叉树")]),s._v("而引出来的。对于深度为K的，有n个结点的二叉树，当且仅当其每一个结点都与深度为K的满二叉树中编号从1至n的结点一一对应时称之为完全二叉树。")]),e("p",[e("strong",[s._v("一棵二叉树至多只有最下面的两层上的结点的度数可以小于2，并且最下层上的结点都集中在该层最左边的若干位置上，则此二叉树成为完全二叉树。")])]),e("h2",[s._v("平衡二叉树")]),e("p",[s._v("它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。")]),e("ul",[e("li",[e("p",[s._v("为什么要引入AVL树：")]),e("p",[s._v("二叉查找树是最常用的一种二叉树，它支持快速插入、删除、查找操作，各个操作时间复杂度和树高度成正比logn，但是极端情况会退化成链表。")]),e("p",[s._v("平衡二叉树就是为了防止退化设计出的数据结构，平衡二叉树中平衡的意思，就是让左右两个子树看起来比较对称，不要一边高一边矮，因此查找效率更高")])])]),e("h2",[s._v("红黑树")]),e("p",[s._v("https://www.jianshu.com/p/e136ec79235c")]),e("p",[s._v("红黑树是一种含有红黑结点并能自平衡的二叉查找树。它必须满足下面性质：")]),e("ul",[e("li",[s._v("性质1：每个节点要么是黑色，要么是红色。")]),e("li",[s._v("性质2：根节点是黑色。")]),e("li",[s._v("性质3：每个叶子节点（NIL）是黑色。")]),e("li",[s._v("性质4：每个红色结点的两个子结点一定都是黑色。")]),e("li",[e("strong",[s._v("性质5：任意一结点到每个叶子结点的路径都包含数量相同的黑结点。")])])]),e("h2",[s._v("B树")]),e("p",[s._v("**Ｂ树和Ｂ＋树的出现是因为一个问题——磁盘IO。**所以在大量数据存储中，查询时不能一下将所有数据加载到内存中，只能逐一加载磁盘页，每个磁盘页对应树的结点。造成大量磁盘IO操作（最坏情况下为树的高度）。")]),e("ul",[e("li",[e("p",[s._v("所以，这里将树变得矮胖来减少磁盘IO的次数——采用多叉树，每个结点存储多个元素，又根据AVL得到一棵平衡多路查找树可以使得数据查找效率在O（logN）")])]),e("li",[e("p",[s._v("每个节点都存储key和value，所有的节点组成这棵树，并且叶子结点指针为null")])]),e("li",[e("p",[s._v("一个m阶B树最多有m个孩子，若根结点不是叶子结点，则至少有 2 个孩子")])]),e("li",[e("p",[s._v("所有叶子结点都在一层")])])]),e("blockquote",[e("ul",[e("li",[s._v("先由根结点找磁盘块1，读入内存（IO第一次）；")]),e("li",[s._v("比较，找指针p2；")]),e("li",[s._v("根据p2指针找到磁盘块3，读入内存（IO第二次），在磁盘块3中的关键字列表中找到关键字30")])]),e("p",[s._v("综上，需2次磁盘IO操作，2次内存查找操作；由于内存在红的关键字是一个有序表结构，可以用二分法提高效率 故 3 次磁盘IO操作是影响整个B树查找效率的决定因素，它相对于AVL树缩减了结点的个数 "),e("img",{attrs:{src:a("d507"),alt:"在这里插入图片描述"}})])]),e("h2",[s._v("B+树")]),e("p",[s._v("https://blog.csdn.net/CSDN_dzh/article/details/86724458")]),e("p",[s._v("B+树非叶子节点只存储key，只有叶子结点存储value，叶子结点包含了这棵树的所有键值，每个叶子结点有一个指向相邻叶子结点的指针，这样可以降低B树的高度 "),e("img",{attrs:{src:a("98e4"),alt:"在这里插入图片描述"}})]),e("p",[s._v("为什么B+树是数据库实现索引的首选数据结构呢？——评价一个数据结构作为索引的指标就是在"),e("strong",[s._v("查找时IO操作的次数")])]),e("blockquote",[e("p",[s._v("1、这棵树比较矮胖，树的高度越小，IO次数越少 2、一般来说，索引很大，往往以文件的形式存储在磁盘上，索引查找时产生磁盘IO消耗，相对于内存读取，IO存取的消耗比较高")])]),e("p",[s._v("聚集索引：data存数据本身，索引也是数据。数据和索引存在一个文件中。 非聚集索引：data存的是数据地址，索引是索引，数据是数据")]),e("p",[s._v("根据B+树的结构，我们可以发现B+树相比于B树，在文件系统，数据库系统当中，更有优势，原因如下：")]),e("ol",[e("li",[e("strong",[s._v("B+树单一节点存储更多的元素，使得查询的IO次数更少")]),s._v(" B+树的内部结点并没有指向关键字具体信息的指针。因此其内部结点相对B树更小。如果把所有同一内部结点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多。一次性读入内存中的需要查找的关键字也就越多。相对来说I/O读写次数也就降低了。")]),e("li",[e("strong",[s._v("B+树所有查询都要查找到叶子节点，查询效率更加稳定")]),s._v(" 由于内部结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。")]),e("li",[e("strong",[s._v("B+树所有叶子节点形成有序链表，便于范围查询，更有利于对数据库的扫描")]),s._v(" B树在提高了磁盘IO性能的同时并没有解决元素遍历的效率低下的问题，而B+树只需要遍历叶子节点就可以解决对全部关键字信息的扫描，所以对于数据库中频繁使用的range query，B+树有着更高的性能")])]),e("h2",[s._v("BFS")]),e("p",[s._v("BFS使用队列，把每个还没有搜索到的点依次放入队列，然后再弹出队列的头部元素当做当前遍历点。BFS总共有两个模板：")]),e("p",[s._v("如果不需要确定当前遍历到了哪一层，BFS模板如下。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("while queue 不空：\n    cur = queue.pop()\n    for 节点 in cur的所有相邻节点：\n        if 该节点有效且未访问过：\n            queue.push(该节点)\n")])]),e("p",[s._v("如果要确定当前遍历到了哪一层，BFS模板如下。 这里增加了level表示当前遍历到二叉树中的哪一层了，也可以理解为在一个图中，现在已经走了多少步了。size表示在当前遍历层有多少个元素，也就是队列中的元素数，我们把这些元素一次性遍历完，即把当前层的所有元素都向外走了一步。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("level = 0\nwhile queue 不空：\n    size = queue.size()\n    while (size --) {\n        cur = queue.pop()\n        for 节点 in cur的所有相邻节点：\n            if 该节点有效且未被访问过：\n                queue.push(该节点)\n    }\n    level ++;\n")])]),e("p",[s._v("上面两个是通用模板，在任何题目中都可以用，是要记住的！ 链接：https://leetcode-cn.com/problems/binary-tree-level-order-traversal/solution/tao-mo-ban-bfs-he-dfs-du-ke-yi-jie-jue-by-fuxuemin/ 来源：力扣（LeetCode）")]),e("h2",[s._v("模板")]),e("p",[s._v("https://blog.csdn.net/fuxuemingzhu/article/details/101900729")])])}],K={},X=Object(i["a"])(K,Y,Z,!1,null,null,null),ss=X.exports,ts=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},as=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("h2",[s._v("where和having的区别")]),e("p",[e("strong",[s._v("where")]),s._v("是一个约束声明，是在对查询结果进行分组前，将不符合where条件的行去掉，"),e("strong",[s._v("即在分组之前过滤数据")]),s._v("。where字句中不能包含聚组函数。where语句显示特定的行。")]),e("p",[e("strong",[s._v("having")]),s._v("是一个过滤声明，是筛选满足条件的组，"),e("strong",[s._v("即在分组之后过滤数据")]),s._v("。having字句中可以包含聚组函数。having语句显示特定的组。")]),e("h2",[s._v("数据库索引")]),e("ul",[e("li",[s._v("B-Tree 索引 "),e("ul",[e("li",[s._v("适用于全键值、键值范围或键前缀查找")]),e("li",[s._v("限制")])])]),e("li",[s._v("哈希索引 "),e("ul",[e("li",[s._v("只有精确匹配索引所有列的查询才有效")]),e("li",[s._v("无法用于排序")])])]),e("li",[s._v("空间数据索引 "),e("ul",[e("li",[s._v("无需前缀查询")])])]),e("li",[s._v("全文索引")])]),e("h2",[s._v("隔离级别")]),e("ul",[e("li",[s._v("未提交读"),e("code",{pre:!0},[s._v("READ UMCOMMITED")]),s._v("：脏读")]),e("li",[s._v("提交读"),e("code",{pre:!0},[s._v("READ COMMITED")])]),e("li",[s._v("可重复读"),e("code",{pre:!0},[s._v("REPEATABLE READ")]),s._v("：默认的事务隔离级别；无法解决幻读")]),e("li",[s._v("可串行化"),e("code",{pre:!0},[s._v("SERIALIZABLE")]),s._v("：通过锁")])]),e("h2",[s._v("事务")]),e("ul",[e("li",[s._v("ACID: "),e("ul",[e("li",[s._v("原子性")]),e("li",[s._v("一致性")]),e("li",[s._v("隔离性")]),e("li",[s._v("持久性")])])])]),e("h2",[s._v("多版本并发控制")]),e("p",[s._v("https://juejin.im/post/6844903774071291917#heading-5")]),e("p",[s._v("https://www.jianshu.com/p/8845ddca3b23")]),e("p",[s._v("Mysql的大多数事务型存储引擎实现都不是简单的行级锁，基于并发性能考虑，一般都实现了MVCC多版本并发控制。"),e("strong",[s._v("MVCC是通过保存数据在某个时间点的快照来实现的。不管事务执行多长时间，事务看到的数据都是一致的。")])]),e("h4",[s._v("什么是当前读和快照读？")]),e("p",[s._v("在学习MVCC多版本并发控制之前，我们必须先了解一下，什么是MySQL InnoDB下的当前读和快照读?")]),e("ul",[e("li",[s._v("当前读 像select lock in share mode(共享锁), select for update ; update, insert ,delete(排他锁)这些操作都是一种当前读，为什么叫当前读？就是它读取的是记录的最新版本，读取时还要保证其他并发事务不能修改当前记录，会对读取的记录进行加锁。")]),e("li",[s._v("快照读 像不加锁的select操作就是快照读，即不加锁的非阻塞读；快照读的前提是隔离级别不是串行级别，串行级别下的快照读会退化成当前读；之所以出现快照读的情况，是基于提高并发性能的考虑，快照读的实现是基于多版本并发控制，即MVCC,可以认为MVCC是行锁的一个变种，但它在很多情况下，避免了加锁操作，降低了开销；既然是基于多版本，即快照读可能读到的并不一定是数据的最新版本，而有可能是之前的历史版本")])]),e("p",[s._v("说白了"),e("strong",[s._v("MVCC就是为了实现读-写冲突不加锁，而这个读指的就是快照读, 而非当前读，当前读实际上是一种加锁的操作，是悲观锁的实现")])]),e("h4",[s._v("当前读，快照读和MVCC的关系")]),e("ul",[e("li",[e("strong",[s._v("准确的说，MVCC多版本并发控制指的是 “维持一个数据的多个版本，使得读写操作没有冲突” 这么一个概念。仅仅是一个理想概念")])]),e("li",[s._v("而在MySQL中，实现这么一个MVCC理想概念，我们就需要MySQL提供具体的功能去实现它，而快照读就是MySQL为我们实现MVCC理想模型的其中一个具体非阻塞读功能。而相对而言，当前读就是悲观锁的具体功能实现")]),e("li",[s._v("要说的再细致一些，快照读本身也是一个抽象概念，再深入研究。MVCC模型在MySQL中的具体实现则是由 3个隐式字段，undo日志 ，Read View 等去完成的，具体可以看下面的MVCC实现原理")])]),e("h4",[s._v("MVCC能解决什么问题，好处是？")]),e("h6",[s._v("数据库并发场景有三种，分别为：")]),e("ul",[e("li",[s._v("读-读：不存在任何问题，也不需要并发控制")]),e("li",[s._v("读-写：有线程安全问题，可能会造成事务隔离性问题，可能遇到脏读，幻读，不可重复读")]),e("li",[s._v("写-写：有线程安全问题，可能会存在更新丢失问题，比如第一类更新丢失，第二类更新丢失")])]),e("h6",[s._v("MVCC带来的好处是？")]),e("p",[s._v("多版本并发控制（MVCC）是一种用来解决读-写冲突的无锁并发控制，也就是为事务分配单向增长的时间戳，为每个修改保存一个版本，版本与事务时间戳关联，读操作只读该事务开始前的数据库的快照。 所以MVCC可以为数据库解决以下问题")]),e("ul",[e("li",[e("strong",[s._v("在并发读写数据库时，可以做到在读操作时不用阻塞写操作，写操作也不用阻塞读操作，提高了数据库并发读写的性能")])]),e("li",[e("strong",[s._v("同时还可以解决脏读，幻读，不可重复读等事务隔离问题，但不能解决更新丢失问题")])])]),e("h6",[s._v("小结一下咯")]),e("p",[s._v("总之，MVCC就是因为大牛们，不满意只让数据库采用悲观锁这样性能不佳的形式去解决读-写冲突问题，而提出的解决方案，所以在数据库中，因为有了MVCC，所以我们可以形成两个组合：")]),e("ul",[e("li",[s._v("MVCC + 悲观锁 MVCC解决读写冲突，悲观锁解决写写冲突")]),e("li",[s._v("MVCC + 乐观锁 MVCC解决读写冲突，乐观锁解决写写冲突 这种组合的方式就可以最大程度的提高数据库并发性能，并解决读写冲突，和写写冲突导致的问题")])]),e("h2",[s._v("脏读、幻读、不可重复读的概念")]),e("h4",[s._v("脏读")]),e("p",[s._v("所谓脏读是指一个事务中访问到了另外一个事务未提交的数据，如下图：")]),e("p",[e("img",{attrs:{src:a("9584"),alt:"15352625974682.png"}}),s._v(" 如果会话 2 更新 age 为 10，但是在 commit 之前，会话 1 希望得到 age，那么会获得的值就是更新前的值。或者如果会话 2 更新了值但是执行了 rollback，而会话 1 拿到的仍是 10。这就是脏读。")]),e("h4",[s._v("幻读")]),e("p",[s._v("一个事务读取2次，得到的记录条数不一致：")]),e("p",[e("img",{attrs:{src:a("5e7a"),alt:"15352627898696.png"}}),s._v(" 上图很明显的表示了这个情况，由于在会话 1 之间插入了一个新的值，所以得到的两次数据就不一样了。")]),e("h4",[s._v("不可重复读")]),e("p",[s._v("一个事务读取同一条记录2次，得到的结果不一致：")]),e("p",[e("img",{attrs:{src:a("eebe"),alt:"15352628823137.png"}}),s._v(" 由于在读取中间变更了数据，所以会话 1 事务查询期间的得到的结果就不一样了。")]),e("h2",[s._v("分段，分页与段页式存储管理")]),e("p",[e("strong",[s._v("一. 分页存储管理")])]),e("p",[s._v("用户程序的地址空间被划分成若干固定大小的区域，称为“页”，相应地，内存空间分成若干个物理块，页和块的大小相等。可将用户程序的任一页放在内存的任一块中，实现了离散分配。")]),e("p",[s._v("页面是主存物理空间中划分出来的等长的固定区域。分页方式的优点是"),e("strong",[s._v("页长固定")]),s._v("，因而便于构造页表、易于管理，且不存在外碎片。但分页方式的缺点是"),e("strong",[s._v("页长与程序的逻辑大小不相关")]),s._v("。例如，某个时刻一个子程序可能有一部分在主存中，另一部分则在辅存中。这不利于编程时的独立性，并给换入换出处理、存储保护和存储共享等操作造成麻烦。")]),e("p",[e("strong",[s._v("二．分段存储管理")])]),e("p",[s._v("另一种划分可寻址的存储空间的方法称为分段。段是按照程序的自然分界划分的长度可以动态改变的区域。通常，程序员把子程序、操作数和常数等不同类型的数据划分到不同的段中，并且每个程序可以有多个相同类型的段。")]),e("p",[s._v("段表本身也是一个段，可以存在辅存中，但一般是驻留在主存中。")]),e("p",[s._v("将用户程序地址空间分成若干个大小不等的段，每段可以定义一组相对完整的逻辑信息。存储分配时，以段为单位，段与段在内存中可以不相邻接，也实现了离散分配。")]),e("p",[e("strong",[s._v("三．段页式存储")])]),e("p",[s._v("段页式存储组织是分段式和分页式结合的存储组织方法，这样可充分利用分段管理和分页管理的优点。")]),e("p",[s._v("(1) "),e("strong",[s._v("用分段方法来分配和管理虚拟存储器")]),s._v("。程序的地址空间按逻辑单位分成基本独立的段，而每一段有自己的段名，再把每段分成固定大小的若干页。")]),e("p",[s._v("(2) "),e("strong",[s._v("用分页方法来分配和管理实存")]),s._v("。即把整个主存分成与上述页大小相等的存储块，可装入作业的任何一页。程序对内存的调入或调出是按页进行的。但它又可按段实现共享和保护。")]),e("p",[s._v("地址空间图：")]),e("p",[e("img",{attrs:{src:a("6721"),alt:"img"}})]),e("p",[s._v("(3) 逻辑地址结构。一个逻辑地址用三个参数表示：段号S；页号P；页内地址d。")]),e("p",[e("img",{attrs:{src:a("2ab6"),alt:"img"}})]),e("p",[s._v("(4)段表、页表、段表地址寄存器。为了进行地址转换，系统为每个作业建立一个段表，并且要为该作业段表中的每一个段建立一个页表。系统中有一个段表地址寄存器来指出作业的段表起始地址和段表长度。")]),e("p",[e("img",{attrs:{src:a("60ef"),alt:"img"}})]),e("h2",[s._v("乐观锁和悲观锁")]),e("p",[s._v("https://www.cnblogs.com/kismetv/p/10787228.html")]),e("p",[e("strong",[s._v("乐观锁和悲观锁是两种思想，用于解决并发场景下的数据竞争问题")]),s._v("。")]),e("ul",[e("li",[s._v("乐观锁：乐观锁在操作数据时非常乐观，认为别人不会同时修改数据。因此乐观锁不会上锁，只是在执行更新的时候判断一下在此期间别人是否修改了数据：如果别人修改了数据则放弃操作，否则执行操作。")]),e("li",[s._v("悲观锁：悲观锁在操作数据时比较悲观，认为别人会同时修改数据。因此操作数据时直接把数据锁住，直到操作完成后才会释放锁；上锁期间其他人不能修改数据。")])]),e("p",[e("strong",[s._v("乐观锁的实现方式主要有两种：CAS机制和版本号机制")])]),e("p",[s._v("CAS操作包括了3个操作数：")]),e("ul",[e("li",[s._v("需要读写的内存位置(V)")]),e("li",[s._v("进行比较的预期值(A)")]),e("li",[s._v("拟写入的新值(B)")])]),e("p",[s._v("CAS操作逻辑如下：如果内存位置V的值等于预期的A值，则将该位置更新为新值B，否则不进行任何操作。许多CAS的操作是自旋的：如果操作不成功，会一直重试，直到操作成功为止。")]),e("p",[s._v("除了CAS，"),e("strong",[s._v("版本号机制")]),s._v("也可以用来实现乐观锁。版本号机制的基本思路是在数据中增加一个字段version，表示该数据的版本号，每当数据被修改，版本号加1。当某个线程查询数据时，将该数据的版本号一起查出来；当该线程更新数据时，判断当前版本号与之前读取的版本号是否一致，如果一致才进行操作。")]),e("p",[e("strong",[s._v("优缺点和适用场景")])]),e("p",[s._v("1、功能限制")]),e("p",[s._v("与悲观锁相比，乐观锁适用的场景受到了更多的限制，无论是CAS还是版本号机制。")]),e("p",[s._v("例如，CAS只能保证单个变量操作的原子性，当涉及到多个变量时，CAS是无能为力的，而synchronized则可以通过对整个代码块加锁来处理。再比如版本号机制，如果query的时候是针对表1，而update的时候是针对表2，也很难通过简单的版本号来实现乐观锁。")]),e("p",[s._v("2、竞争激烈程度")]),e("p",[s._v("如果悲观锁和乐观锁都可以使用，那么选择就要考虑竞争的激烈程度：")]),e("ul",[e("li",[s._v("当竞争不激烈 (出现并发冲突的概率小)时，乐观锁更有优势，因为悲观锁会锁住代码块或数据，其他线程无法同时访问，影响并发，而且加锁和释放锁都需要消耗额外的资源。")]),e("li",[s._v("当竞争激烈(出现并发冲突的概率大)时，悲观锁更有优势，因为乐观锁在执行更新时频繁失败，需要不断重试，浪费CPU资源。")])]),e("p",[e("strong",[s._v("乐观锁加锁吗？")])]),e("p",[s._v("笔者在面试时，曾遇到面试官如此追问。下面是我对这个问题的理解：")]),e("p",[s._v("（1）乐观锁本身是不加锁的，只是在更新时判断一下数据是否被其他线程更新了；AtomicInteger便是一个例子。")]),e("p",[s._v("（2）有时乐观锁可能与加锁操作合作，例如，在前述updateCoins()的例子中，MySQL在执行update时会加排它锁。但这只是乐观锁与加锁操作合作的例子，不能改变“乐观锁本身不加锁”这一事实。")]),e("p",[e("strong",[s._v("CAS有哪些缺点？")])]),e("p",[s._v("面试到这里，面试官可能已经中意你了。不过面试官准备对你发起最后的进攻：你知道CAS这种实现方式有什么缺点吗？")]),e("p",[s._v("下面是CAS一些不那么完美的地方：")]),e("p",[s._v("1、ABA问题")]),e("p",[s._v("假设有两个线程——线程1和线程2，两个线程按照顺序进行以下操作：")]),e("p",[s._v("(1)线程1读取内存中数据为A；")]),e("p",[s._v("(2)线程2将该数据修改为B；")]),e("p",[s._v("(3)线程2将该数据修改为A；")]),e("p",[s._v("(4)线程1对数据进行CAS操作")]),e("p",[s._v("在第(4)步中，由于内存中数据仍然为A，因此CAS操作成功，但实际上该数据已经被线程2修改过了。这就是ABA问题。")]),e("p",[s._v("在AtomicInteger的例子中，ABA似乎没有什么危害。但是在某些场景下，ABA却会带来隐患，例如栈顶问题：一个栈的栈顶经过两次(或多次)变化又恢复了原值，但是栈可能已发生了变化。")]),e("p",[s._v("对于ABA问题，比较有效的方案是引入版本号，内存中的值每发生一次变化，版本号都+1；在进行CAS操作时，不仅比较内存中的值，也会比较版本号，只有当二者都没有变化时，CAS才能执行成功。Java中的AtomicStampedReference类便是使用版本号来解决ABA问题的。")]),e("p",[s._v("2、高竞争下的开销问题")]),e("p",[s._v("在并发冲突概率大的高竞争环境下，如果CAS一直失败，会一直重试，CPU开销较大。针对这个问题的一个思路是引入退出机制，如重试次数超过一定阈值后失败退出。当然，更重要的是避免在高竞争环境下使用乐观锁。")]),e("p",[s._v("3、功能限制")]),e("p",[s._v("CAS的功能是比较受限的，例如CAS只能保证单个变量（或者说单个内存值）操作的原子性，这意味着：(1)原子性不一定能保证线程安全，例如在Java中需要与volatile配合来保证线程安全；(2)当涉及到多个变量(内存值)时，CAS也无能为力。")]),e("p",[s._v("除此之外，CAS的实现需要硬件层面处理器的支持，在Java中普通用户无法直接使用，只能借助atomic包下的原子类使用，灵活性受到限制。")])])}],es={},rs=Object(i["a"])(es,ts,as,!1,null,null,null),ls=rs.exports,ns=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},vs=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h2",[s._v("冯·诺依曼体系结构")]),a("ol",[a("li",[a("p",[s._v("计算机处理的数据和指令一律用二进制数表示")])]),a("li",[a("p",[s._v("顺序执行程序")]),a("p",[s._v("计算机运行过程中，把要执行的程序和处理的数据首先存入主存储器（内存），计算机执行程序时，将自动地并按顺序从主存储器中取出指令一条一条地执行，这一概念称作顺序执行程序。")])]),a("li",[a("p",[s._v("计算机硬件由运算器、控制器、存储器、输入设备和输出设备五大部分组成。")])])]),a("h2",[s._v("数据的机内表示")]),a("h3",[s._v("二进制表示")]),a("ol",[a("li",[a("p",[s._v("机器数")]),a("p",[s._v("由于计算机中符号和数字一样,都必须用二进制数串来表示,因此,正负号也必须用0、1来表示。")]),a("p",[s._v("用最高位0表示正、1表示负, 这种正负号数字化的机内表示形式就称为“机器数”,而相应的机器外部用正负号表示的数称为“真值”,将一个真值表示成二进制字串的机器数的过程就称为编码。")])]),a("li",[a("p",[s._v("原码")]),a("p",[s._v("原码就是符号位加上真值的绝对值, 即用第一位表示符号, 其余位表示值. 比如如果是8位二进制:")]),a("p",[s._v("[+1]原 = 0000 0001")]),a("p",[s._v("[-1]原 = 1000 0001")]),a("p",[s._v("第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:")]),a("p",[s._v("[1111 1111 , 0111 1111]")]),a("p",[s._v("即")]),a("p",[s._v("[-127 , 127]")]),a("p",[s._v("原码是人脑最容易理解和计算的表示方式")])]),a("li",[a("p",[s._v("反码")]),a("p",[s._v("反码的表示方法是:")]),a("p",[s._v("正数的反码是其本身")]),a("p",[s._v("负数的反码是在其原码的基础上, 符号位不变，其余各个位取反.")]),a("p",[s._v("[+1] = [00000001]原 = [00000001]反")]),a("p",[s._v("[-1] = [10000001]原 = [11111110]反")]),a("p",[s._v("可见如果一个反码表示的是负数, 人脑无法直观的看出来它的数值. 通常要将其转换成原码再计算")])]),a("li",[a("p",[s._v("补码")]),a("p",[s._v("补码的表示方法是:")]),a("p",[s._v("正数的补码就是其本身")]),a("p",[s._v("负数的补码是在其原码的基础上, 符号位不变, 其余各位取反, 最后+1。 (即在反码的基础上+1)")]),a("p",[s._v("[+1] = [00000001]原 = [00000001]反 = [00000001]补")]),a("p",[s._v("[-1] = [10000001]原 = [11111110]反 = [11111111]补")]),a("p",[s._v("对于负数, 补码表示方式也是人脑无法直观看出其数值的. 通常也需要转换成原码在计算其数值.")])]),a("li",[a("p",[s._v("定点数与浮点数")]),a("p",[s._v("定点数是小数点固定的数。在计算机中没有专门表示小数点的位，小数点的位置是约定默认的。一般固定在机器数的最低位之后，或是固定在符号位之后。前者称为定点纯整数，后者称为定点纯小数。")]),a("p",[s._v("定点数表示法简单直观，但是数值表示的范围太小，运算时容易产生溢出。")])])]),a("p",[s._v("浮点数是小数点的位置可以变动的数。为增大数值表示范围，防止溢出，采用浮点数表示法。浮点表示法类似于十进制中的科学计数法。")]),a("p",[s._v("在计算机中通常把浮点数分成阶码和尾数两部分来表示，其中阶码一般用补码定点整数表示，尾数一般用补码或原码定点小数表示。为保证不损失有效数字，对尾数进行规格化处理，也就是平时所说的科学记数法，即保证尾数的最高位为1，实际数值通过阶码进行调整")]),a("p",[s._v("阶符表示指数的符号位、阶码表示幂次、数符表示尾数的符号位、尾数表示规格化后的小数值。")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("N = 尾数×基数阶码（指数）\n")])]),a("h3",[s._v("位(Bit)、字节(Byte)、字(Word)")]),a("p",[s._v('位："位(bit)"是电子计算机中最小的数据单位。每一位的状态只能是0或1。')]),a("p",[s._v('字节：8个二进制位构成1个"字节(Byte)"，它是存储空间的基本计量单位。1个字节可以储存1个英文字母或者半个汉字，换句话说，1个汉字占据2个字节的存储空间。')]),a("p",[s._v('字："字"由若干个字节构成，字的位数叫做字长，不同档次的机器有不同的字长。例如一台8位机，它的1个字就等于1个字节，字长为8位。如果是一台16位机，那么，它的1个字就由2个字节构成，字长为16位。字是计算机进行数据处理和运算的单位。')]),a("h3",[s._v("字节序")]),a("p",[s._v("字节顺序是指占内存多于一个字节类型的数据在内存中的存放顺序，通常有小端、大端两种字节顺序。")]),a("p",[s._v("小端字节序指低字节数据存放在内存低地址处，高字节数据存放在内存高地址处；")]),a("p",[s._v("大端字节序是高字节数据存放在低地址处，低字节数据存放在高地址处。")]),a("p",[s._v("基于X86平台的PC机是小端字节序的，而有的嵌入式平台则是大端字节序的。所有网络协议也都是采用big endian的方式来传输数据的。所以有时我们也会把big endian方式称之为网络字节序。")]),a("p",[s._v("比如数字0x12345678在两种不同字节序CPU中的存储顺序如下所示：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("Big Endian\n低地址                                            高地址\n----------------------------------------------------\x3e\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     12     |      34    |     56      |     78    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLittle Endian\n低地址                                            高地址\n----------------------------------------------------\x3e\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     78     |      56    |     34      |     12    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n")])]),a("p",[s._v("从上面两图可以看出，采用Big Endian方式存储数据是符合我们人类的思维习惯的。")]),a("p",[s._v("联合体"),a("code",{pre:!0},[s._v("union")]),s._v("的存放顺序是所有成员都从低地址开始存放，利用该特性，就能判断CPU对内存采用Little-endian还是Big-endian模式读写。")]),a("p",[s._v("示例代码如下：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":"",class:"language-c"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("union")]),s._v(" test{  \n    short  i;  \n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("char")]),s._v(" str["),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("sizeof")]),s._v("(short)];  \n}tt;  \n\n"),a("span",{pre:!0,attrs:{class:"hljs-function"}},[a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v("  \n")]),s._v("{  \n    tt.i = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0x0102")]),s._v(";  \n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("sizeof")]),s._v("(short) == "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(")  \n        {  \n            "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(tt.str["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("] == "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(" && tt.str["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("] == "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(")  \n                "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("printf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"大端字节序"')]),s._v(");  \n            "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(tt.str["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("] = "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(" && tt.str["),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("] == "),a("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(")  \n                "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("printf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"小端字节序"')]),s._v(");  \n            "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("  \n                "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("printf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"结果未知"')]),s._v(");  \n         }  \n    "),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("  \n        "),a("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("printf")]),s._v("("),a("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"sizof(short)=%d,不等于2"')]),s._v(","),a("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("sizeof")]),s._v("(short));  \n}\n")])]),a("h3",[s._v("字节对齐")]),a("p",[s._v("现代计算机中内存空间都是按照byte划分的，从理论上讲似乎对任何类型的变量的访问可以从任何地址开始，但实际情况是在访问特定类型变量的时候经常在特定的内存地址访问，这就需要各种类型数据按照一定的规则在空间上排列，而不是顺序的一个接一个的排放，这就是对齐。")]),a("ul",[a("li",[s._v("为什么要进行字节对齐？ "),a("ol",[a("li",[s._v("某些平台只能在特定的地址处访问特定类型的数据;")]),a("li",[s._v("最根本的原因是效率问题，字节对齐能提⾼存取数据的速度。")])])])]),a("p",[s._v("比如有的平台每次都是从偶地址处读取数据,对于一个int型的变量,若从偶地址单元处存放,则只需一个读取周期即可读取该变量，但是若从奇地址单元处存放,则需要2个读取周期读取该变量。")]),a("ul",[a("li",[s._v("字节对齐的原则 "),a("ol",[a("li",[s._v("数据成员对齐规则：结构(struct)(或联合(union))的数据成员，第一个数据成员放在 offset 为0的地方，以后每个数据成员存储的起始位置要从该成员大小或者成员的子成员大小（只要该成员有子成员，比如说是数组，结构体等）的整数倍开始(比如int在32位机为4字节,则要从4的整数倍地址开始存储。")]),a("li",[s._v("结构体作为成员:如果一个结构里有某些结构体成员,则结构体成员要从其内部最大元素大小的整数倍地址开始存储。(struct a里存有struct b,b里有char,int ,double等元素,那b应该从8的整数倍开始存储。)")]),a("li",[s._v("收尾工作:结构体的总大小，也就是sizeof的结果，必须是其内部最大成员的整数倍，不足的要补齐。")])])])]),a("h2",[s._v("操作系统提供的服务")]),a("p",[s._v("操作系统的五大功能，分别为：作业管理、文件管理、存储管理、输入输出设备管理、进程及处理机管理")]),a("h2",[s._v("中断与系统调用")]),a("h3",[s._v("中断")]),a("p",[s._v("所谓的中断就是在计算机执行程序的过程中，由于出现了某些特殊事情，使得CPU暂停对程序的执行，转而去执行处理这一事件的程序。等这些特殊事情处理完之后再回去执行之前的程序。中断一般分为三类：")]),a("ol",[a("li",[s._v("由计算机硬件异常或故障引起的中断，称为内部异常中断；")]),a("li",[s._v("由程序中执行了引起中断的指令而造成的中断，称为软中断（这也是和我们将要说明的系统调用相关的中断）；")]),a("li",[s._v("由外部设备请求引起的中断，称为外部中断。简单来说，对中断的理解就是对一些特殊事情的处理。")])]),a("p",[s._v("与中断紧密相连的一个概念就是中断处理程序了。当中断发生的时候，系统需要去对中断进行处理，对这些中断的处理是由操作系统内核中的特定函数进行的，这些处理中断的特定的函数就是我们所说的中断处理程序了。")]),a("p",[s._v("另一个与中断紧密相连的概念就是中断的优先级。中断的优先级说明的是当一个中断正在被处理的时候，处理器能接受的中断的级别。中断的优先级也表明了中断需要被处理的紧急程度。每个中断都有一个对应的优先级，当处理器在处理某一中断的时候，只有比这个中断优先级高的中断可以被处理器接受并且被处理。优先级比这个当前正在被处理的中断优先级要低的中断将会被忽略。")]),a("p",[s._v("典型的中断优先级如下所示：")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[s._v("机器错误 > 时钟 > 磁盘 > 网络设备 >  终端 > 软件中断\n")])]),a("p",[s._v("当发生软件中断时，其他所有的中断都可能发生并被处理；但当发生磁盘中断时，就只有时钟中断和机器错误中断能被处理了。")]),a("h5",[s._v("系统调用")]),a("p",[s._v("在讲系统调用之前，先说下进程的执行在系统上的两个级别：用户级和核心级，也称为用户态和系统态(user mode and kernel mode)。")]),a("p",[s._v("程序的执行一般是在用户态下执行的，但当程序需要使用操作系统提供的服务时，比如说打开某一设备、创建文件、读写文件等，就需要向操作系统发出调用服务的请求，这就是系统调用。")]),a("p",[s._v("Linux系统有专门的函数库来提供这些请求操作系统服务的入口，这个函数库中包含了操作系统所提供的对外服务的接口。当进程发出系统调用之后，它所处的运行状态就会由用户态变成核心态。但这个时候，进程本身其实并没有做什么事情，这个时候是由内核在做相应的操作，去完成进程所提出的这些请求。")]),a("p",[s._v("系统调用和中断的关系就在于，当进程发出系统调用申请的时候，会产生一个软件中断。产生这个软件中断以后，系统会去对这个软中断进行处理，这个时候进程就处于核心态了。")]),a("p",[s._v("那么用户态和核心态之间的区别是什么呢？（以下区别摘至《UNIX操作系统设计》）")]),a("ol",[a("li",[s._v("用户态的进程能存取它们自己的指令和数据，但不能存取内核指令和数据（或其他进程的指令和数据）。然而，核心态下的进程能够存取内核和用户地址")]),a("li",[s._v("某些机器指令是特权指令，在用户态下执行特权指令会引起错误")])]),a("p",[s._v("对此要理解的一个是，在系统中内核并不是作为一个与用户进程平行的估计的进程的集合，内核是为用户进程运行的。")])])}],ps={},_s=Object(i["a"])(ps,ns,vs,!1,null,null,null),cs=_s.exports,is=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},os=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v(" https://www.cnblogs.com/fundebug/p/differences-of-tcp-and-udp.html \n")])]),e("h3",[s._v("一、TCP/IP网络模型")]),e("p",[s._v("计算机与网络设备要相互通信，双方就必须基于相同的方法。比如，如何探测到通信目标、由哪一边先发起通信、使用哪种语言进行通信、怎样结束通信等规则都需要事先确定。不同的硬件、操作系统之间的通信，所有的这一切都需要一种规则。而我们就把这种规则称为协议（protocol）。")]),e("p",[s._v("TCP/IP 是互联网相关的各类协议族的总称，比如：TCP，UDP，IP，FTP，HTTP，ICMP，SMTP 等都属于 TCP/IP 族内的协议。")]),e("p",[s._v("TCP/IP模型是互联网的基础，它是一系列网络协议的总称。这些协议可以划分为四层，分别为链路层、网络层、传输层和应用层。")]),e("ul",[e("li",[s._v("链路层：负责封装和解封装IP报文，发送和接受ARP/RARP报文等。")]),e("li",[s._v("网络层：负责路由以及把分组报文发送给目标网络或主机。")]),e("li",[s._v("传输层：负责对报文进行分组和重组，并以TCP或UDP协议格式封装报文。")]),e("li",[s._v("应用层：负责向用户提供应用程序，比如HTTP、FTP、Telnet、DNS、SMTP等。")])]),e("p",[e("img",{attrs:{src:a("9338"),alt:"1588860411793"}})]),e("p",[s._v("在网络体系结构中网络通信的建立必须是在通信双方的对等层进行，不能交错。 在整个数据传输过程中，数据在发送端时经过各层时都要附加上相应层的协议头和协议尾（仅数据链路层需要封装协议尾）部分，也就是要对数据进行协议封装，以标识对应层所用的通信协议。接下去介绍TCP/IP 中有两个具有代表性的传输层协议----TCP 和 UDP。")]),e("h3",[s._v("二、UDP")]),e("p",[s._v("UDP协议全称是"),e("strong",[s._v("用户数据报协议")]),s._v("，在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。在OSI模型中，在第四层——传输层，处于IP协议的上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。")]),e("p",[s._v("它有以下几个特点：")]),e("h4",[s._v("1. 面向无连接")]),e("p",[s._v("首先 UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。")]),e("p",[s._v("具体来说就是：")]),e("ul",[e("li",[s._v("在发送端，应用层将数据传递给传输层的 UDP 协议，UDP 只会给数据增加一个 UDP 头标识下是 UDP 协议，然后就传递给网络层了")]),e("li",[s._v("在接收端，网络层将数据传递给传输层，UDP 只去除 IP 报文头就传递给应用层，不会任何拼接操作")])]),e("h4",[s._v("2. 有单播，多播，广播的功能")]),e("p",[s._v("UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。")]),e("h4",[s._v("3. UDP是面向报文的")]),e("p",[s._v("发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付IP层。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界。因此，应用程序必须选择合适大小的报文")]),e("h4",[s._v("4. 不可靠性")]),e("p",[s._v("首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。")]),e("p",[s._v("并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。")]),e("p",[s._v("再者网络环境时好时坏，但是 UDP 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 UDP 而不是 TCP。")]),e("p",[e("img",{attrs:{src:a("c786"),alt:"img"}})]),e("p",[s._v("从上面的动态图可以得知，UDP只会把想发的数据报文一股脑的丢给对方，并不在意数据有无安全完整到达。")]),e("h4",[s._v("5. 头部开销小，传输数据报文时是很高效的。")]),e("p",[e("img",{attrs:{src:a("7c8c"),alt:"img"}})]),e("p",[s._v("UDP 头部包含了以下几个数据：")]),e("ul",[e("li",[s._v("两个十六位的端口号，分别为源端口（可选字段）和目标端口")]),e("li",[s._v("整个数据报文的长度")]),e("li",[s._v("整个数据报文的检验和（IPv4 可选 字段），该字段用于发现头部信息和数据中的错误")])]),e("p",[s._v("因此 UDP 的头部开销小，"),e("strong",[s._v("只有八字节")]),s._v("，"),e("strong",[s._v("相比 TCP 的至少二十字节要少得多")]),s._v("，在传输数据报文时是很高效的")]),e("h3",[s._v("三、TCP")]),e("p",[s._v("当一台计算机想要与另一台计算机通讯时，两台计算机之间的通信需要畅通且可靠，这样才能保证正确收发数据。例如，当你想查看网页或查看电子邮件时，希望完整且按顺序查看网页，而不丢失任何内容。当你下载文件时，希望获得的是完整的文件，而不仅仅是文件的一部分，因为如果数据丢失或乱序，都不是你希望得到的结果，于是就用到了TCP。")]),e("p",[s._v("TCP协议全称是"),e("strong",[s._v("传输控制协议")]),s._v("是一种面向连接的、可靠的、基于字节流的传输层通信协议，由 IETF 的RFC 793定义。TCP 是面向连接的、可靠的流协议。流就是指不间断的数据结构，你可以把它想象成排水管中的水流。")]),e("h4",[s._v("1. TCP连接过程")]),e("p",[s._v("如下图所示，可以看到建立一个TCP连接的过程为（三次握手的过程）:")]),e("p",[e("img",{attrs:{src:a("db11"),alt:"img"}})]),e("p",[e("strong",[s._v("第一次握手")])]),e("p",[s._v("客户端向服务端发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，客户端便进入 SYN-SENT 状态。")]),e("p",[e("strong",[s._v("第二次握手")])]),e("p",[s._v("服务端收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，发送完成后便进入 SYN-RECEIVED 状态。")]),e("p",[e("strong",[s._v("第三次握手")])]),e("p",[s._v("当客户端收到连接同意的应答后，还要向服务端发送一个确认报文。客户端发完这个报文段后便进入 ESTABLISHED 状态，服务端收到这个应答后也进入 ESTABLISHED 状态，此时连接建立成功。")]),e("p",[s._v("这里可能大家会有个疑惑：为什么 TCP 建立连接需要三次握手，而不是两次？这是因为这是"),e("strong",[s._v("为了防止出现失效的连接请求报文段被服务端接收的情况，从而产生错误。")])]),e("p",[e("img",{attrs:{src:a("59a7"),alt:"img"}})]),e("h4",[s._v("2. TCP断开链接")]),e("p",[e("img",{attrs:{src:a("e347"),alt:"img"}})]),e("p",[e("strong",[s._v("TCP 是全双工的")]),s._v("，在断开连接时两端都需要发送 FIN 和 ACK。")]),e("p",[e("strong",[s._v("第一次挥手")])]),e("p",[s._v("若客户端 A 认为数据发送完成，则它需要向服务端 B 发送连接释放请求。")]),e("p",[e("strong",[s._v("第二次挥手")])]),e("p",[s._v("B 收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 CLOSE_WAIT 状态，此时表明 A 到 B 的连接已经释放，不再接收 A 发的数据了。但是因为 TCP 连接是双向的，所以 B 仍旧可以发送数据给 A。")]),e("p",[e("strong",[s._v("第三次挥手")])]),e("p",[s._v("B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入 LAST-ACK 状态。")]),e("p",[e("strong",[s._v("第四次挥手")])]),e("p",[s._v("A 收到释放请求后，向 B 发送确认应答，此时 A 进入 TIME-WAIT 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有 B 的重发请求的话，就进入 CLOSED 状态。当 B 收到确认应答后，也便进入 CLOSED 状态。")]),e("h4",[s._v("3. TCP协议的特点")]),e("ul",[e("li",[e("p",[s._v("面向连接")]),e("p",[s._v("面向连接，是指发送数据之前必须在两端建立连接。建立连接的方法是“三次握手”，这样能建立可靠的连接。建立连接，是为数据的可靠传输打下了基础。")])]),e("li",[e("p",[s._v("仅支持单播传输")]),e("p",[s._v("每条TCP传输连接只能有两个端点，只能进行点对点的数据传输，不支持多播和广播传输方式。")])]),e("li",[e("p",[s._v("面向字节流")]),e("p",[s._v("TCP不像UDP一样那样一个个报文独立地传输，而是在不保留报文边界的情况下以字节流方式进行传输。")])]),e("li",[e("p",[s._v("可靠传输")]),e("p",[s._v("对于可靠传输，判断丢包，误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK)；如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传。")])]),e("li",[e("p",[s._v("提供拥塞控制")]),e("p",[s._v("当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞")])]),e("li",[e("p",[s._v("TCP提供全双工通信")]),e("p",[s._v("TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）")])])]),e("h3",[s._v("四、TCP和UDP的比较")]),e("h4",[s._v("1. 对比")]),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}}),e("th",{staticStyle:{"text-align":"left"}},[s._v("UDP")]),e("th",{staticStyle:{"text-align":"left"}},[s._v("TCP")])])]),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("是否连接")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("无连接")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("面向连接")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("是否可靠")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("不可靠传输，不使用流量控制和拥塞控制")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("可靠传输，使用流量控制和拥塞控制")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("连接对象个数")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("支持一对一，一对多，多对一和多对多交互通信")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("只能是一对一通信")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("传输方式")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("面向报文")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("面向字节流")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("首部开销")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("首部开销小，仅8字节")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("首部最小20字节，最大60字节")])]),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("适用场景")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("适用于实时应用（IP电话、视频会议、直播等）")]),e("td",{staticStyle:{"text-align":"left"}},[s._v("适用于要求可靠传输的应用，例如文件传输")])])])]),e("h4",[s._v("2. 总结")]),e("ul",[e("li",[s._v("TCP向上层提供面向连接的可靠服务 ，UDP向上层提供无连接不可靠服务。")]),e("li",[s._v("虽然 UDP 并没有 TCP 传输来的准确，但是也能在很多实时性要求高的地方有所作为")]),e("li",[s._v("对数据准确性要求高，速度可以相对较慢的，可以选用TCP")])]),e("h3",[s._v("常用保留端口号")]),e("p",[s._v("常用的保留TCP端口号有：")]),e("p",[s._v("HTTP 80，FTP 20/21，Telnet 23，SMTP 25，DNS 53等。")]),e("p",[s._v("常用的保留UDP端口号有：")]),e("p",[s._v("DNS 53，BootP 67（server）/ 68（client），TFTP 69，SNMP 161等。")]),e("h2",[s._v("TCP相比UDP为什么是可靠的")]),e("p",[s._v("https://blog.csdn.net/baidu_35692628/article/details/78255476")]),e("p",[s._v("[1] 确认和重传机制")]),e("p",[s._v("建立连接时三次握手同步双方的“序列号 + 确认号 + 窗口大小信息”，是确认重传、流控的基础 传输过程中，如果Checksum校验失败、丢包或延时，发送端重传")]),e("p",[s._v("[2] 数据排序")]),e("p",[s._v("TCP有专门的序列号SN字段，可提供数据re-order")]),e("p",[s._v("[3] 流量控制")]),e("p",[s._v("窗口和计时器的使用。TCP窗口中会指明双方能够发送接收的最大数据量")]),e("p",[s._v("[4] 拥塞控制")]),e("p",[s._v("TCP的拥塞控制由4个核心算法组成。")]),e("p",[e("strong",[s._v("拥塞控制是作用于网络的，它是防止过多的数据注入到网络中，避免出现网络负载过大的情况")])]),e("p",[s._v("“慢启动”（Slow Start）")]),e("p",[s._v("不要一开始就发送大量的数据，先探测一下网络的拥塞程度，也就是说由小到大逐渐增加拥塞窗口的大小。")]),e("p",[s._v("每经过一个RTT（往返时间），发送速率就翻番（指数增长）")]),e("p",[s._v("“拥塞避免”（Congestion avoidance）")]),e("p",[s._v("拥塞避免算法让拥塞窗口缓慢增长，即每经过一个往返时间RTT就把发送方的拥塞窗口cwnd加1，而不是加倍。这样拥塞窗口按线性规律缓慢增长。")]),e("p",[s._v("“快速重传 ”（Fast Retransmit）")]),e("p",[s._v("快重传要求接收方在收到一个失序的报文段后就立即发出重复确认（为的是使发送方及早知道有报文段没有到达对方，可提高网络吞吐量约20%）而不要等到自己发送数据时捎带确认。")]),e("p",[s._v("“快速恢复”（Fast Recovery）")]),e("p",[s._v("快重传配合使用的还有快恢复算法，有以下两个要点：")]),e("p",[s._v("当发送方连续收到三个重复确认时，就执行“乘法减小”算法，把thresh门限减半（为了预防网络发生拥塞）。但是接下去并不执行慢开始算法")]),e("h2",[s._v("数据包")]),e("p",[s._v("https://juejin.im/post/6844903510509633550")]),e("p",[e("strong",[s._v("包、帧、数据包、段、消息")]),s._v(" 以上五个术语都用来表述数据的单位，大致区分如下：")]),e("ul",[e("li",[e("p",[s._v("包可以说是全能性术语；")])]),e("li",[e("p",[s._v("帧用于表示数据链路层中包的单位；")])]),e("li",[e("p",[s._v("数据包是 IP 和 UDP 等网络层以上的分层中包的单位；")])]),e("li",[e("p",[s._v("段则表示 TCP 数据流中的信息；")])]),e("li",[e("p",[s._v("消息是指应用协议中数据的单位。")]),e("p",[e("img",{attrs:{src:a("0741"),alt:"数据包首部"}})])])]),e("h2",[s._v("浏览器输入网址之后的具体操作")]),e("p",[s._v("https://zhuanlan.zhihu.com/p/43369093")]),e("ol",[e("li",[s._v("浏览器发起DNS查询请求")]),e("li",[s._v("域名服务器向客户端返回查询结果域名，从而完成域名到IP地址的转换")]),e("li",[s._v("客户端向web服务器发送HTTP请求（TCP三次握手）")]),e("li",[s._v("服务器给浏览器进行一个301永久重定向响应。")]),e("li",[s._v("发送响应数据给客户端")]),e("li",[s._v("浏览器响应过程（TCP四次挥手）")])]),e("hr"),e("ol",[e("li",[s._v("DNS解析")]),e("li",[s._v("HTTP请求过程 "),e("ol",[e("li",[s._v("建立连接")]),e("li",[s._v("发送HTTP请求")]),e("li",[s._v("返回HTTP响应")]),e("li",[s._v("维持连接")]),e("li",[s._v("断开连接")])])]),e("li",[s._v("浏览器解析过程")])]),e("h2",[s._v("Http和Https的区别")]),e("p",[s._v("https://blog.csdn.net/qq_38289815/article/details/80969419")]),e("p",[s._v("1、https协议需要到CA （Certificate Authority，证书颁发机构）申请证书，一般免费证书较少，因而需要一定费用。(原来网易官网是http，而网易邮箱是https。)")]),e("p",[s._v("2、"),e("strong",[s._v("http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。")])]),e("p",[s._v("3、http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。")]),e("p",[s._v("4、"),e("strong",[s._v("http的连接很简单，是无状态，无连接的")]),s._v("。Https协议是由SSL+Http协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。"),e("strong",[s._v("(无状态的意思是其数据包的发送、传输和接收都是相互独立的。无连接的意思是指通信双方都不长久的维持对方的任何信息。)")])]),e("p",[s._v("Http和Https的基本概念")]),e("p",[s._v("Http："),e("strong",[s._v("超文本传输协议")]),s._v("（Http，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。设计Http最初的目的是为了提供一种发布和接收HTML页面的方法。它可以使浏览器更加高效。Http协议是以"),e("strong",[s._v("明文方式发送信息")]),s._v("的，如果黑客截取了Web浏览器和服务器之间的传输报文，就可以直接获得其中的信息。")]),e("p",[s._v("Http原理：")]),e("p",[s._v("① 客户端的浏览器首先要通过网络与服务器建立连接，"),e("strong",[s._v("该连接是通过TCP来完成的")]),s._v("，一般 TCP 连接的端口号是80。 建立连接后，客户机发送一个请求给服务器，请求方式的格式为：统一资源标识符（URL）、协议版本号，后边是 MIME 信息包括请求修饰符、客户机信息和许可内容。")]),e("p",[s._v("② 服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码，后边是 MIME 信息包括服务器信息、实体信息和可能的内容。")]),e("p",[s._v("Https："),e("strong",[s._v("是以安全为目标的Http通道")]),s._v("，是Http的安全版。Https的安全基础是SSL。SSL协议位于TCP/IP协议与各种应用层协议之间，为数据通讯提供安全支持。SSL协议可分为两层：SSL记录协议（SSL Record Protocol），它建立在可靠的传输协议（如TCP）之上，为高层协议提供数据封装、压缩、加密等基本功能的支持。SSL握手协议（SSL Handshake Protocol），它建立在SSL记录协议之上，用于在实际的数据传输开始前，通讯双方进行身份认证、协商加密算法、交换加密密钥等。")]),e("p",[e("strong",[s._v("Https如何保证安全性")]),s._v("： "),e("strong",[s._v("对称加密 + 非对称加密 + CA认证")])]),e("p",[e("strong",[s._v("内容加密：采用混合加密技术，中间者无法直接查看明文内容")]),e("strong",[s._v("验证身份：通过证书认证客户端访问的是自己的服务器")]),e("strong",[s._v("保护数据完整性：防止传输的内容被中间人冒充或者篡改")])]),e("p",[s._v("Https设计目标：")]),e("p",[s._v("(1)**数据保密性：**保证数据内容在传输的过程中不会被第三方查看。就像快递员传递包裹一样，都进行了封装，别人无法获知里面装了什么 。")]),e("p",[s._v("(2)**数据完整性：**及时发现被第三方篡改的传输内容。就像快递员虽然不知道包裹里装了什么东西，但他有可能中途掉包，数据完整性就是指如果被掉包，我们能轻松发现并拒收 。")]),e("p",[s._v("(3)**身份校验安全性：**保证数据到达用户期望的目的地。就像我们邮寄包裹时，虽然是一个封装好的未掉包的包裹，但必须确定这个包裹不会送错地方，通过身份校验来确保送对了地方 。")]),e("p",[s._v("Https原理：")]),e("p",[s._v("① 客户端将它所支持的算法列表和一个用作产生密钥的随机数发送给服务器；")]),e("p",[s._v("② 服务器从算法列表中选择一种加密算法，并将"),e("strong",[s._v("它和一份包含服务器公用密钥的证书")]),s._v("发送给客户端；该证书还包含了用于认证目的的服务器标识，服务器同时还提供了一个用作产生密钥的随机数；")]),e("p",[s._v("③ 客户端对服务器的证书进行验证（有关验证证书，可以参考数字签名），并抽取服务器的公用密钥；然后，再产生一个称作 pre_master_secret 的随机密码串，并使用服务器的公用密钥对其进行加密（参考非对称加 / 解密），并将加密后的信息发送给服务器；")]),e("p",[s._v("④ 客户端与服务器端根据 pre_master_secret 以及客户端与服务器的随机数值独立计算出加密和 MAC密钥（参考 DH密钥交换算法 ；")]),e("p",[s._v("⑤ 客户端将所有握手消息的 MAC 值发送给服务器；")]),e("p",[s._v("⑥ 服务器将所有握手消息的 MAC 值发送给客户端。")]),e("h2",[s._v("CA证书的原理")]),e("p",[s._v("非对称加密 RSA")]),e("h2",[s._v("对称加密和非对称加密")]),e("p",[s._v("**对称加密：**指的就是加、解密使用的同是一串密钥，所以被称做对称加密。对称加密只有一个密钥作为私钥。 常见的对称加密算法：DES，AES等。")]),e("p",[s._v("**非对称加密：**指的是加、解密使用不同的密钥，一把作为公开的公钥，另一把作为私钥。公钥加密的信息，只有私钥才能解密。反之，私钥加密的信息，只有公钥才能解密。")]),e("p",[s._v("（1） 对称加密加密与解密使用的是同样的密钥，所以速度快，但由于需要将密钥在网络传输，所以安全性不高。")]),e("p",[s._v("（2） 非对称加密使用了一对密钥，公钥与私钥，所以安全性高，但加密与解密速度慢。")]),e("p",[s._v("（3） 解决的办法是将对称加密的密钥使用非对称加密的公钥进行加密，然后发送出去，接收方使用私钥进行解密得到对称加密的密钥，然后双方可以使用对称加密来进行沟通。")]),e("h2",[s._v("HTTP有哪些方法")]),e("p",[e("strong",[s._v("（1）GET方法：获取资源")])]),e("p",[s._v("GET方法是用来请求URL指定的资源。指定资源经服务器端解析后返回响应内容。")]),e("p",[s._v("例：返回index.html的页面资源")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`GET /index.html HTTP/1.1``Host: www.php.cn`\n")])]),e("p",[e("strong",[s._v("（2）POST方法：传输实体主题")])]),e("p",[s._v("POST方法用来传输实体的主体")]),e("p",[s._v("例：返回submit.cgi接收数据的处理结果")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`POST /submit.cgi HTTP/1.1``Host:www.php.cn``Content-Length:1560`\n")])]),e("p",[e("strong",[s._v("（3）PUT方法：传输文件")])]),e("p",[s._v("PUT方法用来传输文件。像FTP协议的文件上传一样，要求在请求报文主体中包含文件的内容，然后保存到请求URL指定的位置。不太常用。")]),e("p",[s._v("例：响应返回状态码204 No Content(比如：该html已存在于服务器上)")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`PUT /example.html HTTP/1.1``Host:www.php.cn``Content-Type: text/html``Content-Length: 1560`\n")])]),e("p",[e("strong",[s._v("（4）HEAD方法：获取报文首部")])]),e("p",[s._v("HEAD方法和GET方法一样，只是不返回报文主体部分。用于确认URL的有效性及资源更新的日期时间等。")]),e("p",[s._v("例：返回index.html有关的响应首部")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`HEAD /index.html HTTP/1.1``Host:www.php.cn`\n")])]),e("p",[e("strong",[s._v("（5）DELETE方法：删除文件")])]),e("p",[s._v("DELETE方法用来删除文件，是PUT的相反方法。DELETE方法按请求URL删除指定的资源。也不常用。")]),e("p",[s._v("例：响应返回状态码204 No Content(比如：该html已从该服务器上删除)")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`DELETE /example.html HTTP/1.1``Host:www.php.cn`\n")])]),e("p",[e("strong",[s._v("（6）OPTIONS方法：询问支持的方法")])]),e("p",[s._v("OPTIONS方法用来查询针对请求URL指定的资源支持的方法。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`OPTIONS * HTTP/1.1``Host:www.php.cn`\n")])]),e("p",[e("strong",[s._v("响应")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("`HTTP/1.1 200 OK ``Allow:GET,POST,HEAD,OPTIONS`\n")])]),e("h2",[s._v("GET和POST有哪些区别")]),e("p",[s._v("请求缓存：GET 会被缓存，而post不会")]),e("p",[s._v("收藏书签：GET可以，而POST不能")]),e("p",[s._v("保留浏览器历史记录：GET可以，而POST不能")]),e("p",[s._v("用处：get常用于取回数据，post用于提交数据")]),e("p",[s._v("安全性：post比get安全")]),e("p",[s._v("请求参数：querystring 是url的一部分get、post都可以带上。 get的querystring（仅支持urlencode编码），post的参数是放在body（支持多种编码）")]),e("p",[s._v("请求参数长度限制：get请求长度最多1024kb，post对请求数据没有限制")]),e("h2",[s._v("关于长连接和短连接的理解及使用场景")]),e("p",[e("strong",[s._v("定义：")])]),e("p",[s._v("短连接：例如普通的web请求，在三次握手之后建立连接，发送数据包并得到服务器返回的结果之后，通过客户端和服务端的四次握手进行关闭断开。")]),e("p",[s._v("长连接：区别于短连接，由于三次握手链接及四次握手断开，在请求频繁的情况下，链接请求和断开请求的开销较大，影响效率。采用长连接方式，执行三次握手链接后，不断开链接，保持客户端和服务端通信，直到服务器超时自动断开链接，或者客户端主动断开链接。")]),e("h2",[s._v("使用长连接之后，客户端、服务端怎么知道本次传输结束呢？")]),e("ol",[e("li",[s._v("判断传输数据是否达到了Content-Length 指示的大小")]),e("li",[s._v("动态生成的文件没有 Content-Length ，它是分块传输（chunked），这时候就要根据 chunked 编码来判断，chunked 编码的数据在最后有一个空 chunked 块，表明本次传输数据结束")])]),e("p",[e("strong",[s._v("适用场景")]),s._v("：")]),e("p",[s._v("短连接：适用于网页浏览等数据刷新频度较低的场景。")]),e("p",[s._v("长连接：适用于客户端和服务端通信频繁的场景，例如聊天室，实时游戏等。")]),e("h2",[s._v("DNS")]),e("p",[s._v("域名系统（服务）协议（DNS）是一种"),e("a",{attrs:{href:"https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BD%91%E7%BB%9C/8951687"}},[s._v("分布式网络")]),e("a",{attrs:{href:"https://baike.baidu.com/item/%E7%9B%AE%E5%BD%95%E6%9C%8D%E5%8A%A1/10413830"}},[s._v("目录服务")]),s._v("，主要用于域名与 IP 地址的相互转换，以及控制"),e("a",{attrs:{href:"https://baike.baidu.com/item/%E5%9B%A0%E7%89%B9%E7%BD%91/114119"}},[s._v("因特网")]),s._v("的"),e("a",{attrs:{href:"https://baike.baidu.com/item/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6/111106"}},[s._v("电子邮件")]),s._v("的发送。")]),e("h2",[s._v("cookie和session")]),e("h3",[s._v("Cookie")]),e("p",[s._v("通俗讲，**Cookie是访问某些网站以后在本地存储的一些网站相关的信息，下次再访问的时候减少一些步骤。**另外一个更准确的"),e("a",{attrs:{href:"http://www.lai18.com/content/407204.html"}},[s._v("说法")]),s._v("是：Cookies是服务器在本地机器上存储的小段文本并随每一个请求发送至同一个服务器，是一种在客户端保持状态的方案。")]),e("p",[s._v("Cookie的主要内容包括：名字，值，过期时间，路径和域。使用Fiddler抓包就可以看见，比方说我们打开百度的某个网站可以看到Headers包括Cookie，如下：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("BIDUPSID: 9D2194F1CB8D1E56272947F6B0E5D47E\nPSTM: 1472480791\nBAIDUID: 3C64D3C3F1753134D13C33AFD2B38367:FG\nispeed_lsm: 2\nMCITY: -131:\npgv_pvi: 3797581824\npgv_si: s9468756992\nBDUSS: JhNXVoQmhPYTVENEdIUnQ5S05xcHZMMVY5QzFRNVh5SzZoV0xMVDR6RzV-bEJZSVFBQUFBJCQAAAAAAAAAAAEAAACteXsbYnRfY2hpbGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALlxKVi5cSlYZj\nBD_HOME: 1\nH_PS_PSSID: 1423_21080_17001_21454_21408_21530_21377_21525_21193_21340\nBD_UPN: 123253\nsug: 3\nsugstore: 0\nORIGIN: 0\nbdime: 0\n")])]),e("p",[s._v("可以看见是key, value的形式，也就是我们说的对应着的名字，值。过期时间是可以设置的，如果不设置，则浏览器关掉就消失了，是存储在内存当中的，否则就是按照我们设置的时间来存储在硬盘上的，当过期后自动清除，比方说我们开机关机关闭再打开浏览器后他都会还存在，前者称之为Session cookie 又叫 transient cookie，后者称之为Persistent cookie 又叫 permenent cookie。路径和域就是对应的域名，a网站的cookie自然不能给b用。")]),e("p",[e("strong",[s._v("Cookie 是Web 服务器发送给客户端的一小段信息，客户端请求时可以读取该信息发送到服务器端，进而进行用户的识别。对于客户端的每次请求，服务器都会将 Cookie 发送到客户端,在客户端可以进行保存,以便下次使用。")])]),e("p",[s._v("客户端可以采用两种方式来保存这个 Cookie 对象，"),e("strong",[s._v("一种方式是保存在客户端内存中，称为临时 Cookie")]),s._v("，浏览器关闭后这个 Cookie 对象将消失。"),e("strong",[s._v("另外一种方式是保存在客户机的磁盘上，称为永久 Cookie")]),s._v("。以后客户端只要访问该网站，就会将这个 Cookie 再次发送到服务器上，前提是这个 Cookie 在有效期内，这样就实现了对客户的跟踪。")]),e("p",[s._v("Cookie 是可以被客户端禁用的。")]),e("h3",[s._v("Session")]),e("p",[e("strong",[s._v("Session是存在服务器的一种用来存放用户数据的类HashTable结构。")])]),e("blockquote",[e("p",[s._v("当浏览器 第一次发送请求时，服务器自动生成了一个HashTable和一个Session ID用来唯一标识这个HashTable，并将其通过响应发送到浏览器。当浏览器第二次发送请求，会将前一次服务器响应中的Session ID放在请求中一并发送到服务器上，服务器从请求中提取出Session ID，并和保存的所有Session ID进行对比，找到这个用户对应的HashTable。")])]),e("p",[s._v("一般这个值会有一个时间限制，超时后毁掉这个值，默认是20分钟。")]),e("p",[s._v("Session的实现方式和Cookie有一定关系。试想一下，建立一个连接就生成一个session id，那么打开几个页面就好几个了，这显然不是我们想要的，那么该怎么区分呢？这里就用到了Cookie，我们可以把session id存在Cookie中，然后每次访问的时候将Session id带过去就可以识别了。")]),e("p",[e("strong",[s._v("Session 的实现依赖于 Cookie，如果 Cookie 被禁用，那么 session 也将失效。")])]),e("h3",[s._v("区别")]),e("p",[s._v("通过上面的简单叙述，很容易看出来最明显的不同是"),e("strong",[s._v("一个在客户端一个在服务端")]),s._v("。因为Cookie存在客户端所以用户可以看见，所以也可以编辑伪造，不是十分安全。")]),e("p",[s._v("Session过多的时候会消耗服务器资源，所以大型网站会有专门的Session服务器，而Cookie存在客户端所以没什么问题。")]),e("p",[s._v("域的支持范围不一样，比方说a.com的Cookie在a.com下都能用，而www.a.com的Session在api.a.com下都不能用，解决这个问题的办法是JSONP或者"),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/04/cors.html"}},[s._v("跨域资源共享")]),s._v("。")]),e("h2",[s._v("视频会议为什么使用UDP")]),e("p",[s._v("UDP没有拥塞控制")]),e("h2",[s._v("IP")]),e("p",[s._v("https://juejin.im/post/6844903510509633550#heading-23")]),e("p",[s._v("IP 地址")]),e("p",[s._v("1.1 IP 地址概述")]),e("ul",[e("li",[s._v("在计算机通信中，为了识别通信对端，必须要有一个类似于地址的识别码进行标识。在数据链路中的 MAC 地址正是用来标识同一个链路中不同计算机的一种识别码。")]),e("li",[s._v("作为网络层的 IP ,也有这种地址信息，一般叫做 IP 地址。IP 地址用于在“连接到网络中的所有主机中识别出进行通信的目标地址”。因此，在 TCP/IP 通信中所有主机或路由器必须设定自己的 IP 地址。")]),e("li",[s._v("不论一台主机与哪种数据链路连接，其 IP 地址的形式都保持不变。")]),e("li",[s._v("IP 地址（IPv4 地址）由32位正整数来表示。IP 地址在计算机内部以二进制方式被处理。然而，由于我们并不习惯于采用二进制方式，我们将32位的 IP 地址以每8位为一组，分成4组，每组以 “.” 隔开，再将每组数转换成十进制数。")])]),e("h2",[s._v("计算子网掩码")]),e("p",[s._v("https://blog.csdn.net/qq_25827845/article/details/70946041")]),e("p",[s._v("子网掩码(subnet mask)又叫网络掩码、地址掩码、子网络遮罩，它是一种用来指明一个IP地址的哪些位标识的是主机所在的子网，以及哪些位标识的是主机的位掩码。"),e("strong",[s._v("子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成网络地址和主机地址两部分。")])]),e("p",[s._v("子网掩码是一个32位地址，用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。")]),e("p",[e("strong",[s._v("（1）根据子网数")])]),e("p",[s._v("利用子网数来计算")]),e("p",[s._v("在求子网掩码之前必须先搞清楚要划分的子网数目，以及每个子网内的所需主机数目。")]),e("p",[s._v("1)将子网数目转化为"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6"}},[s._v("二进制")]),s._v("来表示")]),e("p",[s._v("2)取得该"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6"}},[s._v("二进制")]),s._v("的位数，为 N")]),e("p",[s._v("3)取得该IP地址的类子网掩码，将其"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80"}},[s._v("主机地址")]),s._v("部分的前N位置1 即得出该IP地址划分子网的子网掩码。")]),e("p",[s._v("如欲将B类IP地址168.195.0.0划分成27个子网：")]),e("p",[s._v("1)27=11011")]),e("p",[s._v("2)该"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6"}},[s._v("二进制")]),s._v("为五位数，N = 5")]),e("p",[s._v("3)将B类地址的子网掩码255.255.0.0的"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80"}},[s._v("主机地址")]),s._v("前5位置1（B类地址的主机位包括后两个字节，所以这里要把第三个字节的前5位置1），得到 255.255.248.0")]),e("p",[e("strong",[s._v("（2）根据主机数")])]),e("p",[s._v("利用主机数来计算")]),e("p",[s._v("1)将主机数目转化为二进制来表示")]),e("p",[s._v("2)如果主机数小于或等于254（注意去掉保留的两个IP地址），则取得该主机的"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6"}},[s._v("二进制")]),s._v("位数，为 N，这里肯定N<8。如果大于254，则 N>8，这就是说"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80"}},[s._v("主机地址")]),s._v("将占据不止8位。")]),e("p",[s._v("3)使用255.255.255.255来将该类IP地址的"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80"}},[s._v("主机地址")]),s._v("位数全部置1，然后从后向前的将N位全部置为 0，即为子网掩码值。")]),e("p",[s._v("如欲将B类IP地址168.195.0.0划分成若干子网，每个子网内有"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA"}},[s._v("主机")]),s._v("700台：")]),e("ol",[e("li",[s._v("700=1010111100")])]),e("p",[s._v("2)该"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6"}},[s._v("二进制")]),s._v("为十位数，N = 10")]),e("p",[s._v("3)将该B类地址的子网掩码255.255.0.0的"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80"}},[s._v("主机地址")]),s._v("全部置1，得到255.255.255.255")]),e("p",[s._v("然后再从后向前将后10位置0,即为： 11111111.11111111.11111100.00000000")]),e("p",[s._v("即255.255.252.0。这就是该欲划分成"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA"}},[s._v("主机")]),s._v("为700台的B类IP地址168.195.0.0的子网掩码。")]),e("h2",[s._v("socket")]),e("p",[s._v("https://blog.shenyuanluo.com/SockFun.html")]),e("h3",[s._v("socket")]),e("p",[s._v("建立一个协议族为 "),e("code",{pre:!0},[s._v("domain")]),s._v("、协议类型为 "),e("code",{pre:!0},[s._v("type")]),s._v("、协议编号为 "),e("code",{pre:!0},[s._v("protocol")]),s._v(" 的 "),e("strong",[s._v("socket")]),s._v(" 文件描述符。（当创建成功后，socket 在名称空间(网络地址族)中存在，但没有任何地址给它赋值。）在服务器端，"),e("code",{pre:!0},[s._v("socket()")]),s._v("返回的套接字用于监听 ("),e("code",{pre:!0},[s._v("listen")]),s._v(") 和接受 ("),e("code",{pre:!0},[s._v("accept")]),s._v(") 客户端的连接请求，这个套接字不能用于与客户端之间发送和接收数据；在客户端则是用于与服务端之间发送和接收数据。")]),e("h3",[s._v("bind（服务端）")]),e("p",[s._v("把用 "),e("strong",[s._v("addr")]),s._v(" 指定的地址赋值给用文件描述符代表的 sockfd；"),e("strong",[s._v("addrlen")]),s._v(" 指定了以 addr 所指向的地址结构体的字节长度。（该操作常称为**“给socket命名”**。）")]),e("h3",[s._v("listen（服务端）")]),e("p",[s._v("该函数使主动连接 socket 变为被动连接，使得一个进程可以接受其它进程的请求，从而成为一个服务器进程。（一般在调用 "),e("code",{pre:!0},[s._v("bind")]),s._v(" 之后和调用 "),e("code",{pre:!0},[s._v("accept")]),s._v(" 之前调用。）")]),e("h3",[s._v("accept（服务端）")]),e("p",[s._v("接受客户端连接请求（阻塞式）。")]),e("h3",[s._v("connect（客户端）")]),e("p",[s._v("完成面向连接的协议的连接过程，对于TCP来说就是那个 "),e("strong",[s._v("三次握手")]),s._v(" 过程。")]),e("h3",[s._v("recv")]),e("p",[s._v("接收数据（一般用于面向连接：TCP）。")]),e("h3",[s._v("send")]),e("p",[s._v("发送数据（一般用于面向连接：TCP）。")])])}],hs={},ds=Object(i["a"])(hs,is,os,!1,null,null,null),js=ds.exports,us=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("section",[a("h2",[s._v("四大组件")]),s._m(0),a("h2",[s._v("Activity生命周期")]),s._m(1),a("h2",[s._v("Activity启动模式")]),s._m(2),a("h2",[s._v("Activity 、 Window 、 View之间的关系")]),a("p",[s._v("https://blog.csdn.net/u011733020/article/details/49465707")]),a("p",[s._v("Activity：是Android 四大组件之一， 是存放View对象的容器，也是我们界面的载体，可以用来展示一个界面。它有一个SetContentView（）方法 ，可以将我们定义的布局设置到界面上。")]),a("p",[s._v("View：就是一个个视图的对象，实现了KeyEvent.Callback和Drawable.Callback。")]),a("p",[s._v("Window：是一个抽象类，是一个顶层的窗口，它的唯一实例是PhoneWindow它提供标准的用户界面策略，如背景、标题、区域，默认按键处理等。")]),s._m(3),a("h2",[s._v("Handler, Thread, HandlerThread")]),a("p",[s._v("https://blog.csdn.net/weixin_41101173/article/details/79687313")]),a("p",[s._v("（1）Handler类，上官方文档，Handler")]),a("p",[s._v("public class Handler.A Handler allows you to send and process Message and Runnable objects associated with a thread's MessageQueue. Each Handler instance is associated with a single thread and that thread's message queue. When you create a new Handler, it is bound to the thread / message queue of the thread that is creating it -- from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.")]),a("p",[s._v("There are two main uses for a Handler: (1) to schedule messages and runnables to be executed as some point in the future; and (2) to enqueue an action to be performed on a different thread than your own.")]),s._m(4),a("p",[s._v("（2）Thread类，上官方文档，Thread")]),a("p",[s._v("public class Thread. extends Object implements Runnable.A thread is a thread of execution in a program. The Java Virtual Machine allows an application to have multiple threads of execution running concurrently.")]),a("p",[s._v("Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority. Each thread may or may not also be marked as a daemon. When code running in some thread creates a new Thread object, the new thread has its priority initially set equal to the priority of the creating thread, and is a daemon thread if and only if the creating thread is a daemon.")]),a("p",[s._v("（3）HandlerThread类，上官方文档，HandlerThread")]),a("p",[s._v("public class HandlerThread. extends Thread. Handy class for starting a new thread that has a looper. The looper can then be used to create handler classes. Note that start() must still be called.")]),a("p",[s._v("①Handler：在android中负责发送和处理消息，通过它可以实现其他支线线程与主线程之间的消息通讯。")]),a("p",[s._v("②Thread：Java进程中执行运算的最小单位，亦即执行处理机调度的基本单位。某一进程中一路单独运行的程序。")]),a("p",[s._v("③HandlerThread：一个继承自Thread的类HandlerThread，Android中没有对Java中的Thread进行任何封装，而是提供了一个继承自Thread的类HandlerThread类，这个类对Java的Thread做了很多便利的封装。")]),s._m(5),a("h2",[s._v("Handler：线程间的数据传递")]),a("p",[s._v("https://www.jianshu.com/p/b4d745c7ff7a")]),a("p",[s._v("Handler：发送和接收消息 Looper：用于轮询消息队列，一个线程只能有一个Looper Message： MessageQueue：")]),a("h2",[s._v("activity之间的切换/返回")]),a("p",[s._v("Intent：显示or隐式")]),a("p",[s._v("隐式：只有"),a("action",[s._v("和"),a("category",[s._v("中的内容能够同时匹配上Intent中指定的action和category，这个活动才能响应Intent")])],1)],1),a("h2",[s._v("图片压缩：Bitmap")]),a("p",[s._v("https://www.jianshu.com/p/fba44d2524d2")]),s._m(6),a("p",[s._v("https://blog.csdn.net/qwe851023/article/details/82744933")]),a("h2",[s._v("碎片")]),a("p",[s._v("可以嵌入在活动当中的UI片段")]),a("h2",[s._v("android中多种数据存储类型的应用场景")]),a("p",[s._v("https://blog.csdn.net/goodlixueyong/article/details/47041415")]),a("p",[s._v("第一种： 使用SharedPreferences存储数据 适用范围：保存少量的数据，且这些数据的格式非常简单：字符串型、基本类型的值。比如应用程序的各种配置信息（如是否打开音效、是否使用震动效果、小游戏的玩家积分等），解锁口令密码等")]),a("p",[s._v("核心原理：保存基于XML文件存储的key-value键值对数据，通常用来存储一些简单的配置信息。通过DDMS的File Explorer面板，展开文件浏览树,很明显SharedPreferences数据总是存储在/data/data//shared_prefs目录下。SharedPreferences对象本身只能获取数据而不支持存储和修改,存储修改是通过SharedPreferences.edit()获取的内部接口Editor对象实现。 SharedPreferences本身是一 个接口，程序无法直接创建SharedPreferences实例，只能通过Context提供的getSharedPreferences(String name, int mode)方法来获取SharedPreferences实例，该方法中name表示要操作的xml文件名，第二个参数具体如下：")]),a("p",[s._v("Context.MODE_PRIVATE: 指定该SharedPreferences数据只能被本应用程序读、写。")]),a("p",[s._v("Context.MODE_WORLD_READABLE: 指定该SharedPreferences数据能被其他应用程序读，但不能写。")]),a("p",[s._v("Context.MODE_WORLD_WRITEABLE: 指定该SharedPreferences数据能被其他应用程序读，写")]),a("p",[s._v("SharedPreferences对象与SQLite数据库相比，免去了创建数据库，创建表，写SQL语句等诸多操作，相对而言更加方便，简洁。但是SharedPreferences也有其自身缺陷，比如其职能存储boolean，int，float，long和String五种简单的数据类型，比如其无法进行条件查询等。所以不论SharedPreferences的数据存储操作是如何简单，它也只能是存储方式的一种补充，而无法完全替代如SQLite数据库这样的其他数据存储方式。")]),a("p",[s._v("第二种： 文件存储数据 可以在设备本身的存储设备或者外接的存储设备中创建用于保存数据的文件。同样在默认的状态下，文件是不能在不同的程序间共享。")]),a("p",[s._v("写文件：调用Context.openFileOutput()方法根据指定的路径和文件名来创建文件，这个方法会返回一个FileOutputStream对象。")]),a("p",[s._v("读取文件：调用Context.openFileInput()方法通过制定的路径和文件名来返回一个标准的Java FileInputStream对象。")]),a("p",[s._v("第三种：SQLite存储数据 SQLite Database数据库。Android对数据库的支持很好，它本身集成了SQLite数据库，每个应用都可以方便的使用它，或者更确切的说，Android完全依赖于SQLite数据库，它所有的系统数据和用到的结构化数据都存储在数据库中。 它具有以下优点： a. 效率出众，这是无可否认的 b. 十分适合存储结构化数据 c. 方便在不同的Activity，甚至不同的应用之间传递数据。")]),a("p",[s._v("第四种：ContentProvider Android系统中能实现所有应用程序共享的一种数据存储方式，由于数据通常在各应用间的是互相私密的，所以此存储方式较少使用，但是其又是必不可少的一种存储方式。例如音频，视频，图片和通讯录，一般都可以采用此种方式进行存储。每个ContentProvider都会对外提供一个公共的URI（包装成Uri对象），如果应用程序有数据需要共享时，就需要使用ContentProvider为这些数据定义一个URI，然后其他的应用程序就通过Content Provider传入这个URI来对数据进行操作。")]),a("p",[s._v("总结一下，文件适用于存储一些简单的文本数据或者二进制数据，SharedPreferences适用于存储一些键值对，而数据库则适用于那些复杂的关系型数据。")]),a("h2",[s._v("Binder")]),a("p",[s._v("进程间的通信机制")]),a("p",[s._v("https://www.jianshu.com/p/4c4dcf80d412")]),a("h2",[s._v("Socket网络通信")]),a("p",[s._v("https://blog.csdn.net/cbwem/article/details/90182859")]),a("p",[s._v("Socket是对TCP/IP协议的封装，是一个调用接口API。在TCP/IP协议中主要有Socket类型的流套接字StreamSocket和数据报套接字DatagramSocket。")]),a("p",[s._v("流套接字将TCP作为其端到端的协议，提供一个可信赖的字节流服务。")]),a("p",[s._v("数据报套接字使用UDP协议，提供数据打包发送服务。")]),s._m(7),a("p",[s._v("套接字通信的使用步骤：")]),s._m(8),a("h2",[s._v("点击应用图标，打开应用的过程")]),a("p",[s._v("https://blog.csdn.net/freekiteyu/article/details/79318031")]),s._m(9),s._m(10),a("h2",[s._v("EventBus")]),s._m(11),a("p",[s._v("1.1 三个角色")]),s._m(12),a("h2",[s._v("View的绘制流程")]),a("p",[s._v("https://www.cnblogs.com/andy-songwei/p/10955062.html")]),s._m(13),s._m(14),a("p",[s._v("layout：布局。根据测量出的结果以及对应的参数，来确定每一个控件应该显示的位置。")]),a("p",[s._v("draw：绘制。确定好位置后，就将这些控件绘制到屏幕上。")]),a("h1",[s._v("框架")]),a("p",[s._v("https://www.jianshu.com/p/220729f01a25")]),a("h2",[s._v("mvc")]),s._m(15),s._m(16),a("p",[s._v("优点")]),a("p",[s._v("1：耦合性低")]),a("p",[s._v("视图层和业务层分离，这样就允许更改视图层代码而不用重新编译模型和控制器代码,[例如，改写jsp,html,css,javascirpt的代码，并不需要重启服务器]同样，一个应用的业务流程或者业务规则的改变只需要改动MVC的模型层即可【例如，换表名查询，更改一些查询的条件，或者使用动态sql还是静态的sql，只用更改model即可】。因为模型与控制器和视图相分离，所以很容易改变应用程序的数据层和业务规则。")]),a("p",[s._v("2：重用性高")]),a("p",[s._v("随着技术的不断进步，需要用越来越多的方式来访问应用程序。MVC模式允许使用各种不同样式的视图来访问同一个服务器端的代码，因为多个视图能共享一个模型，它包括任何WEB(HTTP)浏览器或者无线浏览器(wap)，比如，用户可以通过电脑也可通过手机来订购某样产品，虽然订购的方式不一样，但处理订购产品的方式是一样的。由于模型返回的数据没有进行格式化，所以同样的构件能被不同的界面使用。【例如，模型层实现了同样的分页，不同的视图层可以用一万种不同的显示方法，例如百度搜索下面的分页和谷歌搜索下面的分页】MVC使开发和维护用户接口的技术含量降低。")]),a("p",[s._v("3：部署快")]),a("p",[s._v("使用MVC模式使开发时间得到相当大的缩减，它使程序员(Java开发人员)集中精力于业务逻辑，界面程序员(HTML和JSP开发人员)集中精力于表现形式上。【例如，前端后端可以分工作业，效率高，方便多开发人员间的分工】")]),a("p",[s._v("4：可维护性高")]),a("p",[s._v("分离视图层和业务逻辑层也使得WEB应用更易于维护和修改。【例如：如果想改业务逻辑，只用改业务逻辑，如果想改视图，只用改视图，如果想增加功能，只需要增加即可，分层最大的好处就是容易后期维护降低维护成本，和增加新的功能，提高代码重用性，从而提高开发效率】")]),a("p",[s._v("5：有利软件工程化管理")]),a("p",[s._v("由于不同的层各司其职，每一层不同的应用具有某些相同的特征，有利于通过工程化、工具化管理程序代码。控制器也提供了一个好处，就是可以使用控制器来联接不同的模型和视图去完成用户的需求，这样控制器可以为构造应用程序提供强有力的手段。给定一些可重用的模型和视图，控制器可以根据用户的需求选择模型进行处理，然后选择视图将处理结果显示给用户。【因为控制器重点在于分配，更好的结合视图和模型】")]),a("p",[s._v("缺点：")]),a("p",[s._v("1：没有明确的定义")]),a("p",[s._v("完全理解MVC并不是很容易。使用MVC需要精心的计划，由于它的内部原理比较复杂，所以需要花费一些时间去思考。同时由于模型和视图要严格的分离，这样也给调试应用程序带来了一定的困难。每个构件在使用之前都需要经过彻底的测试。")]),a("p",[s._v("2：不适合小型，中等规模的应用程序")]),a("p",[s._v("花费大量时间将MVC应用到规模并不是很大的应用程序通常会得不偿失。【这个是最明显的缺点，例如我们仅仅需要到数据库查信息，如果不分层设计我们可以直接从视图型层到模型去访问，效率上会有所提高，如果以代码的复杂性为代价，多了一层，代码量大大增加，在这个时候就降低了开发效率】")]),a("p",[s._v("3：增加系统结构和实现的复杂性")]),a("p",[s._v("对于简单的界面，严格遵循MVC，使模型、视图与控制器分离，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率。")]),a("p",[s._v("4：视图与控制器间的过于紧密的连接")]),a("p",[s._v("视图与控制器是相互分离，但却是联系紧密的部件，视图没有控制器的存在，其应用是很有限的，反之亦然，这样就妨碍了他们的独立重用。【例如，不可能总是在jsp页面中直接访问模型，一般放在逻辑控制层进行处理，servlet】")]),a("p",[s._v("5：视图对模型数据的低效率访问")]),a("p",[s._v("依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问，也将损害操作性能。【例如，页面的有一部分数据我并没有更新，但是提交到模型层照样会去获得返回显示 】")]),a("p",[s._v("6：一般高级的界面工具或构造器不支持模式")]),a("p",[s._v("改造这些工具以适应MVC需要和建立分离的部件的代价是很高的，会造成MVC使用的困难。")]),a("h2",[s._v("mvp")]),a("p",[s._v("MVP 模式将 Controller 改名为 Presenter，同时改变了通信方向。")]),s._m(17),s._m(18),a("p",[s._v("MVP的优点：")]),a("p",[s._v("(1)降低耦合度")]),a("p",[s._v("(2)模块职责划分明显")]),a("p",[s._v("(3)利于测试驱动开发")]),a("p",[s._v("(4)代码复用")]),a("p",[s._v("(5)隐藏数据")]),a("p",[s._v("(6)代码灵活性")]),a("p",[s._v("MVP的缺点：")]),a("p",[s._v("由于对视图的渲染放在了Presenter中，所以视图和Presenter的交互会过于频繁。如果Presenter过多地渲染了视图，往往会使得它与特定的视图的联系过于紧密。一旦视图需要变更，那么Presenter也需要变更了。")]),a("h2",[s._v("mvvm")]),a("p",[s._v("MVVM 模式将 Presenter 改名为 ViewModel，基本上与 MVP 模式完全一致。")]),s._m(19),a("p",[s._v("唯一的区别是，它采用双向绑定（data-binding）：View的变动，自动反映在 ViewModel，反之亦然。 这里面使用的设计模式有：观察者模式（发布订阅模式）、代理模式、工厂模式、单例模式。")]),a("p",[s._v("方便测试")]),a("p",[s._v("在MVC下，Controller基本是无法测试的，里面混杂了个各种逻辑，而且分散在不同的地方。有了MVVM我们就可以测试里面的viewModel，来验证我们的处理结果对不对（Xcode7的测试已经越来越完善了）。")]),a("p",[s._v("便于代码的移植")]),a("p",[s._v("比如iOS里面有iPhone版本和iPad版本，除了交互展示不一样外，业务逻辑的model是一致的。这样，我们就可以以很小的代价去开发另一个app。（以前做公司iPad的时候就深深感觉到，全部在VC里面是多么的痛苦和重新开发一个没有啥区别）。")]),a("p",[s._v("兼容MVC")]),a("p",[s._v("MVVM是MVC的一个升级版，目前的MVC也可以很快的转换到MVVM这个模式。VC可以省去一大部分展示逻辑。")]),a("p",[s._v("缺点：")]),a("p",[s._v("类会增多")]),a("p",[s._v("每个VC都附带一个viewModel，类的数量*2")]),a("p",[s._v("viewModel会越来越庞大")]),a("p",[s._v("我们把逻辑给了viewModel，那势必Model也会变得很复杂，里面的属性和方法越来越多。可能重写的方法比较多，因为涉及到一些数据的转换以及和controller之间的通信。")]),a("p",[s._v("调用复杂度增加")]),a("p",[s._v("由于数据都是从viewModel来，想想突然来了一个新人，一看代码，不知道真实的模型是谁。比如常用tableview的数据源，一般都是一个数组，如果不断的通过viewModel去取，沟通上没有那么直接。况且每封一层，意味着要写很多代码去融合他们的转换。")])])},ms=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("活动：可以包含用户界面的组件，主要用于和用户进行交互")]),a("li",[s._v("广播接收器：接收系统中的广播（有序广播/标准广播） "),a("ul",[a("li",[s._v("静态注册：在AndroidManifest.xml中注册")]),a("li",[s._v("动态注册：在代码中注册")]),a("li",[s._v("创建方法：新建一个类，让它继承自"),a("code",{pre:!0},[s._v("BroadcastReceiver")]),s._v("，并重写父类的"),a("code",{pre:!0},[s._v("onReceive()")]),s._v("方法")])])]),a("li",[s._v("内容提供器：主要用于在不同应用程序间实现数据共享的功能 "),a("ul",[a("li",[s._v("借助"),a("code",{pre:!0},[s._v("ContentResolver")]),s._v("类")]),a("li",[s._v("使用内容uri参数而不是表名进行CURD操作")]),a("li",[s._v("创建方法：新建一个类继承"),a("code",{pre:!0},[s._v("ContentProvider")]),s._v("，并重写其中的六个抽象方法： "),a("ul",[a("li",[s._v("onCreate")]),a("li",[s._v("query")]),a("li",[s._v("insert")]),a("li",[s._v("update")]),a("li",[s._v("delete")]),a("li",[s._v("getType：根据传入的内容Uri来返回相应的MEMI类型")])])])])]),a("li",[s._v("服务：Android中实现程序后台运行的解决方案，适合去执行那些不需要和用户交互还要求长期执行的任务 "),a("ul",[a("li",[s._v("每个服务只会存在一个实例")]),a("li",[s._v("生命周期 P359 "),a("ul",[a("li",[s._v("startService并回调onStartCommend 如果之前服务没有被创建，onCreate方法会先于onStartCommend执行")]),a("li",[s._v("bindService来获得服务的持久连接，会回调onBind方法")]),a("li",[s._v("销毁服务：同时调用stopService、unbindService和onDestroy方法")])])])])])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("p",[e("img",{attrs:{src:a("87a2"),alt:"img"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[s._v("standard")]),a("li",[s._v("singleTop：启动活动时如果发现返回栈的栈顶已经是该活动，则直接使用它")]),a("li",[s._v("singleTask：每次启动该活动时系统首先会在返回栈中检查是否存在该活动的实例，如果发现已经存在则直接使用该实例，并把这个活动之上的所有活动都出栈")]),a("li",[s._v("singleInstance：指定为此模式的活动会启用一个新的返回栈来管理这个活动。假设有一个活动允许其他程序调用，这样就有一个单独的返回栈来管理这个活动，不管哪个应用程序来访问，都会公用一个返回栈（共享活动实例的问题）")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("分析下三者之间的关系吧 View包含很多，TextView 、Imageview 、Listview 、 Button..就是一个一个展示不同图形的对象。我们可以把view通过xml布局，或者通过new View(),然后通过addview方法或动态或静态添加到Activity的布局上。我们都知道我们定义了layout布局，通过SetContentView就可以设置到Activity上，"),a("strong",[s._v("而Activity中的SetContentView()方法,又调用了Window的SetContentView方法")]),s._v("，"),a("strong",[s._v("也就是View通过Activity最终添加到了Window上面")]),s._v("。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("1."),a("strong",[s._v("在新启动的线程中发送消息")]),s._v(" 2."),a("strong",[s._v("在主线程中获取，处理消息")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("p",[e("img",{attrs:{src:a("aae3"),alt:"img"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[s._v("对宽高压缩，修改压缩率")]),a("li",[s._v("对图片质量压缩，compress()方法")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("p",[e("img",{attrs:{src:a("a6ce"),alt:"在这里插入图片描述"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[s._v("创建ServerSocket和Socket")]),a("li",[s._v("打开连接到的Socket的输入/输出流")]),a("li",[s._v("按照协议对Socket进行读/写操作")]),a("li",[s._v("关闭输入输出流，以及Socket")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("从 Launcher 点击图标，如果应用没有启动过，则会 fork 一个新进程。")]),a("li",[s._v("App 进程初始化")]),a("li",[s._v("Activity 启动")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("p",[e("img",{attrs:{src:a("5d61"),alt:"这里写图片描述"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("EventBus是一种用于Android的事件发布-订阅总线，由GreenRobot开发，Gihub地址是："),a("a",{attrs:{href:"https://github.com/greenrobot/EventBus"}},[s._v("EventBus")]),s._v("。它简化了应用程序内各个组件之间进行通信的复杂度，尤其是碎片之间进行通信的问题，可以避免由于使用广播通信而带来的诸多不便。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[a("strong",[s._v("Event")]),s._v("：事件，它可以是任意类型，EventBus会根据事件类型进行全局的通知。")]),a("li",[a("strong",[s._v("Subscriber")]),s._v("：事件订阅者，在EventBus 3.0之前我们必须定义以onEvent开头的那几个方法，分别是"),a("code",{pre:!0},[s._v("onEvent")]),s._v("、"),a("code",{pre:!0},[s._v("onEventMainThread")]),s._v("、"),a("code",{pre:!0},[s._v("onEventBackgroundThread")]),s._v("和"),a("code",{pre:!0},[s._v("onEventAsync")]),s._v("，而在3.0之后事件处理的方法名可以随意取，不过需要加上注解"),a("code",{pre:!0},[s._v("@subscribe")]),s._v("，并且指定线程模型，默认是"),a("code",{pre:!0},[s._v("POSTING")]),s._v("。")]),a("li",[a("strong",[s._v("Publisher")]),s._v("：事件的发布者，可以在任意线程里发布事件。一般情况下，使用"),a("code",{pre:!0},[s._v("EventBus.getDefault()")]),s._v("就可以得到一个EventBus对象，然后再调用"),a("code",{pre:!0},[s._v("post(Object)")]),s._v("方法即可")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("我们知道，在自定义View的时候一般需要重写父类的"),a("code",{pre:!0},[s._v("onMeasure()")]),s._v("、"),a("code",{pre:!0},[s._v("onLayout()")]),s._v("、"),a("code",{pre:!0},[s._v("onDraw()")]),s._v("三个方法，来完成视图的展示过程。当然，这三个暴露给开发者重写的方法只不过是整个绘制流程的冰山一角，更多复杂的幕后工作，都让系统给代劳了。一个完整的绘制流程包括measure、layout、draw三个步骤，其中：")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[s._v("measure：测量。系统会先根据xml布局文件和代码中对控件属性的设置，来获取或者计算出每个"),a("code",{pre:!0},[s._v("View")]),s._v("和"),a("code",{pre:!0},[s._v("ViewGroup")]),s._v("的尺寸，并将这些尺寸保存下来。")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("img",{attrs:{src:"https:////upload-./images.jianshu.io/upload_./images/4050018-c7c4ddd5fcc3dfac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/601/format/webp",alt:"img"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[s._v("View 传送指令到 Controller")]),a("li",[s._v("Controller 完成业务逻辑后，要求 Model 改变状态")]),a("li",[s._v("Model 将新的数据发送到 View，用户得到反馈 所有通信都是单向的。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("img",{attrs:{src:"https:////upload-./images.jianshu.io/upload_./images/4050018-cc553326cc9dc1be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/537/format/webp",alt:"img"}})])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ol",[a("li",[s._v("各部分之间的通信，都是双向的。")]),a("li",[s._v("View 与 Model 不发生联系，都通过 Presenter 传递。")]),a("li",[s._v('View 非常薄，不部署任何业务逻辑，称为"被动视图"（Passive View），即没有任何主动性，而 Presenter非常厚，所有逻辑都部署在那里。')])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("img",{attrs:{src:"https:////upload-./images.jianshu.io/upload_./images/4050018-ce27fe8c0d60e299.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/556/format/webp",alt:"img"}})])}],gs={},ys=Object(i["a"])(gs,us,ms,!1,null,null,null),ws=ys.exports,ks=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},fs=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("h1",[s._v("并发")]),e("h2",[s._v("线程和进程的区别？")]),e("p",[s._v("进程是运行在它自己的地址空间内的自包容的程序")]),e("p",[s._v("一个线程就是在进程中的一个单一的顺序控制流")]),e("p",[s._v("进程=火车；线程=车厢")]),e("ul",[e("li",[s._v("一个进程可以包含多个线程")]),e("li",[s._v("不同进程之间的数据很难共享")]),e("li",[s._v("同一进程下不同线程之间的数据很容易共享")]),e("li",[s._v("进程比线程要消耗更多的资源")]),e("li",[s._v("进程之间不相互影响，一个线程挂掉将导致整个进程挂掉")]),e("li",[s._v("进程是系统分配资源的最小粒度，线程是CPU调度的最小粒度")])]),e("h2",[s._v("操作系统中线程和进程分别如何通信")]),e("p",[s._v("进程间通信方式：")]),e("ul",[e("li",[s._v("消息传递（管道、FIFO、消息队列）")]),e("li",[s._v("同步（互斥量、条件变量、读写锁、文件和写记录锁、信号量）")]),e("li",[s._v("共享内存（匿名的和具名的）")]),e("li",[s._v("远程过程调用（Solaris门和Sun RPC）")])]),e("ul",[e("li",[e("strong",[s._v("管道")]),s._v("( pipe )：管道是一种半双工的通信方式，数据只能单向流动，而且只能在具有亲缘关系的进程间使用。进程的亲缘关系通常是指父子进程关系。")]),e("li",[s._v("有名管道 (namedpipe) ： 有名管道也是半双工的通信方式，但是它允许无亲缘关系进程间的通信。")]),e("li",[s._v("信号量(semophore ) ： 信号量是一个计数器，可以用来控制多个进程对共享资源的访问。它常作为一种锁机制，防止某进程正在访问共享资源时，其他进程也访问该资源。因此，主要作为进程间以及同一进程内不同线程之间的同步手段。")]),e("li",[e("strong",[s._v("消息队列")]),s._v("( messagequeue ) ： 消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。消息队列克服了信号传递信息少、管道只能承载无格式字节流以及缓冲区大小受限等缺点。")]),e("li",[s._v("信号 ("),e("strong",[s._v("signal")]),s._v(" ) ： 信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生。")]),e("li",[e("strong",[s._v("共享内存")]),s._v("(shared memory ) ：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问。共享内存是最快的 IPC 方式，它是针对其他进程间通信方式运行效率低而专门设计的。它往往与其他通信机制，如信号量，配合使用，来实现进程间的同步和通信。")]),e("li",[s._v("套接字(socket ) ： 套接字也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同机器间的进程通信。")])]),e("p",[s._v("线程间的通信方式：")]),e("ul",[e("li",[e("p",[s._v("锁机制：包括互斥锁、条件变量、读写锁")]),e("p",[s._v("互斥锁提供了以排他方式防止数据结构被并发修改的方法。")]),e("p",[s._v("读写锁允许多个线程同时读共享数据，而对写操作是互斥的。")]),e("p",[s._v("条件变量可以以原子的方式阻塞进程，直到某个特定条件为真为止。对条件的测试是在互斥锁的保护下进行的。条件变量始终与互斥锁一起使用。")])]),e("li",[e("p",[s._v("信号量机制(Semaphore)：包括无名线程信号量和命名线程信号量")])]),e("li",[e("p",[s._v("信号机制(Signal)：类似进程间的信号处理 线程间的通信目的主要是用于线程同步，所以线程没有像进程通信中的用于数据交换的通信机制。")])])]),e("h2",[s._v("如何创建一个线程")]),e("p",[s._v("https://blog.csdn.net/weixin_41891854/article/details/81265772")]),e("ol",[e("li",[s._v("继承Thread类")]),e("li",[s._v("覆写Runnable接口，而后同样覆写run")]),e("li",[s._v("覆写Callable接口")]),e("li",[s._v("Executor工具类创建线程池")])]),e("h2",[s._v("为什么要用多线程")]),e("p",[s._v("https://blog.csdn.net/ajax_yan/article/details/82149362")]),e("ul",[e("li",[s._v("避免阻塞")]),e("li",[s._v("避免CPU闲置")])]),e("p",[s._v("以http server为例，如果只用单线程响应HTTP请求，即处理完一条请求，再处理下一条请求的话，CPU会存在大量的闲置时间")]),e("ul",[e("li",[s._v("提升性能")])]),e("p",[s._v("多线程的例子")]),e("p",[s._v("\\1. 图形用户界面中，多线程可以提供用户界面响应灵敏度。")]),e("p",[s._v("\\2. 服务器应用程序中，可以提升资源利用率以及系统吞吐率。比如在tomcat中一部分线程接受请求，另一部分线程处理请求。")]),e("p",[s._v("\\3. JVM垃圾收集器中，垃圾收集通常在一个或者多个专门的线程中运行，同时还有个主线程来运行main方法。")]),e("p",[s._v("\\4. 矩阵计算，多线程并发执行。")]),e("p",[s._v("\\5. 下载大文件时，大文件可以分成多个部分，每个线程下载一部分。")]),e("p",[s._v("\\6. 多叉树中搜索N个文件。")]),e("p",[s._v("\\7. 假设有个请求，这个请求服务端的处理需要执行3个很缓慢的IO操作（比如数据库查询或文件查询）。")]),e("p",[s._v("\\8. web服务器本身；各种专用服务器（如游戏服务器）。")]),e("p",[s._v("\\9. 后台任务，例如：定时向大量（100w以上）的用户发送邮件。")]),e("p",[s._v("\\10. 异步处理，例如：发微博、记录日志等。")]),e("p",[s._v("\\11. 分布式计算。")]),e("p",[s._v("\\12. 生产者和消费者模型。")]),e("p",[s._v("\\13. 定时任务。")]),e("p",[s._v("\\14. Servlet和JSP，多并发时可能有多个客户端请求Servlet，Servlet必须是线程安全的。")]),e("p",[s._v("\\15. 远程方法调用。")]),e("h2",[s._v("死锁")]),e("ul",[e("li",[e("p",[s._v("某个任务在等待另一个任务，后者又等待别的任务，这样一直下去，直到这个链条上的任务又在等待第一个任务释放锁。这得到了一个任务之间相互等待的连续循环，没有哪个线程能继续。")])]),e("li",[e("p",[s._v("哲学家就餐问题")])]),e("li",[e("p",[e("strong",[s._v("发生的条件：")])]),e("ul",[e("li",[s._v("互斥条件： 一个资源每次只能被一个任务使用")]),e("li",[s._v("占有并等待：至少有一个任务持有资源并且正在等待一个当前被别的任务持有的资源")]),e("li",[s._v("非抢占：资源不能被任务抢占，任务必须把资源释放当做普通事件")]),e("li",[s._v("必须有循环等待：在线程中，开始一个循环，不停地查询请求是否完成，如完成了，就做出相应的处理")])])]),e("li",[e("p",[s._v("解决")]),e("ol",[e("li",[e("p",[s._v("破坏“请求和保持”条件 想办法，让进程不要那么贪心，自己已经有了资源就不要去竞争那些不可抢占的资源。比如，让进 程在申请资源时，一次性申请所有需要用到的资源，不要一次一次来申请，当申请的资源有一些没 空，那就让线程等待。不过这个方法比较浪费资源，进程可能经常处于饥饿状态。还有一种方法 是，"),e("strong",[s._v("要求进程在申请资源前，要释放自己拥有的资源")]),s._v("。")])]),e("li",[e("p",[s._v("破坏“不可抢占”条件 "),e("strong",[s._v("允许进程进行抢占")]),s._v("，方法一：如果去抢资源，被拒绝，就释放自己的资源。方法二：操作系统允许 抢，只要你"),e("strong",[s._v("优先级大，可以抢到")]),s._v("。")])]),e("li",[e("p",[s._v("破坏“循环等待”条件： 将系统中的所有资源统一编号，进程可在任何时刻提出资源申请，但所有申请必须按照资源的编号 顺序（升序）提出")])])])])]),e("h2",[s._v("线程池")]),e("ol",[e("li",[s._v("线程池的概念：")])]),e("p",[s._v("​ 线程池就是"),e("strong",[s._v("首先创建一些线程，它们的集合称为线程池")]),s._v("。使用线程池可以很好地提高性能，线程池在系统启动时即创建大量空闲的线程，程序将一个任务传给线程池，线程池就会启动一条线程来执行这个任务，"),e("strong",[s._v("执行结束以后，该线程并不会死亡，而是再次返回线程池中成为空闲状态，等待执行下一个任务。")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("线程池的工作机制")])]),e("p",[s._v("​ 2.1 在线程池的编程模式下，任务是提交给整个线程池，而不是直接提交给某个线程，线程池在拿到任务后，就在内部寻找是否有空闲的线程，如果有，则将任务交给某个空闲的线程。")]),e("p",[s._v("​ 2.2 一个线程同时只能执行一个任务，但可以同时向一个线程池提交多个任务。")]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("使用线程池的原因：")])]),e("p",[s._v("​ 多线程运行时间，系统不断的启动和关闭新线程，成本非常高，会过渡消耗系统资源，以及过渡切换线程的危险，从而可能导致系统资源的崩溃。这时，线程池就是最好的选择了。")]),e("ol",[e("li",[s._v("线程池的返回值"),e("code",{pre:!0},[s._v("ExecutorService")]),s._v("简介：")])]),e("p",[s._v("​ "),e("code",{pre:!0},[s._v("ExecutorService")]),s._v("是Java提供的用于管理线程池的类。该类的两个作用：控制线程数量和重用线程")]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("具体的4种常用的线程池实现如下：（返回值都是"),e("code",{pre:!0},[s._v("ExecutorService")]),s._v("）")])]),e("p",[s._v("​ 2.1 "),e("code",{pre:!0},[s._v("Executors.newCacheThreadPool()")]),s._v("：可缓存线程池，先查看池中有没有以前建立的线程，如果有，就直接使用。如果没有，就建一个新的线程加入池中，缓存型池子通常用于执行一些生存期很短的异步型任务")]),e("p",[s._v("​ 2.2 "),e("code",{pre:!0},[s._v("Executors.newFixedThreadPool(int n)")]),s._v("：创建一个可重用固定个数的线程池，以共享的无界队列方式来运行这些线程。")]),e("p",[s._v("​ 2.3 "),e("code",{pre:!0},[s._v("Executors.newScheduledThreadPool(int n)")]),s._v("：创建一个定长线程池，支持定时及周期性任务执行")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":""}},[s._v("2.4  `Executors.newSingleThreadExecutor()`：创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。  \n")])]),e("p",[e("code",{pre:!0},[s._v("ThreadPoolExecutor")]),s._v("的重要参数")]),e("p",[s._v("1.corePoolSize：核心线程数")]),e("p",[s._v("核心线程会一直存活，即使没有任务需要执行。")]),e("p",[s._v("当线程数小于核心线程数时，即使有线程空闲，线程池也会优先创建新线程处理。")]),e("p",[s._v("设置"),e("code",{pre:!0},[s._v("allowCoreThreadTimeout=true")]),s._v("（默认false）时，核心线程会超时关闭。")]),e("p",[s._v("2.queueCapacity：任务队列容量（阻塞队列）")]),e("p",[s._v("当核心线程数达到最大时，新任务会放在队列中排队等待执行。")]),e("p",[s._v("3.maxPoolSize：最大线程数")]),e("p",[s._v("当线程数>="),e("code",{pre:!0},[s._v("corePoolSize")]),s._v("，且任务队列已满时。线程池会创建新线程来处理任务。")]),e("p",[s._v("当线程数="),e("code",{pre:!0},[s._v("maxPoolSize")]),s._v("，且任务队列已满时，线程池会拒绝处理任务而抛出异常。")]),e("p",[s._v("4.keepAliveTime：线程空闲时间")]),e("p",[s._v("当线程空闲时间达到"),e("code",{pre:!0},[s._v("keepAliveTime")]),s._v("时，线程会退出，直到线程数量="),e("code",{pre:!0},[s._v("corePoolSize")]),s._v("。")]),e("p",[s._v("如果"),e("code",{pre:!0},[s._v("allowCoreThreadTimeout=true")]),s._v("，则会直到线程数量=0。")]),e("p",[s._v("5.allowCoreThreadTimeout：允许核心线程超时")]),e("p",[s._v("6.rejectedExecutionHandler：任务拒绝处理器")]),e("h2",[s._v("线程池的维护")]),e("p",[s._v("https://www.jianshu.com/p/aa3c936822c0")]),e("ol",[e("li",[s._v("如果运行的线程少于"),e("code",{pre:!0},[s._v("corePoolSize")]),s._v(",则Executor始终首选添加新的线程,而不进行排队.")]),e("li",[s._v("如果运行的线程等于或多于"),e("code",{pre:!0},[s._v("corePoolSize")]),s._v(",则 Executor 始终首选将请求加入队列,而不添加新的线程.")]),e("li",[s._v("如果无法将请求加入队列,则创建新的线程,除非创建此线程超出"),e("code",{pre:!0},[s._v("maximumPoolSize")]),s._v(",在这种情况下,任务将被拒绝.")])]),e("h2",[s._v("synchronized")]),e("p",[s._v("https://blog.csdn.net/zjy15203167987/article/details/82531772")]),e("p",[s._v("1.为什么要使用synchronized")]),e("p",[s._v("在并发编程中存在线程安全问题，主要原因有：1.存在共享数据 2.多线程共同操作共享数据。"),e("strong",[s._v("关键字synchronized可以保证在同一时刻，只有一个线程可以执行某个方法或某个代码块，同时synchronized可以保证一个线程的变化可见（可见性），即可以代替volatile。")])]),e("p",[s._v("2.实现原理")]),e("p",[s._v("synchronized可以保证方法或者代码块在运行时，同一时刻只有一个方法可以进入到临界区，同时它还可以保证共享变量的内存可见性")]),e("p",[s._v("3.synchronized的三种应用方式")]),e("p",[s._v("https://blog.csdn.net/weixin_34239169/article/details/92730583")]),e("p",[s._v("Java中每一个对象都可以作为锁，这是synchronized实现同步的基础：")]),e("ul",[e("li",[s._v("普通同步方法（实例方法），锁是当前实例对象 ，进入同步代码前要获得当前实例的锁")]),e("li",[s._v("静态同步方法，锁是当前类的class对象，进入同步代码前要获得当前类对象的锁")]),e("li",[s._v("同步方法块，锁是括号里面的对象，对给定对象加锁，进入同步代码库前要获得给定对象的锁。")])]),e("p",[s._v("4.synchronized的作用")]),e("p",[s._v("Synchronized是Java中解决并发问题的一种最常用最简单的方法 ，他可以确保线程互斥的访问同步代码")]),e("h2",[s._v("线程通信")]),e("p",[s._v("https://blog.csdn.net/jisuanji12306/article/details/86363390")]),e("p",[s._v("方式一：使用 "),e("em",[s._v("volatile")]),s._v(" 关键字")]),e("p",[s._v("基于 "),e("em",[e("strong",[s._v("volatile")])]),s._v(" 关键字来实现线程间相互通信是使用共享内存的思想，大致意思就是多个线程同时监听一个变量，当这个变量发生变化的时候 ，线程能够感知并执行相应的业务。这也是最简单的一种实现方式")]),e("p",[s._v("方式二：使用Object类的wait() 和 notify() 方法 众所周知，Object类提供了线程间通信的方法："),e("code",{pre:!0},[s._v("wait()")]),s._v("、"),e("code",{pre:!0},[s._v("notify()")]),s._v("、"),e("code",{pre:!0},[s._v("notifyAll()")]),s._v("，它们是多线程通信的基础，而这种实现方式的思想自然是线程间通信。")]),e("p",[s._v("注意： wait和 notify必须配合synchronized使用，wait方法释放锁，notify方法不释放锁")]),e("p",[s._v("方式三：使用JUC工具类"),e("code",{pre:!0},[s._v("CountDownLatch")]),s._v(" jdk1.5之后在"),e("code",{pre:!0},[s._v("java.util.concurrent")]),s._v("包下提供了很多并发编程相关的工具类，简化了我们的并发编程代码的书写，***"),e("code",{pre:!0},[s._v("CountDownLatch")]),s._v("***基于AQS框架，相当于也是维护了一个线程间共享变量state")]),e("p",[s._v("方式四：使用"),e("code",{pre:!0},[s._v("ReentrantLock")]),s._v(" 结合 Condition")]),e("p",[s._v("方式五：基本"),e("code",{pre:!0},[s._v("LockSupport")]),s._v("实现线程间的阻塞和唤醒")]),e("p",[e("em",[e("strong",[e("code",{pre:!0},[s._v("LockSupport")])])]),s._v(" 是一种非常灵活的实现线程间阻塞和唤醒的工具，使用它不用关注是等待线程先进行还是唤醒线程先运行，但是得知道线程的名字。")]),e("h2",[s._v("原子性、可见性与有序性")]),e("p",[s._v("原文链接：https://blog.csdn.net/qq_41701956/article/details/81664921")]),e("p",[s._v("回顾下并发下应该注意操作的那些特性是什么，同时加深理解。")]),e("ul",[e("li",[e("p",[s._v("原子性(Atomicity)")]),e("p",[e("strong",[s._v("即一个操作或者多个操作，要么全部执行并且执行的过程不会被任何因素打断，要么就都不执行。原子性就像数据库里面的事务一样，他们是一个团队，同生共死。")])]),e("p",[s._v("**由 Java 内存模型来直接保证的原子性变量操作包括 read、load、assign、use、store 和 write。**大致可以认为基本数据类型的操作是原子性的。同时 lock 和 unlock 可以保证更大范围操作的原子性。而 synchronize 同步块操作的原子性是用更高层次的字节码指令"),e("code",{pre:!0},[s._v("monitorenter")]),s._v("和"),e("code",{pre:!0},[s._v("monitorexit")]),s._v("来隐式操作的。")])]),e("li",[e("p",[s._v("可见性(Visibility)")]),e("p",[s._v("**是指当一个线程修改了共享变量的值，其他线程也能够立即得知这个通知。**主要操作细节就是修改值后将值同步至主内存(volatile 值使用前都会从主内存刷新)，除了 volatile 还有 synchronize 和 final 可以保证可见性。同步块的可见性是由“对一个变量执行 unlock 操作之前，必须先把此变量同步会主内存中( store、write 操作)”这条规则获得。而 final 可见性是指：被 final 修饰的字段在构造器中一旦完成，并且构造器没有把 “this” 的引用传递出去( this 引用逃逸是一件很危险的事情，其他线程有可能通过这个引用访问到“初始化了一半”的对象)，那在其他线程中就能看见 final 字段的值。")])]),e("li",[e("p",[s._v("有序性(Ordering)")]),e("p",[s._v("**如果在线程内观察，所有操作都是有序的；如果在一个线程中观察另一个线程，所有操作都是无序的。**前半句指“线程内表现为串行的语义”，后半句是指“指令重排”现象和“工作内存与主内存同步延迟”现象。Java 语言通过 volatile 和 synchronize 两个关键字来保证线程之间操作的有序性。volatile 自身就禁止指令重排，而 synchronize 则是由“一个变量在同一时刻指允许一条线程对其进行 lock 操作”这条规则获得，这条规则决定了持有同一个锁的两个同步块只能串行的进入。")])])]),e("p",[s._v("3.1.5 先行发生原则")]),e("p",[s._v("也就是 happens-before 原则。这个原则是判断数据是否存在竞争、线程是否安全的主要依据。先行发生是 Java 内存模型中定义的两项操作之间的偏序关系。")]),e("h1",[s._v("容器相关")]),e("h2",[s._v("Hashmap的具体实现")]),e("p",[s._v("源码分析：https://blog.csdn.net/zxt0601/article/details/77413921")]),e("p",[s._v("在"),e("code",{pre:!0},[s._v("HashMap")]),s._v("中有两个很重要的参数，容量(Capacity)和负载因子(Load factor)")]),e("blockquote",[e("ul",[e("li",[e("strong",[s._v("Initial capacity")]),s._v(" The capacity is "),e("strong",[s._v("the number of buckets")]),s._v(" in the hash table, The initial capacity is simply the capacity at the time the hash table is created.")]),e("li",[e("strong",[s._v("Load factor")]),s._v(" The load factor is "),e("strong",[s._v("a measure of how full the hash table is allowed to get")]),s._v(" before its capacity is automatically increased.")])])]),e("p",[s._v("简单的说，Capacity就是buckets的数目，Load factor就是buckets填满程度的最大比例。如果对迭代性能要求很高的话不要把"),e("code",{pre:!0},[s._v("capacity")]),s._v("设置过大，也不要把"),e("code",{pre:!0},[s._v("load factor")]),s._v("设置过小。当bucket填充的数目（即"),e("code",{pre:!0},[s._v("hashmap")]),s._v("中元素的个数）大于"),e("code",{pre:!0},[s._v("capacity*load factor")]),s._v("时就需要调整buckets的数目为当前的2倍。")]),e("p",[s._v("put函数大致的思路为：")]),e("ol",[e("li",[s._v("对key的"),e("code",{pre:!0},[s._v("hashCode()")]),s._v("做hash，然后再计算index;")]),e("li",[s._v("如果没碰撞直接放到bucket里；")]),e("li",[s._v("如果碰撞了，以链表的形式存在buckets后；")]),e("li",[s._v("如果碰撞导致链表过长(大于等于TREEIFY_THRESHOLD)，就把链表转换成红黑树；")]),e("li",[s._v("如果节点已经存在就替换旧值(保证key的唯一性)")]),e("li",[s._v("如果bucket满了(超过load factor*current capacity)，就要resize。")])]),e("p",[s._v("在理解了put之后，get就很简单了。大致思路如下：")]),e("ol",[e("li",[s._v("bucket里的第一个节点，直接命中；")]),e("li",[s._v("如果有冲突，则通过"),e("code",{pre:!0},[s._v("key.equals(k)")]),s._v("去查找对应的entry 若为树，则在树中通过"),e("code",{pre:!0},[s._v("key.equals(k)")]),s._v("查找，"),e("code",{pre:!0},[s._v("O(logn)")]),s._v("； 若为链表，则在链表中通过"),e("code",{pre:!0},[s._v("key.equals(k)")]),s._v("查找，"),e("code",{pre:!0},[s._v("O(n)")]),s._v("。")])]),e("p",[s._v("之前已经提过，在获取"),e("code",{pre:!0},[s._v("HashMap")]),s._v("的元素时，基本分两步：")]),e("ol",[e("li",[s._v("首先根据"),e("code",{pre:!0},[s._v("hashCode()")]),s._v("做hash，然后确定bucket的index；")]),e("li",[s._v("如果bucket的节点的key不是我们需要的，则通过"),e("code",{pre:!0},[s._v("keys.equals()")]),s._v("在链中找。")])]),e("p",[s._v("在Java 8之前的实现中是用链表解决冲突的，在产生碰撞的情况下，进行get时，两步的时间复杂度是O(1)+O(n)。因此，当碰撞很厉害的时候n很大，O(n)的速度显然是影响速度的。")]),e("p",[s._v("因此在Java 8中，利用红黑树替换链表，这样复杂度就变成了"),e("code",{pre:!0},[s._v("O(1)+O(logn)")]),s._v("了，这样在n很大的时候，能够比较理想的解决这个问题，在"),e("a",{attrs:{href:"http://www.importnew.com/14417.html"}},[s._v("Java 8：HashMap的性能提升")]),s._v("一文中有性能测试的结果。")]),e("p",[e("strong",[s._v("Resize的实现")])]),e("p",[s._v("当put时，如果发现目前的bucket占用程度已经超过了Load Factor所希望的比例，那么就会发生resize。在resize的过程，"),e("strong",[s._v("简单的说就是把bucket扩充为2倍，之后重新计算index，把节点再放到新的bucket中")]),s._v("。")]),e("p",[s._v("大致意思就是说，当超过限制的时候会resize，然而又因为我们使用的是2次幂的扩展(指长度扩为原来2倍)，所以，元素的位置要么是在原位置，要么是在原位置再移动2次幂的位置。")]),e("p",[s._v("怎么理解呢？例如我们从16扩展为32时，具体的变化如下所示： "),e("img",{attrs:{src:a("8e35"),alt:"ceb6e6ac-d93b-11e4-98e7-c5a5a07da8c4"}})]),e("p",[s._v("因此元素在重新计算hash之后，因为n变为2倍，那么n-1的mask范围在高位多1bit(红色)，因此新的index就会发生这样的变化： "),e("img",{attrs:{src:a("d38d"),alt:"1588859468395"}})]),e("p",[s._v("**因此，我们在扩充"),e("code",{pre:!0},[s._v("HashMap")]),s._v("的时候，不需要重新计算hash，只需要看看原来的hash值新增的那个bit是1还是0就好了，**是0的话索引没变，是1的话索引变成“原索引+"),e("code",{pre:!0},[s._v("oldCap")]),s._v("”。可以看看下图为16扩充为32的resize示意图： "),e("img",{attrs:{src:a("b274"),alt:"1588859526743"}})]),e("p",[s._v("这个设计确实非常的巧妙，既省去了重新计算hash值的时间，而且同时，由于新增的1bit是0还是1可以认为是随机的，因此resize的过程，均匀的把之前的冲突的节点分散到新的bucket了。")]),e("p",[s._v("链表节点Node")]),e("p",[s._v("挂载在哈希表上的元素，链表的结构：单链表。")]),e("p",[e("strong",[s._v("每一个节点的hash值，是将key的hashCode 和 value的hashCode 异或得到的。")])]),e("p",[e("strong",[s._v("1. 什么时候会使用"),e("code",{pre:!0},[s._v("HashMap")]),s._v("？他有什么特点？")]),s._v(" 是基于Map接口的实现，存储键值对时，它可以接收null的键值，是非同步的，"),e("code",{pre:!0},[s._v("HashMap")]),s._v("存储着Entry(hash, key, value, next)对象。")]),e("p",[e("strong",[s._v("2. 你知道"),e("code",{pre:!0},[s._v("HashMap")]),s._v("的工作原理吗？")]),s._v(" 通过hash的方法，通过put和get存储和获取对象。存储对象时，我们将K/V传给put方法时，它调用"),e("code",{pre:!0},[s._v("hashCode")]),s._v("计算hash从而得到bucket位置，进一步存储，"),e("code",{pre:!0},[s._v("HashMap")]),s._v("会根据当前bucket的占用情况自动调整容量(超过"),e("code",{pre:!0},[s._v("Load Factor")]),s._v("则resize为原来的2倍)。获取对象时，我们将K传给get，它调用"),e("code",{pre:!0},[s._v("hashCode")]),s._v("计算hash从而得到bucket位置，并进一步调用equals()方法确定键值对。如果发生碰撞的时候，"),e("code",{pre:!0},[s._v("Hashmap")]),s._v("通过链表将产生碰撞冲突的元素组织起来，在Java 8中，如果一个bucket中碰撞冲突的元素超过某个限制(默认是8)，则使用红黑树来替换链表，从而提高速度。")]),e("p",[e("strong",[s._v("3. 你知道get和put的原理吗？"),e("code",{pre:!0},[s._v("equals()")]),s._v("和"),e("code",{pre:!0},[s._v("hashCode()")]),s._v("的都有什么作用？")]),s._v(" 通过对key的"),e("code",{pre:!0},[s._v("hashCode()")]),s._v("进行hashing，并计算下标( n-1 & hash)，从而获得buckets的位置。如果产生碰撞，则利用"),e("code",{pre:!0},[s._v("key.equals()")]),s._v("方法去链表或树中去查找对应的节点")]),e("p",[e("strong",[s._v("4. 你知道hash的实现吗？为什么要这样实现？")]),s._v(" 在Java 1.8的实现中，是通过**"),e("code",{pre:!0},[s._v("hashCode()")]),s._v("的高16位异或低16位实现的**："),e("code",{pre:!0},[s._v("(h = k.hashCode()) ^ (h >>> 16)")]),s._v("，主要是从速度、功效、质量来考虑的，这么做可以在bucket的n比较小的时候，也能保证考虑到高低bit都参与到hash的计算中，同时不会有太大的开销。")]),e("p",[e("strong",[s._v("5. 如果"),e("code",{pre:!0},[s._v("HashMap")]),s._v("的大小超过了负载因子(load factor)定义的容量，怎么办？")]),s._v(" 如果超过了负载因子(默认0.75)，则会重新resize一个原来长度两倍的"),e("code",{pre:!0},[s._v("HashMap")]),s._v("，并且重新调用hash方法。")]),e("h2",[s._v("HashMap和HashTable的区别")]),e("p",[s._v("https://www.cnblogs.com/williamjie/p/9099141.html")]),e("ol",[e("li",[e("p",[s._v("继承的父类不同")]),e("p",[e("code",{pre:!0},[s._v("Hashtable")]),s._v("继承自Dictionary类，而"),e("code",{pre:!0},[s._v("HashMap")]),s._v("继承自"),e("code",{pre:!0},[s._v("AbstractMap")]),s._v("类。但二者都实现了Map接口。")])]),e("li",[e("p",[s._v("线程安全性不同")])]),e("li",[e("p",[s._v("是否提供"),e("code",{pre:!0},[s._v("Contains()")]),s._v("方法")]),e("p",[s._v("前者无，table有")])]),e("li",[e("p",[s._v("hash值不同")]),e("p",[e("code",{pre:!0},[s._v("hashmap")]),s._v("重新计算，"),e("code",{pre:!0},[s._v("hashtable")]),s._v("使用对象的"),e("code",{pre:!0},[s._v("hashCode")])])]),e("li",[e("p",[s._v("内部实现使用的数组初始化和扩容方式不同")])]),e("li",[e("p",[e("code",{pre:!0},[s._v("Hashtable")]),s._v("中，key和value都不允许出现null值。在"),e("code",{pre:!0},[s._v("HashMap")]),s._v("中，null可以作为键，这样的键只有一个")])])]),e("h2",[s._v("数据储存容器类型")]),e("p",[s._v("List")]),e("p",[e("code",{pre:!0},[s._v("LinkedList")])]),e("p",[s._v("基于链表。增加、删除、修改元素方面效率比"),e("code",{pre:!0},[s._v("ArrayList")]),s._v("高 ，线程不安全")]),e("p",[e("code",{pre:!0},[s._v("ArrayList")])]),e("p",[s._v("基于数组。查询效率高，线程不安全。")]),e("p",[e("strong",[s._v("如果涉及到堆栈，队列等操作，应该考虑用List，对于需要快速插入，删除元素，应该使用"),e("code",{pre:!0},[s._v("LinkedList")]),s._v("，如果需要快速随机访问元素，应该使用"),e("code",{pre:!0},[s._v("ArrayList")]),s._v("。")])]),e("p",[e("strong",[s._v("动态容扩机制")]),s._v("：")]),e("p",[s._v("底层其实是调用了"),e("code",{pre:!0},[s._v("Arrays.copyOf")]),s._v("方法来进行扩充数组容量的。这里我们主要看一下最后一个方法newCapacity(int minCapacity)的实现。")]),e("p",[e("strong",[s._v("默认情况下，新的容量会是原容量的1.5倍，这里用了位运算提高效率")]),s._v("。一般情况下，如果扩容1.5倍后就大于期望容量，那就返回这个1.5倍旧容量的值。而如果小于期望容量，那就返回期望容量。这里对默认容量10做了特殊处理。")]),e("p",[e("strong",[s._v("使用1.5倍这个数值而不是直接使用期望容量，是为了防止频繁扩容影响性能")]),s._v("。试想如果每次add操作都要扩容一次，那性能将会非常低下。")]),e("p",[s._v("Vector")]),e("p",[s._v("非常类似"),e("code",{pre:!0},[s._v("ArrayList")]),s._v("，但是Vector是同步的。由Vector创建的Iterator，虽然和"),e("code",{pre:!0},[s._v("ArrayList")]),s._v("创建的 Iterator是同一接口，但是，因为Vector是同步的，当一个 Iterator被创建而且正在被使用，另一个线程改变了Vector的状态（例 如，添加或删除了一些元素），这时调用Iterator的方法时将抛出 "),e("code",{pre:!0},[s._v("ConcurrentModificationException")]),s._v("，因此必须捕获该异常。")]),e("p",[s._v("Stack")]),e("p",[s._v("Stack继承自Vector，实现一个后进先出的堆栈。Stack提供5个额外的方法使得Vector得以被当作堆栈使用。基本的push和 pop 方法，还有 peek 方法得到栈顶的元素，empty方法测试堆栈是否为空，search方法检测一个元素在堆栈中的位置。Stack刚创建后是空栈。")]),e("p",[s._v("Map")]),e("p",[s._v("https://blog.csdn.net/qq_30683329/article/details/80455779")]),e("p",[s._v("1、"),e("code",{pre:!0},[s._v("HashMap")])]),e("p",[s._v("使用位桶和链表实现（最近的jdk1.8改用红黑树存储而非链表），它是线程不安全的Map，方法上都没有synchronize关键字修饰，具体可以参考https://blog.csdn.net/qq_30683329/article/details/80454518")]),e("p",[s._v("2、"),e("code",{pre:!0},[s._v("HashTable")])]),e("p",[s._v("线程安全的一个map实现类，它实现线程安全的方法是在各个方法上添加了synchronize关键字。但是现在已经不再推荐使用"),e("code",{pre:!0},[s._v("HashTable")]),s._v("了，因为现在有了"),e("code",{pre:!0},[s._v("ConcurrentHashMap")]),s._v("这个专门用于多线程场景下的map实现类，其大大优化了多线程下的性能。")]),e("p",[s._v("3、"),e("code",{pre:!0},[s._v("ConcurrentHashMap")])]),e("p",[s._v("https://crossoverjie.top/2018/07/23/java-senior/ConcurrentHashMap/")]),e("p",[s._v("如果你经常参加面试，一定会被问到这个map实现类，这个map实现类是在jdk1.5中加入的，其在jdk1.6/1.7中的主要实现原理是segment段锁，它不再使用和"),e("code",{pre:!0},[s._v("HashTable")]),s._v("一样的synchronize一样的关键字对整个方法进行枷锁**，而是转而利用segment段落锁来对其进行加锁，以保证Map的多线程安全。**")]),e("p",[s._v("其实可以理解为，一个"),e("code",{pre:!0},[s._v("ConcurrentHashMap")]),s._v("是由多个"),e("code",{pre:!0},[s._v("HashTable")]),s._v("组成，所以它允许获取不用段锁的线程同时持有该资源，segment有多少个，理论上就可以同时有多少个线程来持有它这个资源。")]),e("p",[s._v("和"),e("code",{pre:!0},[s._v("HashTable")]),s._v("的区别：")]),e("blockquote",[e("p",[e("code",{pre:!0},[s._v("ConcurrentHashMap")]),s._v("是一个并发散列映射表，它允许完全并发的读取，并且支持给定数量的并发更新。 而"),e("code",{pre:!0},[s._v("HashTable")]),s._v("和同步包装器包装的"),e("code",{pre:!0},[s._v("HashMap")]),s._v("，使用一个"),e("strong",[s._v("全局的锁")]),s._v("来同步不同线程间的并发访问，同一时间点，只能有一个线程持有锁，也就是说"),e("strong",[s._v("在同一时间点，只能有一个线程能访问容器")]),s._v("，这虽然保证多线程间的安全并发访问，但同时也导致对容器的访问变成串行化的了。")])]),e("p",[s._v("总结：")]),e("blockquote",[e("p",[e("code",{pre:!0},[s._v("Hashtable")]),s._v("的任何操作都会把整个表锁住，是"),e("strong",[s._v("阻塞")]),s._v("的。好处是总能获取最实时的更新，比如说线程A调用"),e("code",{pre:!0},[s._v("putAll")]),s._v("写入大量数据，期间线程B调用get，线程B就会被阻塞，直到线程A完成"),e("code",{pre:!0},[s._v("putAll")]),s._v("，因此线程B肯定能获取到线程A写入的完整数据。坏处是所有调用都要排队，效率较低。 "),e("code",{pre:!0},[s._v("ConcurrentHashMap")]),s._v(" 是设计为"),e("strong",[s._v("非阻塞")]),s._v("的。在更新时会局部锁住某部分数据，但不会把整个表都锁住。同步读取操作则是完全非阻塞的。"),e("strong",[s._v("好处是在保证合理的同步前提下，效率很高。坏处是严格来说读取操作不能保证反映最近的更新")]),s._v("。例如线程A调用"),e("code",{pre:!0},[s._v("putAll")]),s._v("写入大量数据，期间线程B调用get，则只能get到目前为止已经顺利插入的部分数据。")])]),e("p",[s._v("Set")]),e("p",[s._v("元素不重复")]),e("p",[e("code",{pre:!0},[s._v("HashSet")]),s._v("：使用散列函数")]),e("p",[e("code",{pre:!0},[s._v("TreeSet")]),s._v("：结果排序，使用红黑树")]),e("p",[s._v("Queue")]),e("h2",[s._v("Set和List的区别")]),e("p",[s._v("① "),e("strong",[s._v("List")]),s._v("和"),e("strong",[s._v("Set")]),s._v("之间很重要的一个"),e("strong",[s._v("区别")]),s._v("是是否允许重复元素的存在，在"),e("strong",[s._v("List")]),s._v("中允许插入重复的元素，而在"),e("strong",[s._v("Set")]),s._v("中不允许重复元素存在。")]),e("p",[s._v("② 与元素先后存放顺序有关，"),e("strong",[s._v("List")]),s._v("是有序集合，会保留元素插入时的顺序，"),e("strong",[s._v("Set")]),s._v("是无序集合。")]),e("h2",[s._v("Iterator和ListIterator主要区别")]),e("ol",[e("li",[e("code",{pre:!0},[s._v("ListIterator")]),s._v("有add()方法，可以向List中添加对象，而Iterator不能")]),e("li",[e("code",{pre:!0},[s._v("ListIterator")]),s._v("和Iterator都有"),e("code",{pre:!0},[s._v("hasNext()")]),s._v("和next()方法，可以实现度顺序向问后遍历，但是"),e("code",{pre:!0},[s._v("ListIterator")]),s._v("有"),e("code",{pre:!0},[s._v("hasPrevious()")]),s._v("和previous()方法，可以实现逆向（顺序向前）遍历。但Iterator就不可以。")]),e("li",[e("code",{pre:!0},[s._v("ListIterator")]),s._v("可以定位当前的索引位置，"),e("code",{pre:!0},[s._v("nextIndex()")]),s._v("和"),e("code",{pre:!0},[s._v("previousIndex()")]),s._v("可以实现。Iterator没有此功能。")]),e("li",[s._v("都可实现删除对象，但是"),e("code",{pre:!0},[s._v("ListIterator")]),s._v("可以实现对象的修改，用set()方法可以实现。"),e("code",{pre:!0},[s._v("Iterator")]),s._v("仅能遍历，不能修改。")])]),e("h2",[s._v("entrySet()方法")]),e("p",[s._v("https://blog.csdn.net/q5706503/article/details/85122343")]),e("p",[s._v("Entry 由于Map中存放的元素均为键值对，故每一个键值对必然存在一个映射关系。 Map中采用Entry内部类来表示一个映射项，映射项包含Key和Value (我们总说键值对键值对, 每一个键值对也就是一个Entry) "),e("code",{pre:!0},[s._v("Map.Entry")]),s._v("里面包含"),e("code",{pre:!0},[s._v("getKey()")]),s._v("和"),e("code",{pre:!0},[s._v("getValue()")]),s._v("方法")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("Iterator<Map.Entry<Integer, Integer>> it=map.entrySet().iterator();\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("(it.hasNext()) {\n        Map.Entry<Integer,Integer> entry=it.next();\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" key=entry.getKey();\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("int")]),s._v(" value=entry.getValue();\n        System.out.println(key+"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" "')]),s._v("+value);\n    }\n")])]),e("p",[e("code",{pre:!0},[s._v("entrySet")]),e("code",{pre:!0},[s._v("entrySet")]),s._v("是 java中 键-值 对的集合，Set里面的类型是"),e("code",{pre:!0},[s._v("Map.Entry")]),s._v("，一般可以通过"),e("code",{pre:!0},[s._v("map.entrySet()")]),s._v("得到。")]),e("p",[e("code",{pre:!0},[s._v("entrySet")]),s._v("实现了Set接口，里面存放的是键值对。一个K对应一个V。 用来遍历map的一种方法。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("Set<Map.Entry<String, String>> entryseSet=map.entrySet();\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (Map.Entry<String, String> entry : entrySet) {\n\tSystem.out.println(entry.getKey()+"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('","')]),s._v("+entry.getValue());\n}\n")])]),e("p",[s._v("即通过"),e("code",{pre:!0},[s._v("getKey()")]),s._v("得到K，"),e("code",{pre:!0},[s._v("getValue()")]),s._v("得到V。")]),e("p",[e("code",{pre:!0},[s._v("keySet")]),s._v(" 还有一种是"),e("code",{pre:!0},[s._v("keySet")]),s._v(", "),e("code",{pre:!0},[s._v("keySet")]),s._v("是键的集合，Set里面的类型即key的类型")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("Set<String> set = map.keySet();\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (String s:set) {\n\tSystem.out.println(s+"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('","')]),s._v("+map.get(s));\n}\n")])]),e("p",[s._v("四种遍历Map方式:")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\t\n    Map<String, String> map = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" HashMap<String, String>();\n    map.put("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"1"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"value1"')]),s._v(");\n    map.put("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"2"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"value2"')]),s._v(");\n    map.put("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"3"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"value3"')]),s._v(");\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//第一种：普遍使用，二次取值")]),s._v("\n    System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"通过Map.keySet遍历key和value："')]),s._v(");\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (String key : map.keySet()) {\n        System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"key= "')]),s._v("+ key + "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" and value= "')]),s._v(" + map.get(key));\n    }\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//第二种")]),s._v("\n    System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"通过Map.entrySet使用iterator遍历key和value："')]),s._v(");\n    Iterator<Map.Entry<String, String>> it = map.entrySet().iterator();\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (it.hasNext()) {\n        Map.Entry<String, String> entry = it.next();\n        System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"key= "')]),s._v(" + entry.getKey() + "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" and value= "')]),s._v(" + entry.getValue());\n    }\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//第三种：推荐，尤其是容量大时")]),s._v("\n    System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"通过Map.entrySet遍历key和value"')]),s._v(");\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (Map.Entry<String, String> entry : map.entrySet()) {\n        System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"key= "')]),s._v(" + entry.getKey() + "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" and value= "')]),s._v(" + entry.getValue());\n    }\n\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//第四种")]),s._v("\n    System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"通过Map.values()遍历所有的value，但不能遍历key"')]),s._v(");\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" (String v : map.values()) {\n        System.out.println("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"value= "')]),s._v(" + v);\n    }\n}\n")])]),e("h2",[s._v("Collection 和 Map")]),e("ul",[e("li",[s._v("Collection "),e("ul",[e("li",[s._v("List "),e("ul",[e("li",[s._v("ArrayList")]),e("li",[s._v("LinkedList")])])]),e("li",[s._v("Set "),e("ul",[e("li",[s._v("HashSet")]),e("li",[s._v("SortedSet "),e("ul",[e("li",[s._v("TreeSet")])])])])])])]),e("li",[s._v("Map "),e("ul",[e("li",[s._v("HashMap")]),e("li",[s._v("HashTable")]),e("li",[s._v("SortedMap "),e("ul",[e("li",[s._v("TreeMap")])])])])])]),e("h1",[s._v("Java基础")]),e("h2",[s._v("Java和其他语言的区别")]),e("p",[s._v("(1)可移植性好")]),e("p",[s._v("(2)垃圾收集")]),e("p",[s._v("(3)支持多线程")]),e("p",[s._v("(4)没有指针")]),e("p",[s._v("(5)支持分布式开发")]),e("p",[s._v("(6)面向对象")]),e("p",[s._v("(7)安全、简单")]),e("h2",[s._v("Java的3个特性")]),e("p",[s._v("https://www.cnblogs.com/thelovelybugfly/p/9641367.html")]),e("p",[s._v("封装： 是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。")]),e("p",[s._v("继承： 继承是面向对象最显著的一个特性。 继承是从已有的类中派生出新的类， 新的类能吸收已有类的数据属性和行为，并能扩展新的能力。")]),e("p",[s._v("多态： 一种定义，多种实现。多态是同一个行为具有多个不同表现形式或形态的能力；是同一个接口，使用不同的实例而执行不同操作。")]),e("p",[e("img",{attrs:{src:a("8cd0"),alt:"img"}})]),e("h2",[s._v("abstract和interface区别")]),e("p",[s._v("abstract class和interface是支持抽象类定义的两种机制。")]),e("p",[s._v("A，interface实现，要用"),e("strong",[s._v("implements")]),s._v("，而abstract class的实现，要用"),e("strong",[s._v("extends")]),s._v("。 B，"),e("strong",[s._v("一个类可以实现多个interface，但一个类只能继承一个abstract class")]),s._v("。 "),e("strong",[s._v("C，interface强调特定功能的实现，而abstract class强调所属关系。")]),s._v(" D，interface是完全抽象的，只能声明public的方法，不能声明private及protected的方法，不能定义方法体，也不能声明实例变量，"),e("strong",[s._v("可以说interface是一种特殊形式的抽象类")]),s._v("。")]),e("h2",[s._v("访问权限")]),e("p",[e("em",[s._v("Java")]),s._v("中访问权限修饰词："),e("code",{pre:!0},[s._v("public")]),s._v(","),e("code",{pre:!0},[s._v("protected")]),s._v(",包访问权限（没有关键词）,"),e("code",{pre:!0},[s._v("private")])]),e("p",[e("strong",[e("code",{pre:!0},[s._v("public")]),s._v("：接口访问权限")])]),e("p",[s._v("每个编译单元中只能有一个"),e("code",{pre:!0},[s._v("public")]),s._v("类，否则编译器就不会接受，如果还有额外的类，包外面的世界是看不到这些类的，这些类主要用来为主"),e("code",{pre:!0},[s._v("public")]),s._v("类做支持。")]),e("p",[e("strong",[e("code",{pre:!0},[s._v("package")]),s._v("和"),e("code",{pre:!0},[s._v("import")]),s._v("关键字允许你做的，是将单一的全局名字空间分割开")])]),e("ul",[e("li",[e("strong",[s._v("对包使用的忠告")]),e("ul",[e("li",[s._v("必须位于其名称所指定的目录中，而该目录必须"),e("code",{pre:!0},[s._v("CLASSPATH")]),s._v("开始的目录中可以查询到的")])])])]),e("p",[e("strong",[e("code",{pre:!0},[s._v("private")]),s._v("：你无法访问")])]),e("p",[s._v("可能想控制如何创建对象，并阻止别人直接访问")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Sundae")]),s._v(" ")]),s._v("{\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Sundae")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{}\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Sundae "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("makeASundae")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Sundae();\n  }\n}\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("IceCream")]),s._v(" ")]),s._v("{\n  "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("void")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("(String[] args)")]),s._v(" ")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//! Sundae x = new Sundae();")]),s._v("\n    Sundae x = Sundae.makeASundae();\n  }\n")])]),e("p",[e("strong",[e("code",{pre:!0},[s._v("protected")]),s._v("：继承访问权限")])]),e("ul",[e("li",[s._v("把对它的访问权限赋予派生类")]),e("li",[s._v("提供"),e("strong",[s._v("包访问权限")]),s._v("，相同包内的其他类可以访问")])]),e("h2",[s._v("static关键字")]),e("p",[s._v("https://blog.csdn.net/fengyuzhengfan/article/details/38082999")]),e("ul",[e("li",[s._v("单一存储空间")]),e("li",[s._v("static域或者方法不会与包含它的类的任何对象实例关联在一起")])]),e("p",[s._v("被static修饰的成员变量和成员方法独立于该类的任何对象。也就是说，**它不依赖类特定的实例，被类的所有实例共享。**只要这个类被加载，Java虚拟机就能根据类名在运行时数据区的方法区内定找到他们。因此，static对象可以在它的任何对象创建之前访问，无需引用任何对象。")]),e("ul",[e("li",[e("p",[s._v("static方法")]),e("p",[s._v("静态方法可以直接通过类名调用，任何的实例也都可以调用，因此静态方法中不能用this和super关键字，不能直接访问所属类的实例变量和实例方法(就是不带static的成员变量和成员成员方法)，只能访问所属类的静态成员变量和成员方法。因为实例成员与特定的对象关联！因为static方法独立于任何实例，因此static方法必须被实现，而不能是抽象的abstract。")])]),e("li",[e("p",[s._v("static变量")]),e("p",[s._v("按照是否静态的对类成员变量进行分类可分两种：一种是被static修饰的变量，叫静态变量或类变量；另一种是没有被static修饰的变量，叫实例变量。两者的区别是：")]),e("p",[s._v("对于静态变量在内存中只有一个拷贝（节省内存），JVM只为静态分配一次内存，在加载类的过程中完成静态变量的内存分配，可用类名直接访问（方便），当然也可以通过对象来访问（但是这是不推荐的）。")]),e("p",[s._v("对于实例变量，没创建一个实例，就会为实例变量分配一次内存，实例变量可以在内存中有多个拷贝，互不影响（灵活）。")]),e("p",[e("strong",[s._v("什么时候使用static变量")])]),e("ul",[e("li",[s._v("对象之间需要共享值")]),e("li",[s._v("方便访问变量")])])]),e("li",[e("p",[s._v("static块")]),e("p",[s._v("每个代码块只会被执行一次。")]),e("p",[s._v("利用静态代码块可以对一些static变量进行赋值，最后再看一眼这些例子，都一个static的main方法，这样JVM在运行main方法的时候可以直接调用而不用创建实例。")])])]),e("p",[e("strong",[s._v("静态代码块和静态方法的区别是：")])]),e("p",[s._v("• 静态代码块是自动执行的;")]),e("p",[s._v("• 静态方法是被调用的时候才执行的.")]),e("p",[s._v("• 静态方法：如果我们在程序编写的时候需要一个不实例化对象就可以调用的方法，我们就可以使用静态方法")]),e("h2",[s._v("final关键字")]),e("p",[e("strong",[s._v("1、修饰类")])]),e("p",[s._v("当用final修饰一个类时，"),e("strong",[s._v("表明这个类不能被继承")]),s._v("。也就是说，如果一个类你永远不会让他被继承，就可以用final进行修饰。final类中的成员变量可以根据需要设为final，但是要注意"),e("strong",[s._v("final类中的所有成员方法都会被隐式地指定为final方法")]),s._v("。")]),e("p",[e("strong",[s._v("2、修饰方法")])]),e("p",[s._v("下面这段话摘自《Java编程思想》第四版第143页：")]),e("p",[s._v("“使用final方法的原因有两个。"),e("strong",[s._v("第一个原因是把方法锁定，以防任何继承类修改它的含义")]),s._v("；"),e("strong",[s._v("第二个原因是效率")]),s._v("。在早期的Java实现版本中，会将final方法转为内嵌调用。但是如果方法过于庞大，可能看不到内嵌调用带来的任何性能提升。在最近的Java版本中，不需要使用final方法进行这些优化了。”")]),e("p",[s._v("因此，如果只有在想明确禁止该方法在子类中被覆盖的情况下才将方法设置为final的。即"),e("strong",[s._v("父类的final方法是不能被子类所覆盖的")]),s._v("，也就是说子类是不能够存在和父类一模一样的方法的。")]),e("p",[e("strong",[s._v("3、修饰变量")])]),e("p",[s._v("修饰变量是final用得最多的地方，也是本文接下来要重点阐述的内容。")]),e("p",[s._v("final"),e("strong",[s._v("成员变量表示常量，只能被赋值一次，赋值后值不再改变。")])]),e("p",[s._v("当final修饰一个"),e("strong",[s._v("基本数据类型")]),s._v("时，表示该基本数据类型的值一旦在"),e("strong",[s._v("初始化后便不能发生变化")]),s._v("；如果final修饰一个"),e("strong",[s._v("引用类型")]),s._v("时，则在对其初始化之后便"),e("strong",[s._v("不能再让其指向其他对象")]),s._v("了，但该"),e("strong",[s._v("引用所指向的对象的内容是可以发生变化的")]),s._v("。本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。")]),e("p",[s._v("**final修饰一个成员变量（属性），必须要显示初始化。"),e("strong",[s._v("这里有两种初始化方式")]),s._v("，一种是在变量声明的时候初始化；第二种方法是在声明变量的时候不赋初值，**但是要在这个变量所在的类的所有的构造函数中对这个变量赋初值。")]),e("h2",[s._v("volatile关键字")]),e("p",[s._v("Java语言提供了一种稍弱的同步机制，即volatile变量，用来确保将变量的更新操作通知到其他线程。当把变量声明为volatile类型后，编译器与运行时都会注意到这个变量是共享的，因此不会将该变量上的操作与其他内存操作一起重排序。volatile变量不会被缓存在寄存器或者对其他处理器不可见的地方，因此在读取volatile类型的变量时总会返回最新写入的值。")]),e("p",[s._v("在访问volatile变量时不会执行加锁操作，因此也就不会使执行线程阻塞，因此"),e("strong",[s._v("volatile变量是一种比"),e("code",{pre:!0},[s._v("sychronized")]),s._v("关键字更轻量级的同步机制。")])]),e("p",[e("img",{attrs:{src:a("550e"),alt:"img"}})]),e("p",[s._v("当对非 volatile 变量进行读写的时候，"),e("strong",[s._v("每个线程先从内存拷贝变量到CPU缓存中")]),s._v("。如果计算机有多个CPU，每个线程可能在不同的CPU上被处理，这意味着每个线程可以拷贝到不同的 CPU cache 中。")]),e("p",[s._v("而声明变量是 volatile 的，"),e("strong",[s._v("JVM 保证了每次读变量都从内存中读，跳过 CPU cache 这一步。")])]),e("p",[s._v("当一个变量定义为 volatile 之后，将具备两种特性：")]),e("p",[s._v("1.保证此变量对所有的线程的"),e("strong",[s._v("可见性")]),s._v("，这里的“可见性”，如本文开头所述，当一个线程修改了这个变量的值，volatile 保证了新值能立即同步到主内存，以及每次使用前立即从主内存刷新。但普通变量做不到这点，普通变量的值在线程间传递均需要通过主内存（详见："),e("a",{attrs:{href:"http://www.cnblogs.com/zhengbin/p/6407137.html"}},[s._v("Java内存模型")]),s._v("）来完成。")]),e("p",[s._v("2."),e("strong",[s._v("禁止指令重排序优化")]),s._v("。有volatile修饰的变量，赋值后多执行了一个“load addl $0x0, (%esp)”操作，这个操作相当于一个"),e("strong",[s._v("内存屏障")]),s._v("（指令重排序时不能把后面的指令重排序到内存屏障之前的位置），只有一个CPU访问内存时，并不需要内存屏障；（什么是指令重排序：是指CPU采用了允许将多条指令不按程序规定的顺序分开发送给各相应电路单元处理）。")]),e("h2",[s._v("四种引用")]),e("p",[s._v("https://www.cnblogs.com/pascall/p/10281775.html")]),e("p",[s._v("1、强引用")]),e("p",[s._v("如果一个对象具有强引用，它就不会被垃圾回收器回收。即使当前内存空间不足，JVM也不会回收它，而是抛出 "),e("code",{pre:!0},[s._v("OutOfMemoryError")]),s._v("错误，使程序异常终止。如果想中断强引用和某个对象之间的关联，可以显式地将引用赋值为null，这样一来的话，JVM在合适的时间就会回收该对象。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("String str = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hello"')]),s._v(";    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 强引用")]),s._v("\nstr = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(";              "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 取消强引用")]),s._v("\n")])]),e("p",[s._v("2、软引用")]),e("p",[s._v("在使用软引用时，如果内存的空间足够，软引用就能继续被使用，而不会被垃圾回收器回收；只有在内存空间不足时，软引用才会被垃圾回收器回收。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("SoftReference<String> softName = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v("  SoftReference<>("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"张三"')]),s._v(");\n")])]),e("p",[s._v("3、弱引用")]),e("p",[s._v("具有弱引用的对象拥有的生命周期更短暂。因为当 JVM 进行垃圾回收，一旦发现弱引用对象，无论当前内存空间是否充足，都会将弱引用回收。不过由于垃圾回收器是一个优先级较低的线程，所以并不一定能迅速发现弱引用对象。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("WeakReference<String> weakName = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" WeakReference<String>("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hello"')]),s._v(");\n")])]),e("p",[s._v("4、虚引用")]),e("p",[s._v("顾名思义，就是形同虚设，如果一个对象仅持有虚引用，那么它相当于没有引用，在任何时候都可能被垃圾回收器回收。")]),e("p",[s._v("虚引用必须和引用队列关联使用，当垃圾回收器准备回收一个对象时，如果发现它还有虚引用，就会把这个虚引用加入到与之关联的引用队列中。程序可以通过判断引用队列中是否已经加入了虚引用，来了解被引用的对象是否将要被垃圾回收。如果程序发现某个虚引用已经被加入到引用队列，那么就可以在所引用的对象的内存被回收之前采取必要的行动。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[s._v("ReferenceQueue<String> queue = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" ReferenceQueue<String>();\nPhantomReference<String> pr = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" PhantomReference<String>("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" String("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hello"')]),s._v("), queue);\n")])]),e("h2",[s._v("类的加载过程")]),e("p",[s._v("https://blog.csdn.net/xuemengrui12/article/details/82707473")]),e("p",[s._v("https://blog.csdn.net/seanme/article/details/79466324")]),e("p",[e("img",{attrs:{src:a("ce9d"),alt:"img"}})]),e("p",[s._v("类的加载是指把类的.class文件中的数据读入到内存中，通常是创建一个字节数组读入.class文件，然后产生与所加载类对应的Class对象。加载完成后，Class对象还不完整，所以此时的类还不可用。当类被"),e("strong",[s._v("加载")]),s._v("后就进入"),e("strong",[s._v("连接")]),s._v("阶段，这一阶段包括"),e("strong",[s._v("验证、准备")]),s._v("(为静态变量分配内存并设置默认的初始值)和"),e("strong",[s._v("解析")]),s._v("(将符号引用替换为直接引用)三个步骤。最后JVM对类进行"),e("strong",[s._v("初始化")]),s._v("，包括：")]),e("p",[s._v("1)如果类存在直接的父类并且这个类还没有被初始化，那么就先初始化父类;")]),e("p",[s._v("2)如果类中存在初始化语句，就依次执行这些初始化语句。")]),e("h2",[s._v("Java数据类型")]),e("p",[s._v("基本数据类型和引用数据类型。他们最大的区别在于，引用数据类型存放的是数据所在的地址，而基本数据类型则直接存放的数据的值。")]),e("p",[e("code",{pre:!0},[s._v("byte")]),s._v(" 1字节")]),e("p",[s._v("最小值是 -128（-2^7）； 最大值是 127（2^7-1）；")]),e("p",[e("code",{pre:!0},[s._v("boolean")]),s._v(" 1比特")]),e("p",[s._v("这种类型只作为一种标志来记录 true/false 情况；")]),e("p",[e("code",{pre:!0},[s._v("short")]),s._v(" 2字节")]),e("p",[s._v("最小值是 -32768（-2^15）； 最大值是 32767（2^15 - 1）；")]),e("p",[e("code",{pre:!0},[s._v("char")]),s._v(" 2字节")]),e("p",[s._v("最小值是 \\u0000（即为0）； 最大值是 \\uffff（即为65,535）；")]),e("p",[e("code",{pre:!0},[s._v("int")]),s._v(" 4字节")]),e("p",[s._v("最小值是 -2,147,483,648（-2^31）； 最大值是 2,147,483,647（2^31 - 1）；")]),e("p",[e("code",{pre:!0},[s._v("float")]),s._v(" 4字节 单精度浮点数字长32位，尾数长度23，指数长度8,指数偏移量127； "),e("code",{pre:!0},[s._v("long")]),s._v(" 8字节")]),e("p",[s._v("最小值是 -9,223,372,036,854,775,808（-2^63）； 最大值是 9,223,372,036,854,775,807（2^63 -1）；")]),e("p",[e("code",{pre:!0},[s._v("double")]),s._v(" 8字节 双精度浮点数字长64位，尾数长度52，指数长度11，指数偏移量1023；")]),e("h3",[e("code",{pre:!0},[s._v("int")]),s._v("和"),e("code",{pre:!0},[s._v("Interger")]),s._v("的区别")]),e("p",[s._v("从上面我们就能看出"),e("code",{pre:!0},[s._v("int")]),s._v("和"),e("code",{pre:!0},[s._v("Interger")]),s._v("的区别：")]),e("ul",[e("li",[e("code",{pre:!0},[s._v("int")]),s._v("是基本数据类型，Integer是引用数据类型；")]),e("li",[e("code",{pre:!0},[s._v("int")]),s._v("默认值是0，Integer默认值是null；")]),e("li",[e("code",{pre:!0},[s._v("int")]),s._v("类型直接存储数值，"),e("code",{pre:!0},[s._v("Integer")]),s._v("需要实例化对象，指向对象的地址。")])]),e("p",[s._v("如果某个字段是非必填的，在设计该字段相关的方法时参数设计为int还是Integer？")]),e("p",[s._v("Integer，默认值是null")]),e("h3",[s._v("为什么需要包装类")]),e("p",[s._v("是为了在各种类型间转化，通过各种方法的调用。否则你无法直接通过变量转化。")]),e("h2",[s._v("单例模式")]),e("p",[s._v("https://blog.csdn.net/fly910905/article/details/79286680")]),e("p",[s._v("Java中单例(Singleton)模式是一种广泛使用的设计模式。单例模式的主要作用是保证在Java程序中，某个类只有一个实例存在。")]),e("p",[s._v("一些管理器和控制器常被设计成单例模式。")]),e("p",[s._v("单例模式好处:")]),e("blockquote",[e("ol",[e("li",[e("code",{pre:!0},[s._v("它能够避免实例对象的重复创建，不仅可以减少每次创建对象的时间开销，还可以节约内存空间；")])]),e("li",[e("code",{pre:!0},[s._v("能够避免由于操作多个实例导致的逻辑错误。")])]),e("li",[e("code",{pre:!0},[s._v("如果一个对象有可能贯穿整个应用程序，而且起到了全局统一管理控制的作用，那么单例模式也许是一个值得考虑的选择。")])])])]),e("p",[s._v("1、饿汉模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")])]),s._v("{   \n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Singleton();   \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{}    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("newInstance")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;    \n    }\n}\n")])]),e("ul",[e("li",[s._v("从代码中我们看到，类的构造函数定义为private的，保证其他类不能实例化此类，然后提供了一个静态实例并返回给调用者。饿汉模式是最简单的一种实现方式，"),e("strong",[s._v("饿汉模式在类加载的时候就对实例进行创建，实例在整个程序周期都存在")]),s._v("。")]),e("li",[s._v("它的"),e("strong",[s._v("好处")]),s._v("是只"),e("strong",[s._v("在类加载的时候创建一次实例")]),s._v("，不会存在多个线程创建多个实例的情况，"),e("strong",[s._v("避免了多线程同步的问题")]),s._v("。")]),e("li",[s._v("它的"),e("strong",[s._v("缺点")]),s._v("也很明显，即使这个单例没有用到也会被创建，而且在类加载之后就被创建，"),e("strong",[s._v("内存就被浪费")]),s._v("了。")]),e("li",[s._v("这种实现方式"),e("strong",[s._v("适合")]),s._v("单例"),e("strong",[s._v("占用内存比较小")]),s._v("，在初始化时就会被用到的情况。但是，如果单例占用的内存比较大，或单例只是在某个特定场景下才会用到，使用饿汉模式就不合适了，这时候就需要用到懒汉模式进行延迟加载。")])]),e("p",[s._v("2、懒汉模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),s._v(" ")]),s._v("{    \n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(";\n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{}    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("newInstance")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(" == instance){            \n            instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Singleton();        \n        }        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;  \n    }\n}\n")])]),e("ul",[e("li",[e("strong",[s._v("好处：懒汉模式中单例是在需要的时候才去创建的")]),s._v("，如果单例已经创建，再次调用获取接口将不会重新创建新的对象，而是直接返回之前创建的对象。")]),e("li",[s._v("**适用于：**如果某个单例使用的次数少，并且创建单例消耗的资源较多，那么就需要实现单例的按需创建，这个时候使用懒汉模式就是一个不错的选择。")]),e("li",[e("strong",[s._v("缺点："),e("strong",[s._v("但是这里的")]),s._v("懒汉模式并没有考虑线程安全问题")]),s._v("，在多个线程可能会并发调用它的"),e("code",{pre:!0},[s._v("getInstance()")]),s._v("方法，导致创建多个实例，因此"),e("strong",[s._v("需要加锁解决线程同步问题")]),s._v("，实现如下:")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),s._v(" ")]),s._v("{    \n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(";    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{}   \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("synchronized")]),s._v(" Singleton "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("newInstance")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(" == instance){  \n            "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Single Checked            ")]),s._v("\n            instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Singleton();        \n        }        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;    \n    }\n}\n")])]),e("p",[s._v("3、双重校验锁【推荐】")]),e("blockquote",[e("ol",[e("li",[e("code",{pre:!0},[s._v("这个问题在Java面试中经常被问到，但是面试官对回答此问题的满意度仅为50%。")])]),e("li",[e("code",{pre:!0},[s._v("它其实是一个用来创建线程安全的单例的老方法，当单例实例第一次被创建时它试图用单个锁进行性能优化，")])]),e("li",[e("code",{pre:!0},[s._v("但是由于太过于复杂在JDK1.4中它是失败的，我个人也不喜欢它。无论如何，即便你也不喜欢它但是还是要了解一下，因为它经常被问到。")])])])]),e("ul",[e("li",[s._v("加锁的懒汉模式看起来即解决了线程并发问题，又实现了延迟加载，然而它存在着性能问题，依然不够完美。")]),e("li",[e("strong",[s._v("synchronized修饰的同步方法比一般方法要慢很多，如果多次调用getInstance()")]),s._v("，累积的性能损耗就比较大了。")]),e("li",[s._v("因此就有了双重校验锁，先看下它的实现代码。")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),s._v(" ")]),s._v("{    \n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(";    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{}    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getInstance")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (instance == "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(") {  \n            "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Single Checked            ")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("synchronized")]),s._v(" (Singleton"),e("span",{pre:!0,attrs:{class:"hljs-class"}},[s._v("."),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(") ")]),s._v("{                \n                "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (instance == "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("null")]),s._v(") { \n                    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Double checked                    ")]),s._v("\n                    instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Singleton();               \n                }            \n            }       \n        }        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;    \n    }\n}\n")])]),e("ul",[e("li",[s._v("可以看到上面在同步代码块外多了一层instance为空的判断。由于单例对象只需要创建一次，如果后面再次调用"),e("code",{pre:!0},[s._v("getInstance()")]),s._v("只需要直接返回单例对象。")]),e("li",[s._v("因此，大部分情况下，调用"),e("code",{pre:!0},[s._v("getInstance()")]),s._v("都不会执行到同步代码块，从而提高了程序性能。")]),e("li",[s._v("不过还需要考虑一种情况，假如两个线程A、B，A执行了if (instance == null)语句，它会认为单例对象没有创建，此时线程切到B也执行了同样的语句，B也认为单例对象没有创建，然后两个线程依次执行同步代码块，并分别创建了一个单例对象。为了解决这个问题，还需要在同步代码块中增加if (instance == null)语句，也就是上面看到的代码中的校验2。")]),e("li",[s._v("双检锁隐患：")])]),e("blockquote",[e("p",[s._v("我们看到双重校验锁即实现了延迟加载，又解决了线程并发问题，同时还解决了执行效率问题，是否真的就万无一失了呢？")])]),e("p",[s._v("需要在实例属性前面加上volatile关键字，保证线程可见性，通过设置内存屏障方式禁止指令重排。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("volatile")]),s._v(" Singleton sInstance;\n")])]),e("p",[s._v("4、静态内部类【推荐】")]),e("ul",[e("li",[e("p",[s._v("除了上面的三种方式，还有另外一种实现单例的方式，通过静态内部类来实现。")])]),e("li",[e("p",[s._v("首先看一下它的实现代码：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")])]),s._v("{    \n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("SingletonHolder")])]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Singleton();    \n    }    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Singleton")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{}    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" Singleton "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("newInstance")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" SingletonHolder.instance;    \n    }\n}\n")])])]),e("li",[e("p",[s._v("这种方式同样利用了**类加载机制（ 类是由 "),e("code",{pre:!0},[s._v("JVM")]),s._v("加载，而"),e("code",{pre:!0},[s._v("JVM")]),s._v("只会加载1遍，保证只有1个单例 ）**来保证只创建一个instance实例。它与饿汉模式一样，也是利用了类加载机制，因此不存在多线程并发的问题。")])]),e("li",[e("p",[s._v("不一样的是，它是在内部类里面去创建对象实例。")])]),e("li",[e("p",[s._v("这样的话，只要应用中不使用内部类，JVM就不会去加载这个单例类，也就不会创建单例对象，从而实现懒汉式的延迟加载。也就是说这种方式"),e("strong",[s._v("可以同时保证延迟加载和线程安全")]),s._v("。")])])]),e("p",[s._v("5、枚举")]),e("img",{staticStyle:{zoom:"150%"},attrs:{src:a("d66e"),alt:"示意图"}}),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-java"}},[e("span",{pre:!0,attrs:{class:"hljs-class"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Resource")])]),s._v("{}\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("enum")]),s._v(" SomeThing {    \n    INSTANCE;    \n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" Resource instance;    \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("private")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("SomeThing")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" ")]),s._v("{        \n        instance = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Resource();    \n    }   \n    "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("public")]),s._v(" Resource "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getInstance")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{        \n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" instance;    \n    }\n}\n")])]),e("ul",[e("li",[s._v("上面的类Resource是我们要应用单例模式的资源，具体可以表现为网络连接，数据库连接，线程池等等。")]),e("li",[s._v("获取资源的方式很简单，只要 "),e("strong",[s._v("SomeThing.INSTANCE.getInstance()")]),s._v(" 即可获得所要实例。")]),e("li",[e("strong",[s._v("下面我们来看看单例是如何被保证的：")]),e("ul",[e("li",[s._v("首先，在枚举中我们"),e("strong",[s._v("明确了构造方法限制为私有")]),s._v("，在我们访问枚举实例时会执行构造方法。")]),e("li",[s._v("同时每个***枚举实例都是static final类型的***，也就表明只能被实例化一次。在调用构造方法时，我们的单例被实例化。")]),e("li",[s._v("也就是说，因为"),e("code",{pre:!0},[s._v("enum")]),s._v("中的实例被保证只会被实例化一次，所以我们的INSTANCE也被保证实例化一次。")])])])]),e("p",[s._v("6、单例模式的线程安全性")]),e("p",[s._v("首先要说的是单例模式的线程安全意味着：某个类的实例在多线程环境下只会被创建一次出来。单例模式有很多种的写法，我总结一下：")]),e("p",[s._v("（1）饿汉式：线程安全")]),e("p",[s._v("（2）懒汉式：非线程安全")]),e("p",[s._v("（3）双检锁：线程安全")]),e("p",[s._v("（4）静态内部类：线程安全")]),e("p",[s._v("（5）枚举：线程安全")]),e("h2",[s._v("序列化和反序列化")]),e("p",[s._v("Java 序列化是指把 Java 对象转换为字节序列的过程； Java 反序列化是指把字节序列恢复为 Java 对象的过程；")]),e("p",[s._v("对象的序列化主要有两种用途：")]),e("p",[s._v("1） 把对象的字节序列永久地保存到硬盘上，通常存放在一个文件中；")]),e("p",[s._v("2） 在网络上传送对象的字节序列。")]),e("h2",[s._v("反射")]),e("p",[s._v("反射是Java的特征之一，是一种间接操作目标对象的机制，核心是JVM在运行的时候才动态加载类，并且对于任意一个类，都能够知道这个类的所有属性和方法，调用方法/访问属性，不需要提前在编译期知道运行的对象是谁，他允许运行中的Java程序获取类的信息，并且可以操作类或对象内部属性。")]),e("p",[s._v("程序中对象的类型一般都是在编译期就确定下来的，而当我们的程序在运行时，可能需要动态的加载一些类，这些类因为之前用不到，所以没有加载到JVM，这时，"),e("strong",[s._v("使用Java反射机制可以在运行期动态的创建对象并调用其属性，它是在运行时根据需要才加载。")])]),e("h2",[s._v("Object类的九个方法")]),e("p",[s._v("1．clone方法")]),e("p",[s._v("保护方法，实现对象的浅复制，只有实现了Cloneable接口才可以调用该方法，否则抛出CloneNotSupportedException异常。")]),e("p",[s._v("2．getClass方法")]),e("p",[s._v("final方法，获得运行时类型。")]),e("p",[s._v("3．toString方法")]),e("p",[s._v("该方法用得比较多，一般子类都有覆盖。")]),e("p",[s._v("4．finalize方法")]),e("p",[s._v("该方法用于释放资源。因为无法确定该方法什么时候被调用，很少使用。")]),e("p",[s._v("5．equals方法")]),e("p",[s._v("该方法是非常重要的一个方法。一般equals和==是不一样的，但是在Object中两者是一样的。子类一般都要重写这个方法。")]),e("p",[e("strong",[s._v("In simple words, == checks if both objects point to the same memory location whereas .equals() evaluates to the comparison of values in the objects.")])]),e("p",[s._v("6．hashCode方法")]),e("p",[s._v("该方法用于哈希查找，重写了equals方法一般都要重写hashCode方法。这个方法在一些具有哈希功能的Collection中用到。")]),e("p",[s._v("7．wait方法")]),e("p",[s._v("wait方法就是使当前线程等待该对象的锁，当前线程必须是该对象的拥有者，也就是具有该对象的锁。wait()方法一直等待，直到获得锁或者被中断。wait(long timeout)设定一个超时间隔，如果在规定时间内没有获得锁就返回。")]),e("p",[s._v("调用该方法后当前线程进入睡眠状态，直到以下事件发生。")]),e("p",[s._v("（1）其他线程调用了该对象的notify方法。")]),e("p",[s._v("（2）其他线程调用了该对象的notifyAll方法。")]),e("p",[s._v("（3）其他线程调用了interrupt中断该线程。")]),e("p",[s._v("（4）时间间隔到了。")]),e("p",[s._v("此时该线程就可以被调度了，如果是被中断的话就抛出一个InterruptedException异常。")]),e("p",[s._v("8．notify方法")]),e("p",[s._v("该方法唤醒在该对象上等待的某个线程。")]),e("p",[s._v("9．notifyAll方法")]),e("p",[s._v("该方法唤醒在该对象上等待的所有线程。")]),e("h2",[s._v("向上/向下转型")]),e("ol",[e("li",[e("p",[s._v("父类引用指向子类对象，而子类引用不能指向父类对象。")])]),e("li",[e("p",[s._v("把子类对象直接赋给父类引用叫upcasting向上转型，向上转型不用强制转换。")])])]),e("p",[s._v("如：Father f1 = new Son();")]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("把指向子类对象的父类引用赋给子类引用叫向下转型(downcasting)，要强制转换。")])]),e("p",[s._v("如：f1 就是一个指向子类对象的父类引用。把f1赋给子类引用s1即 Son s1 = (Son)f1；")]),e("p",[s._v("其中f1前面的(Son)必须加上，进行强制转换。")]),e("h2",[s._v("String、StringBuffer、StringBuilder区别")]),e("p",[e("strong",[s._v("String类是不可变类")]),s._v("，任何对String的改变都会引发新的String对象的生成；")]),e("p",[s._v("StringBuffer则是可变类，任何对它所指代的字符串的改变都不会产生新的对象")]),e("p",[s._v("先说一下集合的故事，HashTable是线程安全的，很多方法都是synchronized方法，而HashMap不是线程安全的，但其在单线程程序中的性能比HashTable要高。StringBuffer和StringBuilder类的区别也是如此，他们的原理和操作基本相同，区别在于"),e("strong",[s._v("StringBuffer支持并发操作")]),s._v("，线程安全的，适合多线程中使用。"),e("strong",[s._v("StringBuilder不支持并发操作，线程不安全的，不适合多线程中使用。StringBuilder类在单线程中的性能比StringBuffer高。")])]),e("h2",[s._v("String类能被继承吗")]),e("p",[s._v("String 类是不能被继承的，因为他是被final关键字修饰的。")]),e("h2",[s._v("Java异常分类")]),e("img",{staticStyle:{zoom:"150%"},attrs:{src:a("3aab"),alt:"img"}}),e("h2",[s._v("java静态函数可以调用非静态成员吗")]),e("p",[s._v("用static修饰的成员是属于类的，在static的方法里可以用类名直接调用 不用statci修饰的成员是属于具体实例对象的，需要用对象名调用，且在static的方法里不可以调用。")]),e("h2",[s._v("静态函数可以被覆写吗？")]),e("p",[e("strong",[s._v("java的静态方法不能被重写。")]),s._v(" 静态成员（方法或属性）是类的成员存放在栈中，"),e("strong",[s._v("类可以直接调用")]),s._v("（是属于类的静态成员，当然对象也可以调用，只是说你可以使用而已）；"),e("strong",[s._v("实例成员是对象的成员")]),s._v("，存放在堆中，只能被对象调用。 重写的目的在于根据创造对象的所属类型不同而表现出多态。因为静态方法无需创建对象即可使用。没有对象，重写所需要的“对象所属类型” 这一要素不存在，因此无法被重写。")]),e("h2",[s._v("Jdk1.7 与Jdk1.8 的区别")]),e("p",[s._v("1.使用lambda 表达式(实现线程更方便)")]),e("p",[s._v("2.hotspot 永久带移除")]),e("p",[s._v("永久代大小不好设置, 容易造成OOM, 取而代之的是一个新的区域—— Metaspace（元数据区）。意味着不会再有java.lang.OutOfMemoryError: PermGen 问题对永久代的调优过程非常困难，永久代的大小很难确定，其中涉及到太多因素，如类的总数、常量池大小和方法数量等，而且永久代的数据可能会随着每一次Full GC 而发生移动。字符串常量池移到了堆中.")]),e("p",[s._v("而在JDK8 中，类的元数据保存在本地内存中，元空间的最大可分配空间就是系统可用内存空间，可以避免永久代的内存溢出问题，不过需要监控内存的消耗情况，一旦发生内存泄漏，会占用大量的本地内存。")]),e("p",[s._v("3.hashmap 性能优化(一个entry 下的量表若是长度大于8 则变为红黑树)")]),e("h1",[s._v("JVM")]),e("h2",[s._v("GC机制")]),e("p",[s._v("https://www.cnblogs.com/jobbible/p/9800222.html")]),e("p",[e("strong",[s._v("GC做了什么事")])]),e("p",[s._v("主要做了清理对象，整理内存的工作。"),e("strong",[s._v("Java堆分为新生代和老年代")]),s._v("，采用了不同的回收方式。（回收方式即回收算法详见后文）")]),e("p",[e("strong",[s._v("GC的对象")])]),e("p",[s._v("需要进行回收的对象就是已经没有存活的对象，"),e("strong",[s._v("判断一个对象是否存活常用的有两种办法")]),s._v("："),e("strong",[s._v("引用计数和可达分析。")])]),e("p",[s._v("（1）引用计数：每个对象有一个引用计数属性，新增一个引用时计数加1，引用释放时计数减1，计数为0时可以回收。此方法简单，无法解决对象相互循环引用的问题。")]),e("p",[s._v("（2）可达性分析（Reachability Analysis）：从GC Roots开始向下搜索，搜索所走过的路径称为引用链。当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的，即不可达对象。")]),e("p",[e("strong",[s._v("GC常用算法")])]),e("p",[s._v("GC常用算法有："),e("strong",[s._v("标记-清除算法")]),s._v("，"),e("strong",[s._v("标记-压缩算法")]),s._v("，"),e("strong",[s._v("复制算法")]),s._v("，"),e("strong",[s._v("分代收集算法。")])]),e("p",[s._v("目前主流的JVM（HotSpot）采用的是分代收集算法。")]),e("p",[e("strong",[s._v("1、标记-清除算法")])]),e("p",[s._v("为每个对象存储一个标记位，记录对象的状态（活着或是死亡）。分为两个阶段，"),e("strong",[s._v("一个是标记阶段")]),s._v("，这个阶段内，为每个对象更新标记位，检查对象是否死亡；"),e("strong",[s._v("第二个阶段是清除阶段")]),s._v("，该阶段对死亡的对象进行清除，执行 GC 操作。")]),e("p",[e("strong",[s._v("优点")]),s._v(" 最大的优点是，标记—清除算法中每个活着的对象的引用只需要找到一个即可，找到一个就可以判断它为活的。此外，更重要的是，这个算法并不移动对象的位置。")]),e("p",[e("strong",[s._v("缺点")]),s._v(" 它的缺点就是效率比较低（递归与全堆对象遍历）。每个活着的对象都要在标记阶段遍历一遍；所有对象都要在清除阶段扫描一遍，因此算法复杂度较高。没有移动对象，导致可能出现很多碎片空间无法利用的情况。")]),e("p",[e("strong",[s._v("图例")])]),e("p",[e("strong",[e("img",{attrs:{src:a("ee9b"),alt:"img"}})])]),e("p",[e("strong",[s._v("2、标记-压缩算法（标记-整理）")])]),e("p",[s._v("标记-压缩法是标记-清除法的一个改进版。同样，在标记阶段，该算法也将所有对象标记为存活和死亡两种状态；不同的是，在第二个阶段，该算法并没有直接对死亡的对象进行清理，而是将所有存活的对象整理一下，放到另一处空间，然后把剩下的所有对象全部清除。这样就达到了标记-整理的目的。")]),e("p",[e("strong",[s._v("优点")]),s._v(" 该算法不会像标记-清除算法那样产生大量的碎片空间。 "),e("strong",[s._v("缺点")]),s._v(" 如果存活的对象过多，整理阶段将会执行较多复制操作，导致算法效率降低。 "),e("strong",[s._v("图例")])]),e("p",[e("img",{attrs:{src:a("6c9f"),alt:"img"}})]),e("p",[s._v("左边是标记阶段，右边是整理之后的状态。可以看到，该算法不会产生大量碎片内存空间。")]),e("p",[e("strong",[s._v("3、复制算法")])]),e("p",[s._v("该算法将内存平均分成两部分，然后每次只使用其中的一部分，当这部分内存满的时候，将内存中所有存活的对象复制到另一个内存中，然后将之前的内存清空，只使用这部分内存，循环下去。")]),e("p",[s._v("注意： 这个算法与标记-整理算法的区别在于，该算法不是在同一个区域复制，而是将所有存活的对象复制到另一个区域内。")]),e("p",[e("strong",[s._v("优点")])]),e("p",[s._v("实现简单；不产生内存碎片")]),e("p",[e("strong",[s._v("缺点")])]),e("p",[s._v("每次运行，总有一半内存是空的，导致可使用的内存空间只有原来的一半。")]),e("p",[e("strong",[s._v("图例")]),e("img",{attrs:{src:a("d30c"),alt:"img"}})]),e("p",[e("strong",[s._v("4、分代收集算法")])]),e("p",[s._v("现在的虚拟机垃圾收集大多采用这种方式，它根据对象的生存周期，将堆分为"),e("strong",[s._v("新生代(Young)和老年代(Tenure)")]),s._v("。在新生代中，由于对象生存期短，每次回收都会有大量对象死去，那么这时就采用复制算法。老年代里的对象存活率较高，没有额外的空间进行分配担保，所以可以使用标记-整理 或者 标记-清除。")]),e("p",[s._v("具体过程："),e("strong",[s._v("新生代(Young)分为Eden区，From区与To区")])]),e("p",[e("img",{attrs:{src:a("5ead"),alt:"img"}})]),e("p",[s._v("当系统创建一个对象的时候，总是在Eden区操作，当这个区满了，那么就会触发一次*"),e("code",{pre:!0},[s._v("YoungGC")]),e("em",[s._v("，也就是")]),s._v("年轻代的垃圾回收*。一般来说这时候不是所有的对象都没用了，所以就会把还能用的对象复制到From区。")]),e("p",[e("img",{attrs:{src:a("17e9"),alt:"img"}})]),e("p",[s._v("这样整个Eden区就被清理干净了，可以继续创建新的对象，当Eden区再次被用完，就再触发一次"),e("code",{pre:!0},[s._v("YoungGC")]),s._v("，然后呢，注意，这个时候跟刚才稍稍有点区别。这次触发"),e("code",{pre:!0},[s._v("YoungGC")]),s._v("后，"),e("em",[s._v("会将Eden区与From区还在被使用的对象复制到To区")]),s._v("，")]),e("p",[e("img",{attrs:{src:a("65d9"),alt:"img"}})]),e("p",[s._v("再下一次"),e("code",{pre:!0},[s._v("YoungGC")]),s._v("的时候，则是将"),e("em",[s._v("Eden区与To区中的还在被使用的对象复制到From区")]),s._v("。")]),e("p",[e("img",{attrs:{src:a("429d"),alt:"img"}})]),e("p",[s._v("经过若干次"),e("code",{pre:!0},[s._v("YoungGC")]),s._v("后，有些对象在From与To之间来回游荡，这时候From区与To区亮出了底线（阈值），这些家伙要是到现在还没挂掉，对不起，一起滚到（复制）老年代吧。")]),e("p",[e("img",{attrs:{src:a("87a0"),alt:"img"}})]),e("p",[s._v("老年代经过这么几次折腾，也就扛不住了（空间被用完），好，那就来次集体大扫除（"),e("strong",[e("em",[s._v("Full GC")]),s._v("）")]),s._v("，也就是"),e("strong",[s._v("全量回收")]),s._v("。如果Full GC使用太频繁的话，无疑会对系统性能产生很大的影响。所以要合理设置年轻代与老年代的大小，尽量减少Full GC的操作。")]),e("p",[e("strong",[s._v("三、垃圾收集器")])]),e("p",[s._v("如果说收集算法是内存回收的方法论，垃圾收集器就是内存回收的具体实现")]),e("p",[s._v("1.Serial收集器")]),e("p",[s._v("串行收集器是最古老，最稳定以及效率高的收集器 可能会产生较长的停顿，只使用一个线程去回收 -XX:+UseSerialGC")]),e("ul",[e("li",[s._v("新生代、老年代使用串行回收")]),e("li",[s._v("新生代复制算法")]),e("li",[s._v("老年代标记-压缩")])]),e("p",[e("img",{attrs:{src:a("1e41"),alt:"img"}})]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("并行收集器")])]),e("p",[s._v("2.1 ParNew")]),e("p",[s._v("-XX:+UseParNewGC（new代表新生代，所以适用于新生代）")]),e("ul",[e("li",[s._v("新生代并行")]),e("li",[s._v("老年代串行")])]),e("p",[s._v("Serial收集器新生代的并行版本 在新生代回收时使用复制算法 多线程，需要多核支持 -XX:ParallelGCThreads 限制线程数量")]),e("p",[e("img",{attrs:{src:a("05fe"),alt:"img"}})]),e("p",[s._v("2.2 Parallel收集器")]),e("p",[s._v("类似ParNew -XX:+UseParallelOldGC")]),e("ul",[e("li",[s._v("使用Parallel收集器+ 老年代并行")])]),e("p",[e("img",{attrs:{src:a("cbf7"),alt:"img"}})]),e("h2",[s._v("CMS")]),e("p",[e("strong",[s._v("CMS收集器是一款高响应速度，低延迟优先的，采用标记--清除算法独占式的老年代收集器，CMS天生为并发而生，低延迟是它的优势。")])]),e("p",[s._v("CMS执行分为4步")]),e("ol",[e("li",[s._v("初始标记：引用程序暂停，从根集合（Roots）开始标记可达对象。")]),e("li",[s._v("并发标记：将不可达的对象标记为垃圾，此时是GC线程和工作线程同时并发工作（多处理器就是并行工作），但是很有可能前面不是垃圾后面又变成了垃圾。")]),e("li",[s._v("再次标记：STW（stop-the-world）使程序暂停再次扫描roots进行标记。")]),e("li",[s._v("并发清除：并发/并行释放掉无用对象。")])]),e("h2",[s._v("G1")]),e("p",[s._v("G1会跟踪各个Region里面的垃圾堆积的价值大小（回收所获得的的空间大小以及回收所需时间的经验值），在后台维护一个"),e("strong",[s._v("优先列表")]),s._v("，每次根据允许的收集时间，优先回收价值最大的Region，这也是Garbage-first名字的由来。G1的这种特性，保证了G1能在有限的时间内可以获取尽可能高的回收效率。")]),e("h2",[s._v("Java 内存区域与内存溢出异常")]),e("p",[s._v("https://blog.csdn.net/qq_41701956/article/details/81664921")]),e("p",[s._v("1.1 运行时数据区域 根据《Java 虚拟机规范(Java SE 7 版)》规定，Java 虚拟机所管理的内存如下图所示。")]),e("p",[e("img",{attrs:{src:a("97fa"),alt:"img"}})]),e("p",[s._v("现在用一张图来介绍每个区域存储的内容。")]),e("p",[e("img",{attrs:{src:a("ab97"),alt:"img"}})]),e("p",[s._v("1.2.3 对象的访问定位")]),e("blockquote",[e("p",[s._v("使用对象时，通过栈上的 reference 数据来操作堆上的具体对象。")])]),e("p",[s._v("通过句柄（handle）访问")]),e("blockquote",[e("p",[s._v("Java 堆中会分配一块内存作为句柄池。reference 存储的是句柄地址。详情见图。")])]),e("p",[e("img",{attrs:{src:a("b9b3"),alt:"img"}})]),e("p",[s._v("使用直接指针访问")]),e("p",[s._v("reference 中直接存储对象地址")]),e("p",[e("img",{attrs:{src:a("6fe8"),alt:"img"}})]),e("p",[s._v("比较：使用句柄的最大好处是 reference 中存储的是稳定的句柄地址，在对象移动(GC)是只改变实例数据指针地址，reference 自身不需要修改。直接指针访问的最大好处是速度快，节省了一次指针定位的时间开销。"),e("strong",[s._v("如果是对象频繁 GC 那么句柄方法好，如果是对象频繁访问则直接指针访问好。")])]),e("h1",[s._v("杂")]),e("h2",[s._v("RxJava")]),e("p",[s._v("响应式编程")]),e("h2",[s._v("设计准则")]),e("ol",[e("li",[e("p",[s._v("单一职能原则：就一个类而言，应该仅有一个引起它变化的原因。通俗的说，即一个类只负责一项职责。")])]),e("li",[e("p",[s._v("里氏替换原则：子类型必须可以替换掉它们的父类型。子类可以扩展父类的功能，但不能改变父类原有的功能。")])]),e("li",[e("p",[s._v("依赖倒置原则")]),e("p",[s._v("（1）高层模块不应该依赖于低层模块，2个都应该依赖于抽象。")]),e("p",[s._v("（2）抽象不应该依赖于细节，细节应该依赖抽象。")])]),e("li",[e("p",[s._v("接口隔离原则")]),e("p",[s._v("客户端不应该依赖它不需要的接口；一个类对另一个类的依赖应该建立在最小的接口上。")])]),e("li",[e("p",[s._v("迪米特原则（最少知识原则） 如果2个类不必彼此直接通信，那么这2个类不应当发生直接的相互作用，如果其中的一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。前提是在类的结构设计上，每一个类都应该尽量降低成员的访问权限。")])])]),e("p",[s._v("迪米特原则的根本在于强调了类之间的松耦合。类之间的耦合越弱，越有利于复用，一个处在弱耦合的类被修改，不会对有关系的类造成波及。")]),e("ol",{attrs:{start:"6"}},[e("li",[e("p",[s._v("开放-封闭原则")]),e("p",[s._v("软件实体（类，模块，函数）应该可以扩展，但是不可以修改。即对于扩展是开放的，对于更改是封闭的。")])])]),e("h2",[s._v("局部性原理")]),e("p",[s._v("在CPU访问寄存器时，无论是存取数据抑或存取指令，都趋于聚集在一片连续的区域中，这就被称为局部性原理。")]),e("p",[s._v("时间局部性（temporal locality）：被引用过一次的存储器位置在未来会被多次引用（通常在循环中）。")]),e("p",[s._v("空间局部性（spatial locality） ：如果一个存储器的位置被引用，那么将来他附近的位置也会被引用。")]),e("h2",[s._v("堆和栈的区别")]),e("p",[s._v("堆与栈的区别有：")]),e("ul",[e("li",[s._v("栈内存存储的是局部变量而堆内存是实体")]),e("li",[s._v("栈内存的更新速度高于堆内存")]),e("li",[s._v("栈内存的生命周期一结束就会被释放而堆内存会被垃圾回收机制不定时回收")])]),e("h2",[s._v("jdk和jre的区别")]),e("p",[e("strong",[s._v("一句话概述")]),s._v("： "),e("strong",[s._v("JDK")]),s._v("是Java的开发工具，它不仅提供了Java程序运行所需的JRE，还提供了一系列的编译，运行等工具，如javac，java，javaw等。 "),e("strong",[s._v("JRE")]),s._v("只是Java程序的运行环境，它最核心的内容就是JVM（Java虚拟机）及核心类库。")]),e("p",[e("strong",[s._v("一张总览图：")])]),e("p",[e("img",{attrs:{src:a("74cf"),alt:"这里写图片描述"}})]),e("h2",[s._v("javahome和classpath是啥")]),e("p",[s._v("javahome是JDK的安装目录")]),e("p",[s._v("classpath是告诉java虚拟机(jvm)要使用或执行的*.class文件放在什么地方")]),e("h2",[s._v("jar包是什么")]),e("p",[s._v("jar包就是别人已经写好的一些类，然后将这些类进行打包，你可以将这些jar包引入你的项目中，然后就可以直接使用这些jar包中的类和属性以及方法。")]),e("p",[s._v("JAR（Java ARchive）是将一系列文件合并到单个压缩文件里，就象Zip那样。然而，同Java中其他任何东西一样，JAR文件是跨平台的，所以不必关心涉及具体平台的问题。涉及因特网应用时，JAR文件显得特别有用。在JAR文件之前，Web浏览器必须重复多次请求Web服务器，以便下载完构成一个“程序片”（Applet）的所有文件。除此以外，每个文件都是未经压缩的。但在将所有这些文件合并到一个JAR文件里以后，只需向远程服务器发出一次请求即可。同时，由于采用了压缩技术，所以可在更短的时间里获得全部数据。")]),e("p",[s._v("JAR（Java ARchive）是将一系列文件合并到单个压缩文件里，就象Zip那样。然而，同Java中其他任何东西一样，JAR文件是跨平台的，所以不必关心涉及具体平台的问题。 "),e("strong",[s._v("涉及因特网应用时")]),s._v("，JAR文件显得特别有用。在JAR文件之前，Web浏览器必须重复多次请求Web服务器，以便下载完构成一个“程序片”（Applet）的所有文件。除此以外，每个文件都是未经压缩的。但在将所有这些文件合并到一个JAR文件里以后，只需向远程服务器发出一次请求即可。同时，由于采用了压缩技术，所以可在更短的时间里获得全部数据。")])])}],bs={},Ss=Object(i["a"])(bs,ks,fs,!1,null,null,null),Cs=Ss.exports,Es={name:"articles",data:function(){return{showDonate:!1,comments:[],menus:[]}},components:{Banner:l["a"],sectionTitle:n["a"],menuTree:h,schemer:g,domain_driven_design:b,high_quality_mysql:P,computer_network:x,mythical_man_month:R,think_in_java:U,javascript_programming_design:G["default"],git_instruction:Q,data_structure_points:ss,database_points:ls,system_structure_points:cs,network_points:js,android_points:ws,java_points:Cs},methods:{fetchH:function(s,t,a){return a?s.filter((function(s){return s.offsetTop>t&&s.offsetTop<a})):s.filter((function(s){return s.offsetTop>t}))}},computed:{currentArticle:function(){return this.$route.params.description}},mounted:function(){},created:function(){}},Ts=Es,Ps=(a("479c"),Object(i["a"])(Ts,e,r,!1,null,"c09de154",null));t["default"]=Ps.exports},"2a9e":function(s,t,a){s.exports=a.p+"img/image-20201203133902014.45ee2fff.png"},"2ab6":function(s,t,a){s.exports=a.p+"img/20130519103522884.3c7ac092.png"},"3aab":function(s,t,a){s.exports=a.p+"img/8100269-16e3cde22155e7b9.726c7706.webp"},"429d":function(s,t,a){s.exports=a.p+"img/1489669-20181016194236007-1428408352.0b75c70a.png"},"479c":function(s,t,a){"use strict";var e=a("543d"),r=a.n(e);r.a},"543d":function(s,t,a){},"550e":function(s,t,a){s.exports=a.p+"img/731716-20160708224602686-2141387366.0124e886.png"},"59a7":function(s,t,a){s.exports=a.p+"img/2019-03-21-05.8a3acbdb.gif"},"5ad7":function(s,t,a){"use strict";var e=a("d2d9"),r=a("5bf9"),l=a("2877"),n=Object(l["a"])(r["default"],e["a"],e["b"],!1,null,null,null);t["default"]=n.exports},"5bf9":function(s,t,a){"use strict";var e=a("1eb9"),r=a.n(e);t["default"]=r.a},"5d61":function(s,t,a){s.exports=a.p+"img/20180212172050357.9b180287.png"},"5e7a":function(s,t,a){s.exports=a.p+"img/1657927364899067.a35cada9.png"},"5ead":function(s,t,a){s.exports=a.p+"img/1489669-20181016194033050-1554933093.0dca05dc.png"},"60ef":function(s,t,a){s.exports=a.p+"img/20130519103644850.3f142193.png"},6435:function(s,t,a){s.exports=a.p+"img/20200404115217-1585972362534.9ae020eb.png"},"65d9":function(s,t,a){s.exports=a.p+"img/1489669-20181016194207606-298577682.f5335a73.png"},6721:function(s,t,a){s.exports=a.p+"img/20130519103507462.809df1dc.png"},"6c9f":function(s,t,a){s.exports=a.p+"img/1489669-20181016192808209-1144011671.62de1200.png"},"6fe8":function(s,t,a){s.exports=a.p+"img/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxNy85LzQvZGU2OTI0YjZlOWQ1NzYxMDViYTI0NzAwZjFmMzU3ZjQ_aW1hZ2VWaWV3Mi8wL3cvMTI4MC9oLzk2MC9mb3JtYXQvd2VicC9pZ25vcmUtZXJyb3IvMQ.72316b82.jpg"},"74cf":function(s,t,a){s.exports=a.p+"img/20171221220833133.1df2b478.jpg"},"7c8c":function(s,t,a){s.exports=a.p+"img/2019-03-21-03.1979371e.png"},"7d4c":function(s,t,a){},"7da4":function(s,t,a){},"87a0":function(s,t,a){s.exports=a.p+"img/1489669-20181016194302974-1844734331.b82e3984.png"},"87a2":function(s,t,a){s.exports=a.p+"img/12239817-57bb34bbf201853d.b35218cf.webp"},"8cd0":function(s,t,a){s.exports=a.p+"img/dt-java.cab7c6b8.png"},"8e35":function(s,t,a){s.exports=a.p+"img/ceb6e6ac-d93b-11e4-98e7-c5a5a07da8c4.da2df9ad.png"},"925b":function(s,t,a){"use strict";var e=a("7d4c"),r=a.n(e);r.a},9338:function(s,t,a){s.exports=a.p+"img/1588860411793.9b5e6c44.png"},9584:function(s,t,a){s.exports=a.p+"img/1657927364864917.cca1ebad.png"},"97fa":function(s,t,a){s.exports=a.p+"img/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxNy85LzQvZGQzYjE1YjNkODgyNmZhZWFlMjA2Mzk3NmZiOTkyMTM_aW1hZ2VWaWV3Mi8wL3cvMTI4MC9oLzk2MC9mb3JtYXQvd2VicC9pZ25vcmUtZXJyb3IvMQ.c47bda0f.jpg"},"98e4":function(s,t,a){s.exports=a.p+"img/20190326213110947.140f28fa.png"},a6ce:function(s,t,a){s.exports=a.p+"img/2019051322063483.8e0077f8.png"},aae3:function(s,t,a){s.exports=a.p+"img/20180325155718314.e8938e2a.png"},ab97:function(s,t,a){s.exports=a.p+"img/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxNy85LzQvZGE3N2Q5MDE0Njc4NmMwY2IzZTE3MGI5YzkzNzZhZTQ_aW1hZ2VWaWV3Mi8wL3cvMTI4MC9oLzk2MC9mb3JtYXQvd2VicC9pZ25vcmUtZXJyb3IvMQ.02a44dd3.jpg"},b13e:function(s,t,a){s.exports=a.p+"img/background.51110489.jpg"},b274:function(s,t,a){s.exports=a.p+"img/1588859526743.3c6507d5.png"},b7c3:function(s,t,a){s.exports=a.p+"img/1589330855603.bf4c084b.png"},b9ad:function(s,t,a){"use strict";var e=function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{class:{"home-banner":s.isHome},attrs:{id:"banner"}},[e("div",{staticClass:"banner-img",style:{"background-image":"url("+s.src+")"}},[s.isHome?[e("div",{staticClass:"focusinfo"},[e("div",{staticClass:"header-tou"},[e("router-link",{attrs:{to:"/"}},[e("img",{attrs:{src:a("f588")}})])],1),e("div",{staticClass:"header-info"},[e("p",[s._v(s._s(s.websiteInfo.slogan))])]),e("div",{staticClass:"top-social"},s._l(s.socials,(function(s){return e("div",{key:s.id,attrs:{title:s.title}},[e("a",{style:{color:s.color},attrs:{href:s.href,target:"_blank"}},[e("i",{staticClass:"iconfont",class:s.icon})])])})),0)]),e("div",{staticClass:"slant-left"}),e("div",{staticClass:"slant-right"})]:s._e()],2)])},r=[],l=a("b13e"),n=a.n(l),v={name:"banner",data:function(){return{websiteInfo:{},socials:[]}},props:{src:{type:String,default:n.a},isHome:{type:[Boolean,String],default:!1}},created:function(){this.getWebSiteInfo(),this.getSocial()},methods:{getSocial:function(){var s=this;this.$store.dispatch("getSocials").then((function(t){s.socials=t}))},getWebSiteInfo:function(){var s=this;this.$store.dispatch("getSiteInfo").then((function(t){s.websiteInfo=t}))}}},p=v,_=(a("d34d"),a("2877")),c=Object(_["a"])(p,e,r,!1,null,"a3acc41c",null);t["a"]=c.exports},b9b3:function(s,t,a){s.exports=a.p+"img/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAxNy85LzQvZWJmMDBlZDI2YzM1YWVmZDkzZDVhM2EzNmIzYjE2MTM_aW1hZ2VWaWV3Mi8wL3cvMTI4MC9oLzk2MC9mb3JtYXQvd2VicC9pZ25vcmUtZXJyb3IvMQ.cdba1554.jpg"},c63c:function(s,t,a){s.exports=a.p+"img/1606614688813.180e5561.png"},c786:function(s,t,a){s.exports=a.p+"img/2019-03-21-02.4aec35fd.gif"},cbf7:function(s,t,a){s.exports=a.p+"img/1489669-20181016195404250-2142909553.0a451423.png"},ce9d:function(s,t,a){s.exports=a.p+"img/20180310095529563.65fe8efc.png"},d2d9:function(s,t,a){"use strict";a.d(t,"a",(function(){return e})),a.d(t,"b",(function(){return r}));var e=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("section",[e("p",[s._v("1 JavaScript简介")]),e("p",[e("img",{attrs:{src:a("f49a"),alt:"1599376927172"}})]),e("ul",[e("li",[e("p",[s._v("ECMAScript")]),e("p",[s._v("ECMA-262定义的ECMAScript和Web浏览器没有依赖关系。")])]),e("li",[e("p",[s._v("DOM（文档对象模型）")]),e("p",[s._v("DOM把整个页面映射为一个多层节点结构，")]),e("p",[s._v("通过DOM 创建的这个表示文档的树形图，开发人员获得了控制页面内容和结构的主动权。借助DOM 提供的API，开发人员可以轻松自如地删除、添加、替换或修改任何节点。")]),e("p",[s._v("DOM并不只是针对JS的")])]),e("li",[e("p",[s._v("BOM（浏览器对象模型）")]),e("p",[s._v("开发人员使用BOM 可以控制浏览器显示的页面以外的部分。")])])]),e("h1",[s._v("2 在HTML 中使用JavaScript")]),e("h2",[s._v("script元素")]),e("p",[s._v("使用"),e("code",{pre:!0},[s._v("script")]),s._v("元素的方式有两种：直接在页面中嵌入JavaScript 代码和包含外部JavaScript文件。")]),e("p",[s._v("无论如何包含代码，只要不存在defer 和async 属性，浏览器都会按照"),e("code",{pre:!0},[s._v("script")]),s._v("元素在页面中出现的先后顺序对它们依次进行解析。")]),e("h1",[s._v("3 基本概念")]),e("h2",[s._v("语法")]),e("p",[s._v("严格模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("doSomething")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"use strict"')]),s._v(";\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// body")]),s._v("\n}\n")])]),e("p",[e("strong",[s._v("双逻辑非")]),s._v("：双重非（"),e("code",{pre:!0},[s._v("!!")]),s._v("）运算符")]),e("p",[s._v("可能使用双重非运算符的一个场景，是"),e("strong",[s._v("显式地将任意值强制转换为其对应的"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures#%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B"}},[s._v("布尔值")])]),s._v('。这种转换是基于被转换值的 "truthyness" 和 "falsyness"的（参见 '),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy"}},[s._v("truthy")]),s._v(" 和 "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Falsy"}},[s._v("falsy")]),s._v("）。")]),e("p",[s._v("同样的转换可以通过 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"}},[s._v("Boolean")]),s._v(" 函数完成。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("n1 = !!"),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// !!truthy 返回 true")]),s._v("\nn2 = !!{}                     "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// !!truthy 返回 true: 任何 对象都是 truthy 的…")]),s._v("\nn3 = !!("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Boolean")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("))   "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// …甚至 .valueOf() 返回 false 的布尔值对象也是！")]),s._v("\nn4 = !!"),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v("                  "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// !!falsy 返回 false")]),s._v("\nn5 = !!"),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v("                     "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// !!falsy 返回 false")]),s._v("\nn6 = !!"),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Boolean")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(")         "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// !!falsy 返回 false")]),s._v("\n")])]),e("h2",[s._v("变量")]),e("p",[s._v("虽然我们不建议修改变量所保存值的类型，但这种操作在ECMAScript 中完全有效。")]),e("p",[s._v("用var操作符定义的变量将成为定义该变量的作用域中的局部变量")]),e("p",[s._v("虽然省略var 操作符可以定义全局变量，但这也不是我们推荐的做法。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("test")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\tmessage = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"hi"')]),s._v("; "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 全局变量")]),s._v("\n}\ntest();\nalert(message); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('// "hi"')]),s._v("\n")])]),e("h2",[s._v("数据类型")]),e("p",[s._v("Undefined、Null、Boolean、Number和String。")]),e("ul",[e("li",[e("p",[s._v("在使用var 声明变量但未对其加以初始化时，这个变量的值就是undefined")])]),e("li",[e("p",[s._v("null值表示一个空对象指针，undefined值是派生自null值的")])])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("alert("),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(" == "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// true")]),s._v("\n")])]),e("ul",[e("li",[e("p",[s._v("浮点数值")]),e("p",[s._v("永远不要测定某个特定的浮点数值，这是使用基于IEEE754 数值的浮点计算的通病")])]),e("li",[e("p",[s._v("数值范围")]),e("p",[s._v("Infinity不是能够参与计算的数值")])]),e("li",[e("p",[s._v("NaN（一个特殊的"),e("strong",[s._v("数值")]),s._v("）")]),e("p",[s._v("在ECMAScript 中，任何数值除以0会返回NaN，")]),e("p",[s._v("NaN 本身有两个非同寻常的特点。")]),e("p",[s._v("首先，任何涉及NaN 的操作（例如NaN/10）都会返回NaN，这个特点在多步计算中有可能导致问题。")]),e("p",[s._v("其次，NaN 与任何值都不相等，包括NaN 本身。例如，下面的代码会返回false：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("alert("),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("NaN")]),s._v(" == "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("NaN")]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//false")]),s._v("\n")])])])]),e("h2",[s._v("语句")]),e("ul",[e("li",[e("p",[s._v("with语句")]),e("p",[s._v("with 语句的作用是将代码的作用域设置到一个特定的对象中")]),e("p",[s._v("定义with 语句的目的主要是为了简化多次编写同一个对象的工作")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" qs = location.search.substring("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" hostName = location.hostname;\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" url = location.href;\n\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 上面几行代码都包含location 对象。如果使用with 语句，可以把上面的代码改写成如下所示：")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("with")]),s._v("(location){\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" qs = search.substring("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" hostName = hostname;\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" url = href;\n}\n")])]),e("p",[s._v("==使用with语句会使得性能下降，大型项目中不建议使用==")])])]),e("h1",[s._v("4 作用域")]),e("h2",[s._v("没有块级作用域")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(") {\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" color = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"blue"')]),s._v(";\n}\nalert(color); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"blue"')]),s._v("\n")])]),e("p",[s._v("这里是在一个if 语句中定义了变量color。如果是在C、C++或Java 中，color 会在if 语句执行完毕后被销毁。但在JavaScript 中，if 语句中的变量声明会将变量添加到当前的执行环境（在这里是全局环境）中。")]),e("p",[e("strong",[s._v("模仿块级作用域")])]),e("p",[s._v("JavaScript 从来不会告诉你是否多次声明了同一个变量；遇到这种情况，它只会对后续的声明视而不见（不过，它会执行后续声明中的变量初始化）。匿名函数可以用来模仿块级作用域并避免这个问题。")]),e("p",[s._v("用作块级作用域（通常称为私有作用域）的匿名函数的语法如下所示。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//这里是块级作用域")]),s._v("\n})();\n")])]),e("h2",[s._v("声明变量")]),e("p",[s._v("使用var 声明的变量会自动被添加到最接近的环境中")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("add")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("num1, num2")]),s._v(") ")]),s._v("{\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" sum = num1 + num2;\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" sum;\n}\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" result = add("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20")]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//30")]),s._v("\nalert(sum); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//由于sum 不是有效的变量，因此会导致错误")]),s._v("\n")])]),e("p",[s._v("如果省略这个例子中的var 关键字，那么当add()执行完毕后，sum 也将可以访问到：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("add")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("num1, num2")]),s._v(") ")]),s._v("{\n\tsum = num1 + num2;\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" sum;\n}\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" result = add("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("20")]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//30")]),s._v("\nalert(sum); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//30")]),s._v("\n")])]),e("h1",[s._v("5 引用类型")]),e("h2",[s._v("Array类型")]),e("h3",[s._v("栈")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" colors = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v("(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 创建一个数组")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" count = colors.push("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"red"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"green"')]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 推入两项")]),s._v("\nalert(count); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//2")]),s._v("\ncount = colors.push("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"black"')]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 推入另一项")]),s._v("\nalert(count); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" item = colors.pop(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 取得最后一项")]),s._v("\nalert(item); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"black"')]),s._v("\nalert(colors.length); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//2")]),s._v("\n")])]),e("h3",[s._v("队列")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" colors = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v("(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建一个数组")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" count = colors.push("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"red"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"green"')]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//推入两项")]),s._v("\nalert(count); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//2")]),s._v("\ncount = colors.push("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"black"')]),s._v("); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//推入另一项")]),s._v("\nalert(count); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//3")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" item = colors.shift(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//取得第一项")]),s._v("\nalert(item); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"red"')]),s._v("\nalert(colors.length); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//2")]),s._v("\n")])]),e("h3",[s._v("重排序方法")]),e("p",[s._v("即使数组中的每一项都是数值，sort()方法比较的也是字符串，如下所示。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" values = ["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("15")]),s._v("];\nvalues.sort();\nalert(values); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//0,1,10,15,5")]),s._v("\n")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("compare")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value1, value2")]),s._v(")")]),s._v("{\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" value2 - value1;\n}\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" values = ["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("15")]),s._v("];\nvalues.sort(compare);\nalert(values); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 15,10,5,1,0")]),s._v("\n")])]),e("h3",[s._v("splice()")]),e("p",[s._v("下面我们来介绍splice()方法，这个方法恐怕要算是最强大的数组方法了，它有很多种用法。 splice()的主要用途是向数组的中部插入项，但使用这种方法的方式则有如下3 种。")]),e("ul",[e("li",[s._v("删除：可以删除任意数量的项，只需指定2 个参数：要删除的第一项的位置和要删除的项数。 例如，splice(0,2)会删除数组中的前两项。")]),e("li",[s._v('插入：可以向指定位置插入任意数量的项，只需提供3 个参数：起始位置、0（要删除的项数） 和要插入的项。如果要插入多个项，可以再传入第四、第五，以至任意多个项。例如， splice(2,0,"red","green")会从当前数组的位置2 开始插入字符串"red"和"green"。')]),e("li",[s._v('替换：可以向指定位置插入任意数量的项，且同时删除任意数量的项，只需指定3 个参数：起 始位置、要删除的项数和要插入的任意数量的项。插入的项数不必与删除的项数相等。例如， splice (2,1,"red","green")会删除当前数组位置2 的项，然后再从位置2 开始插入字符串 "red"和"green"。')])]),e("h3",[s._v("迭代方法")]),e("p",[s._v("传入这些方法中的函数会接收三个参数：数组项的值、该项在数组中的位置和数组对象本身")]),e("ul",[e("li",[s._v("every()：对数组中的每一项运行给定函数，如果该函数对每一项都返回true，则返回true。")]),e("li",[s._v("filter()：对数组中的每一项运行给定函数，返回该函数会返回true 的项组成的数组。")]),e("li",[s._v("forEach()：对数组中的每一项运行给定函数。这个方法没有返回值。")]),e("li",[s._v("map()：对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组。")]),e("li",[s._v("some()：对数组中的每一项运行给定函数，如果该函数对任一项返回true，则返回true。")])]),e("h3",[s._v("归并方法")]),e("p",[s._v("接收4 个参数：前一个值、当前值、项的索引和数组对象。这个函数返回的任何值都会作为第一个参数自动传给下一项")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" values = ["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(","),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v("];\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" sum = values.reduce("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("prev, cur, index, array")]),s._v(")")]),s._v("{\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" prev + cur;\n});\nalert(sum); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//15")]),s._v("\n")])]),e("h3",[s._v("函数内部属性")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("factorial")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("num")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (num <="),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") {\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n    } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" num * factorial(num"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1")]),s._v(")\n    }\n}\t\n")])]),e("p",[s._v("改为：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("factorial")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("num")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (num <="),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(") {\n    \t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\n    } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n   \t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" num * "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(".callee(num"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1")]),s._v(")\n    }\n}\t\n")])]),e("p",[s._v("在这个重写后的factorial()函数的函数体内，没有再引用函数名factorial。这样，无论引用函数时使用的是什么名字，都可以保证正常完成递归调用。")]),e("p",[s._v("==函数的名字仅仅是一个包含指针的变量而已==")]),e("h1",[s._v("6 面向对象的程序设计")]),e("h2",[s._v("创建对象")]),e("ul",[e("li",[e("p",[s._v("工厂模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("createPerson")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name, age, job")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" o = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v("();\n    o.name = name;\n    o.age = age;\n    o.job = job;\n    o.sayName = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    alert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n};\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" o;\n}\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person1 = createPerson("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Software Engineer"')]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person2 = createPerson("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Greg"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("27")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Doctor"')]),s._v(");\n")])])]),e("li",[e("p",[s._v("构造函数模式")]),e("p",[s._v("使用构造函数的主要问题，就是每个方法都要在每个实例上重新创建一遍。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Person")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name, age, job")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".age = age;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".job = job;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".sayName = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    alert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n};\n}\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person1 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Person("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Software Engineer"')]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person2 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Person("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Greg"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("27")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Doctor"')]),s._v(");\n")])])]),e("li",[e("p",[s._v("原型模式")]),e("p",[s._v("理解原型对象：无论什么时候，只要创建了一个新函数，就会根据一组特定的规则为该函数创建一个prototype 属性，这个属性指向函数的原型对象。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Person")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n}\nPerson.prototype.name = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(";\nPerson.prototype.age = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(";\nPerson.prototype.job = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Software Engineer"')]),s._v(";\nPerson.prototype.sayName = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\nalert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n};\n\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person1 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Person();\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person2 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Person();\nperson1.name = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Greg"')]),s._v(";\nalert(person1.name); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Greg"——来自实例')]),s._v("\nalert(person2.name); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Nicholas"——来自原型')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("delete")]),s._v(" person1.name;\nalert(person1.name); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Nicholas"——来自原型')]),s._v("\n")])]),e("p",[s._v("更简单的原型语法：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Person")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n}\nPerson.prototype = {\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(",\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("age")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(",\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("job")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Software Engineer"')]),s._v(",\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("sayName")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    \talert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n\t}\n};\t\n")])]),e("p",[s._v("问题：原型模式的最大问题是由其共享的本性所导致的。")])]),e("li",[e("p",[e("strong",[s._v("组合使用构造函数模式和原型模式（推荐）")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Person")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name, age, job")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".age = age;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".job = job;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".friends = ["),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Shelby"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Court"')]),s._v("];\n}\nPerson.prototype = {\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("constructor")]),s._v(" : Person,\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("sayName")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    \talert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n\t}\n}\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person1 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Person("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Software Engineer"')]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" person2 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Person("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Greg"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("27")]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Doctor"')]),s._v(");\nperson1.friends.push("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Van"')]),s._v(");\nalert(person1.friends); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Shelby,Count,Van"')]),s._v("\nalert(person2.friends); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Shelby,Count"')]),s._v("\nalert(person1.friends === person2.friends); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//false")]),s._v("\nalert(person1.sayName === person2.sayName); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//true")]),s._v("\n")])])]),e("li",[e("p",[s._v("动态原型模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Person")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name, age, job")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//属性")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".age = age;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".job = job;\t\n    \n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 方法")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".sayName != "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"function"')]),s._v(") {\n        Person.prototype.sayName = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n            alert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);\n        };\n    }\n}\n")])])])]),e("h2",[s._v("继承")]),e("ul",[e("li",[s._v("组合继承")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("SuperType")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".colors = ["),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"red"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"blue"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"green"')]),s._v("];\n}\nSuperType.prototype.sayName = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\nalert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name);};\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("SubType")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("name, age")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//继承属性")]),s._v("\n    SuperType.call("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(", name);\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".age = age;\n}\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//继承方法")]),s._v("\nSubType.prototype = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" SuperType();\nSubType.prototype.constructor = SubType;\nSubType.prototype.sayAge = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".age);\n};\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" instance1 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" SubType("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(");\ninstance1.colors.push("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"black"')]),s._v(");\nalert(instance1.colors); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"red,blue,green,black"')]),s._v("\ninstance1.sayName(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Nicholas";')]),s._v("\ninstance1.sayAge(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//29")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" instance2 = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" SubType("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Greg"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("27")]),s._v(");\nalert(instance2.colors); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"red,blue,green"')]),s._v("\ninstance2.sayName(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"Greg";')]),s._v("\ninstance2.sayAge(); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//27")]),s._v("\n")])]),e("ul",[e("li",[s._v("寄生组合式继承")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("inheritPrototype")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("subType, superType")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" prototype = object(superType.prototype); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 创建对象")]),s._v("\n    prototype.constructor = subType; "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 增强对象")]),s._v("\n    subType.prototype = prototype; "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 指定对象")]),s._v("\n}\n")])]),e("h1",[s._v("7 函数表达式")]),e("h2",[s._v("递归")]),e("p",[s._v("因此，在编写递归函数时，使用"),e("code",{pre:!0},[s._v("arguments.callee")]),s._v("总比使用函数名更保险。")]),e("h2",[s._v("闭包")]),e("p",[s._v("闭包是指有权访问另一个函数作用域中的变量的函数。")]),e("h2",[s._v("模块模式（单例模式）")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" application = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//私有变量和函数")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" components = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v("();\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//初始化")]),s._v("\n    components.push("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" BaseComponent());\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//公共")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" {\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("getComponentCount")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" components.length;\n        },\n        "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("registerComponent")]),s._v(" : "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("component")]),s._v(")")]),s._v("{\n            "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" component == "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"object"')]),s._v("){\n                components.push(component);\n            }\n        }\n    };\n}();\n")])]),e("h2",[s._v("增强的模块模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" application = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//私有变量和函数")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" components = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v("();\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//初始化")]),s._v("\n    components.push("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" BaseComponent());\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建application 的一个局部副本")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" app = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" BaseComponent();\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//公共接口")]),s._v("\n    app.getComponentCount = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    \t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" components.length;\n    };\n    app.registerComponent = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("component")]),s._v(")")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" component == "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"object"')]),s._v("){\n        \tcomponents.push(component);\n    \t}\n    };\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//返回这个副本")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" app;\n}();\n")])]),e("h1",[s._v("8 BOM（浏览器对象模型）")]),e("h2",[s._v("window对象")]),e("p",[s._v("全局变量不能通过delete 操作符删除，而直接在window 对象上的定义的属性可以。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" age = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".color = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"red"')]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//在IE < 9 时抛出错误，在其他所有浏览器中都返回false")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("delete")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".age;\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//在IE < 9 时抛出错误，在其他所有浏览器中都返回true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("delete")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".color; "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//returns true")]),s._v("\nalert("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".age); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//29")]),s._v("\nalert("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".color); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//undefined")]),s._v("\n")])]),e("ul",[e("li",[s._v("top 对象始终指向最高（最外）层的框架，也就是浏览器窗口")]),e("li",[s._v("parent（父）对象始终指向当前框架的直接上层框架。")]),e("li",[s._v("因此每个框架都有一套自己的构造函数，这些构造函数一一对应，但并不相等。")])]),e("h3",[s._v("间歇调用（最好不要使用）")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" num = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" max = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" intervalId = "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("incrementNumber")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    num++;\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//如果执行次数达到了max 设定的值，则取消后续尚未执行的调用")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (num == max) {\n        clearInterval(intervalId);\n        alert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Done"')]),s._v(");\n    }\n}\nintervalId = setInterval(incrementNumber, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("500")]),s._v(");\n")])]),e("p",[e("strong",[s._v("使用超时调用来模拟")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" num = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" max = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("incrementNumber")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n    num++;\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//如果执行次数未达到max 设定的值，则设置另一次超时调用")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (num < max) {\n        setTimeout(incrementNumber, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("500")]),s._v(");\n    } "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n        alert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Done"')]),s._v(");\n    }\n}\nsetTimeout(incrementNumber, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("500")]),s._v(");\n")])]),e("h3",[s._v("系统对话框")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (confirm("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Are you sure?"')]),s._v(")) {\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\"I'm so glad you're sure! \"")]),s._v(");\n} "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("\"I'm sorry to hear you're not sure. \"")]),s._v(");\n}\n")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" result = prompt("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"What is your name? "')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (result !== "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(") {\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Welcome, "')]),s._v(" + result);\n}\n")])]),e("h2",[s._v("location对象")]),e("h2",[s._v("navigator对象")]),e("h2",[s._v("screen对象")]),e("h2",[s._v("history对象")]),e("h1",[s._v("9 客户端检测")]),e("p",[s._v("但最重要的还是要知道，不到万不得已，就不要使用客户端检测。只要能找到更通用的方法，就应该优先采用更通用的方法。一言以蔽之，先设计最通用的方案，然后再使用特定于浏览器的技术增强该方案。")]),e("p",[e("strong",[s._v("在可能的情况下，要尽量使用typeof 进行能力检测")])]),e("h2",[s._v("能力检测")]),e("h2",[s._v("怪癖检测")]),e("p",[s._v("检查浏览器有什么缺陷（bug）")]),e("h2",[s._v("用户代理检测")]),e("h1",[s._v("10 DOM（文档对象模型）")]),e("h2",[s._v("节点层次")]),e("h3",[s._v("Node类型")]),e("h3",[s._v("Document类型")]),e("p",[s._v("作为HTMLDocument 的实例，document 对象还有一个body 属性，直接指向")]),e("body",[s._v("元素。")]),e("p"),e("p",[s._v("因为文档类型（如果存在的话）是只读的，而且它只能有一个元素子节点")]),e("ul",[e("li",[s._v("查找元素 "),e("ul",[e("li",[s._v("getElementById()")]),e("li",[s._v('getElementsByTagName("img")')]),e("li",[s._v("getElementsByName()")])])])]),e("h3",[s._v("Element类型")]),e("p",[s._v("Element 类型用于表现XML或HTML元素，提供了对元素标签名、子节点及特性的访问。")]),e("p",[s._v("在HTML 中，标签名始终都以全部大写表示；而在XML（有时候也包括XHTML）中，标签名则始终会与源代码中的保持一致。")]),e("ul",[e("li",[e("p",[s._v("取得特性")]),e("p",[s._v("操作特性的DOM方法主要有三个，分别是getAttribute()、setAttribute()和removeAttribute()。")]),e("p",[s._v("只有在取得自定义特性值的情况下，才会使用getAttribute()方法。")])])]),e("h3",[s._v("Text类型")]),e("p",[s._v("在默认情况下，每个可以包含内容的元素最多只能有一个文本节点，而且必须确实有内容存在。来看几个例子。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 没有内容，也就没有文本节点 --\x3e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 有空格，因而有一个文本节点 --\x3e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("\x3c!-- 有内容，因而有一个文本节点 --\x3e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("Hello World!"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("div")]),s._v(">")]),s._v("\n")])]),e("p",[s._v("如果在一个包含两个或多个文本节点的父元素上调用"),e("code",{pre:!0},[s._v("normalize()")]),s._v("方法，则会将所有文本节点合并成一个节点，结果节点的nodeValue 等于将合并前每个文本节点的nodeValue 值拼接起来的值。")]),e("h3",[s._v("Comment类型")]),e("h2",[s._v("DOM操作技术")]),e("h3",[s._v("*动态脚本")]),e("h3",[s._v("动态样式")]),e("h3",[s._v("操作表格")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("table")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("border")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("width")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"100%"')]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("tbody")]),s._v(">")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("tr")]),s._v(">")]),s._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("Cell 1,1"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("Cell 2,1"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("tr")]),s._v(">")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("tr")]),s._v(">")]),s._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("Cell 1,2"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("Cell 2,2"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("td")]),s._v(">")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("tr")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("tbody")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("table")]),s._v(">")]),s._v("\n")])]),e("p",[s._v("使用DOM方法，代码如下：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建table")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" table = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"table"')]),s._v(");\ntable.border = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(";\ntable.width = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"100%"')]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建tbody")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" tbody = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createElement("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"tbody"')]),s._v(");\ntable.appendChild(tbody);\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建第一行")]),s._v("\ntbody.insertRow("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(");\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].insertCell("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(");\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].cells["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].appendChild("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createTextNode("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cell 1,1"')]),s._v("));\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].insertCell("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].cells["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].appendChild("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createTextNode("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cell 2,1"')]),s._v("));\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//创建第二行")]),s._v("\ntbody.insertRow("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].insertCell("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(");\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].cells["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("].appendChild("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createTextNode("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cell 1,2"')]),s._v("));\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].insertCell("),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\ntbody.rows["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].cells["),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].appendChild("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".createTextNode("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Cell 2,2"')]),s._v("));\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//将表格添加到文档主体中")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.appendChild(table);\n")])]),e("h3",[s._v("使用NodeList")]),e("p",[s._v("理解NodeList 及其“近亲”NamedNodeMap 和HTMLCollection，是从整体上透彻理解DOM的关键所在。这三个集合都是“动态的”；换句话说，每当文档结构发生变化时，它们都会得到更新。")]),e("h3",[s._v("小结")]),e("p",[s._v("理解DOM的关键，就是理解DOM 对性能的影响。DOM操作往往是JavaScript 程序中开销最大的部分，而因访问NodeList 导致的问题为最多。NodeList 对象都是“动态的”，这就意味着每次访问NodeList 对象，都会运行一次查询。有鉴于此，最好的办法就是尽量减少DOM操作。")]),e("h1",[s._v("11 DOM扩展")]),e("h2",[s._v("选择符API")]),e("p",[s._v("Selectors API Level 1 的核心是两个方法："),e("code",{pre:!0},[s._v("querySelector()")]),s._v("和"),e("code",{pre:!0},[s._v("querySelectorAll()")]),s._v("。")]),e("h2",[s._v("HTML5")]),e("h3",[s._v("焦点管理")]),e("h3",[s._v("HTMLDocument的变化")]),e("ul",[e("li",[e("p",[s._v("readyState 属性")])]),e("li",[e("p",[s._v("兼容模式")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".compatMode == "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"CSS1Compat"')]),s._v("){\nalert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Standards mode"')]),s._v(");\n} "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\nalert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Quirks mode"')]),s._v(");\n}\n")])])]),e("li",[e("p",[s._v("head 属性")])])]),e("h3",[s._v("字符集属性")]),e("h3",[s._v("插入标记")]),e("h3",[s._v("scrollIntoView()方法")]),e("h2",[s._v("专有扩展")]),e("h3",[s._v("文档模式")]),e("p",[s._v("比如，要想让文档模式像在IE7 中一样，可以使用下面这行代码：")]),e("meta",{attrs:{"http-equiv":"X-UA-Compatible",content:"IE=EmulateIE7"}}),e("p",[s._v("如果不打算考虑文档类型声明，而直接使用IE7 标准模式，那么可以使用下面这行代码：")]),e("meta",{attrs:{"http-equiv":"X-UA-Compatible",content:"IE=7"}}),e("h1",[s._v("12 DOM2和DOM3")]),e("h1",[s._v("13 事件")]),e("p",[s._v("JavaScript 与HTML 之间的交互是通过事件实现的")]),e("h3",[s._v("事件流")]),e("p",[s._v("事件流描述的是从页面中接收事件的顺序")]),e("p",[s._v("事件冒泡和事件捕捉：两种完全相反的事件流概念——"),e("strong",[s._v("建议事件冒泡")])]),e("p",[s._v("“DOM2级事件”规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段")]),e("h3",[s._v("事件处理程序")]),e("ul",[e("li",[e("p",[s._v("HTML事件处理程序")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text/javascript"')]),s._v(">")]),e("span",{pre:!0,attrs:{class:"actionscript"}},[s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("showMessage")]),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")])]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Hello world!"')]),s._v(");\n}\n")]),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("script")]),s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"button"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("value")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Click Me"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("onclick")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"showMessage()"')]),s._v(" />")]),s._v("\n")])])]),e("li",[e("p",[s._v("DOM 0级事件处理程序")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" btn = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"myBtn"')]),s._v(");\nbtn.onclick = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".id); "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v('//"myBtn"')]),s._v("\n};\n")])])]),e("li",[e("p",[s._v("DOM 2级事件处理程序")]),e("p",[s._v("DOM2级事件”定义了两个方法，用于处理指定和删除事件处理程序的操作：")]),e("ul",[e("li",[e("p",[e("code",{pre:!0},[s._v("addEventListener()")])])]),e("li",[e("p",[e("code",{pre:!0},[s._v("removeEventListener()")])])])]),e("p",[s._v("所有DOM节点中都包含这两个方法，并且它们都接受3 个参数：要处理的事件名、作为事件处理程序的函数和一个布尔值。"),e("strong",[s._v("最后这个布尔值参数如果是true，表示在捕获阶段调用事件处理程序；如果是false，表示在冒泡阶段调用事件处理程序。")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" btn = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"myBtn"')]),s._v(");\nbtn.addEventListener("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"click"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".id);\n}, "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(");\n")])]),e("p",[e("strong",[s._v("使用DOM2 级方法添加事件处理程序的主要好处是可以添加多个事件处理程序")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" btn = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"myBtn"')]),s._v(");\nbtn.addEventListener("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"click"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".id);\n}, "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(");\nbtn.addEventListener("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"click"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Hello world!"')]),s._v(");\n}, "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("false")]),s._v(");\n")])]),e("p",[s._v("通过addEventListener()添加的事件处理程序只能使用removeEventListener()来移除**")]),e("p",[s._v("移除时传入的参数与添加处理程序时使用的参数相同。"),e("strong",[s._v("这也意味着通过addEventListener()添加的匿名函数将无法移除。")])])])]),e("h2",[s._v("事件对象")]),e("h3",[s._v("DOM中的事件对象")]),e("p",[s._v("在需要通过一个函数处理多个事件时，可以使用type属性。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" btn = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"myBtn"')]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" handler = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v("(event.type){\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"click"')]),s._v(":\n        alert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Clicked"')]),s._v(");\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mouseover"')]),s._v(":\n        event.target.style.backgroundColor = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"red"')]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"mouseout"')]),s._v(":\n        event.target.style.backgroundColor = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n\t}\n};\nbtn.onclick = handler;\nbtn.onmouseover = handler;\nbtn. onmouseout = handler;\t\n")])]),e("p",[s._v("stopPropagation()方法用于立即停止事件在DOM 层次中的传播，即取消进一步的事件捕获或冒泡。例如，直接添加到一个按钮的事件处理程序可以调用stopPropagation()，从而避免触发注册在document.body 上面的事件处理程序，如下面的例子所示。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" btn = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"myBtn"')]),s._v(");\nbtn.onclick = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(")")]),s._v("{\n    alert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Clicked"')]),s._v(");\n    event.stopPropagation();\n};\n"),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".body.onclick = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(")")]),s._v("{\n\talert("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Body clicked"')]),s._v(");\n};\n")])]),e("h2",[s._v("事件类型")]),e("h3",[s._v("UI事件")]),e("ul",[e("li",[e("p",[s._v("load事件")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".addEventListener("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'load'")]),s._v(", (event) => {\n  "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'page is fully loaded'")]),s._v(");\n});\n")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".onload = "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(") =>")]),s._v(" {\n  "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'page is fully loaded'")]),s._v(");\n};\n")])])])]),e("h3",[s._v("焦点事件")]),e("h3",[s._v("鼠标与滚轮事件")]),e("h3",[s._v("复合事件")]),e("h3",[s._v("变动事件")]),e("h3",[s._v("HTML5事件")]),e("h3",[s._v("设备事件")]),e("h3",[s._v("触摸与手势事件")]),e("h2",[s._v("内存和性能")]),e("h3",[s._v("事件委托")]),e("p",[s._v("使用事件委托，只需在DOM 树中尽量最高的层次上添加一个事件处理程序")]),e("h2",[s._v("模拟事件")]),e("h1",[s._v("14 表单脚本")]),e("h2",[s._v("表单基础知识")]),e("ul",[e("li",[e("p",[s._v("提交表单")]),e("p",[s._v("提交表单时可能出现的最大问题，就是重复提交表单")]),e("p",[s._v("解决方案：")]),e("ol",[e("li",[s._v("在第一次提交表单后就禁用提交按钮")]),e("li",[s._v("利用onsubmit 事件处理程序取消后续的表单提交操作")])])])]),e("h2",[s._v("文本框脚本")]),e("h3",[s._v("选择文本")]),e("h3",[s._v("过滤输入")]),e("ul",[e("li",[e("p",[s._v("屏蔽字符")]),e("p",[s._v("仅考虑到屏蔽不是数值的字符还不够，还要避免屏蔽这些极为常用和必要的键")]),e("p",[s._v("除此之外，还有一个问题需要处理：复制、粘贴及其他操作还要用到 Ctrl 键。在除 IE 之外的所有浏览器中，前面的代码也会屏蔽Ctrl+C、Ctrl+V，以及其他使用 Ctrl 的组合键")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("EventUtil.addHandler(textbox, "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"keypress"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(")")]),s._v("{\n    event = EventUtil.getEvent(event);\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" target = EventUtil.getTarget(event);\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" charCode = EventUtil.getCharCode(event);\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!"),e("span",{pre:!0,attrs:{class:"hljs-regexp"}},[s._v("/\\d/")]),s._v(".test("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("String")]),s._v(".fromCharCode(charCode)) && charCode > "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("9")]),s._v(" &&\n    !event.ctrlKey){\n    \tEventUtil.preventDefault(event);\n    }\n});\n")])])]),e("li",[e("p",[s._v("操作剪切板")])])]),e("h3",[s._v("自动切换焦点")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-html"}},[e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("form")]),s._v(">")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"tel1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txtTel1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("maxlength")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"3"')]),s._v(">")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"tel2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txtTel2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("maxlength")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"3"')]),s._v(">")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("<"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("input")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("type")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"text"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("name")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"tel3"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("id")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txtTel3"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("maxlength")]),s._v("="),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"4"')]),s._v(">")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-tag"}},[s._v("</"),e("span",{pre:!0,attrs:{class:"hljs-name"}},[s._v("form")]),s._v(">")]),s._v("\n")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[s._v("("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(") ")]),s._v("{\n\t"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("tabForward")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("event")]),s._v(") ")]),s._v("{\n\t\tevent = EventUtil.getEvent(event);\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" target = EventUtil.getTarget(event);\n\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (target.value.length == target.maxLength) {\n\t\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" form = target.form;\n\t\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", len = form.elements.length; i < len; i++) {\n\t\t\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (form.elements[i] == target) {\n\t\t\t\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (form.elements[i + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("]) {\n\t\t\t\t\t\tform.elements[i + "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v("].focus();\n\t\t\t\t\t}\n\t\t\t\t\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" textbox1 = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txtTel1"')]),s._v(");\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" textbox2 = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txtTel2"')]),s._v(");\n\t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" textbox3 = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"txtTel3"')]),s._v(");\n\tEventUtil.addHandler(textbox1, "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"keyup"')]),s._v(", tabForward);\n\tEventUtil.addHandler(textbox2, "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"keyup"')]),s._v(", tabForward);\n\tEventUtil.addHandler(textbox3, "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"keyup"')]),s._v(", tabForward);\n})();\n")])]),e("h2",[s._v("选择框脚本")]),e("h2",[s._v("表单序列化")]),e("h2",[s._v("富文本编辑")]),e("h1",[s._v("15 使用Canvas绘图")]),e("h2",[s._v("基本用法")]),e("h1",[s._v("16 HTML脚本编程")]),e("h2",[s._v("跨文档消息传递")]),e("h1",[s._v("17 错误处理与调试")]),e("p",[s._v("常见的错误类型：")]),e("ul",[e("li",[e("p",[s._v("类型转换错误")])]),e("li",[e("p",[s._v("数据类型错误")]),e("p",[s._v("最好是使用instanceof 来检测其数据类型")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//安全，非数组值将被忽略")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("reverseSort")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("values")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (values "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v("){ "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//问题解决了")]),s._v("\n        values.sort();\n        values.reverse();\n    }\n}\n")])]),e("p",[s._v("大体上来说，基本类型的值应该使用typeof 来检测，而对象的值则应该使用instanceof 来检测。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("getQueryString")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("url")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" url == "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"string"')]),s._v("){ "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//通过检查类型确保安全")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" pos = url.indexOf("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"?"')]),s._v(");\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (pos > "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("-1")]),s._v("){\n        \t"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" url.substring(pos +"),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(");\n        }\n    }\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('""')]),s._v(";\n}\n")])])]),e("li",[e("p",[s._v("通信错误")])])]),e("h1",[s._v("18 JavaScript与XML")]),e("h1",[s._v("19 E4X")]),e("h1",[s._v("20 JSON")]),e("p",[s._v("关于JSON，最重要的是要理解它是一种数据格式，不是一种编程语言。")]),e("h2",[s._v("语法")]),e("p",[s._v("JSON 的语法可以表示以下三种类型的值。")]),e("ul",[e("li",[e("p",[s._v("简单值：使用与JavaScript 相同的语法，可以在JSON 中表示字符串、数值、布尔值和null。 但JSON 不支持JavaScript 中的特殊值undefined。")])]),e("li",[e("p",[s._v("对象：对象作为一种复杂数据类型，表示的是一组无序的键值对儿。而每个键值对儿中的值可以是简单值，也可以是复杂数据类型的值。")]),e("p",[e("strong",[s._v("对象的属性必须加==双引号==")])]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-json"}},[s._v("{\n"),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"name"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Nicholas"')]),s._v(",\n"),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"age"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("29")]),s._v(",\n"),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"school"')]),s._v(": {\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"name"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Merrimack College"')]),s._v(",\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v('"location"')]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"North Andover, MA"')]),s._v("\n\t}\n}\t\n")])])]),e("li",[e("p",[s._v("数组：数组也是一种复杂数据类型，表示一组有序的值的列表，可以通过数值索引来访问其中的值。数组的值也可以是任意类型——简单值、对象或数组。 JSON 不支持变量、函数或对象实例，它就是一种表示结构化数据的格式,虽然与JavaScript 中表示数据的某些语法相同，但它并不局限于JavaScript 的范畴。")])])]),e("h2",[s._v("JSON对象")]),e("p",[s._v("JSON 对象有两个方法：stringify()和parse()。在最简单的情况下，这两个方法分别用于把 JavaScript 对象序列化为JSON 字符串和把JSON 字符串解析为原生JavaScript 值")]),e("h2",[s._v("序列化选项")]),e("p",[s._v("toJSON()可以作为函数过滤器的补充，因此理解序列化的内部顺序十分重要。假设把一个对象传入"),e("code",{pre:!0},[s._v("JSON.stringify()")]),s._v("，序列化该对象的顺序如下。")]),e("p",[s._v("(1) 如果存在toJSON()方法而且能通过它取得有效的值，则调用该方法。否则，返回对象本身。")]),e("p",[s._v("(2) 如果提供了第二个参数，应用这个函数过滤器。传入函数过滤器的值是第(1)步返回的值。")]),e("p",[s._v("(3) 对第(2)步返回的每个值进行相应的序列化。")]),e("p",[s._v("(4) 如果提供了第三个参数，执行相应的格式化。")]),e("p",[s._v("无论是考虑定义toJSON()方法，还是考虑使用函数过滤器，亦或需要同时使用两者，理解这个顺序都是至关重要的。")]),e("h1",[s._v("21 Ajax与Comet")]),e("p",[s._v("Ajax 技术的核心是XMLHttpRequest 对象（简称XHR）")]),e("p",[s._v("XHR 为向服务器发送请求和解析服务器响应提供了流畅的接口。能够以异步方式从服务器取得更多信息，意味着用户单击后，可以不必刷新页面也能取得新数据。也就是说，可以使用XHR 对象取得新数据，然后再通过DOM 将新数据插入到页面中。另外，虽然名字中包含XML 的成分，但Ajax 通信与数据格式无关；这种技术就是无须刷新页面即可从服务器取得数据，但不一定是XML 数据。")]),e("h1",[s._v("22 高级技巧")]),e("h2",[s._v("数组分块")]),e("p",[s._v("在数组分块模式中，array 变量本质上就是一个“待办事宜”列表，它包含了要处理的项目。使用shift()方法可以获取队列中下一个要处理的项目，然后将其传递给某个函数。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("chunk")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("array, process, context")]),s._v(")")]),s._v("{\n    setTimeout("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" item = array.shift();\n        process.call(context, item);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (array.length > "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("){\n            setTimeout("),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("arguments")]),s._v(".callee, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100")]),s._v(");\n        }\n    }, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100")]),s._v(");\n}\n")])]),e("p",[s._v("必须当心的地方是，传递给chunk()的数组是用作一个队列的，因此当处理数据的同时，数组中的条目也在改变。如果你想保持原数组不变，则应该将该数组的克隆传递给chunk()，")]),e("h2",[s._v("函数节流")]),e("p",[s._v("目的是只有在执行函数的请求停止了一段时间之后才执行")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" processor = {\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("timeoutId")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(",\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//实际进行处理的方法")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("performProcessing")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n   \t\t"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//实际执行的代码")]),s._v("\n    },\n    "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//初始处理调用的方法")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("process")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n        clearTimeout("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".timeoutId);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" that = "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(";\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".timeoutId = setTimeout("),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n            that.performProcessing();\n        }, "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("100")]),s._v(");\n    }\n};\n")])]),e("h2",[s._v("自定义事件")]),e("p",[s._v("观察者模式")]),e("h1",[s._v("23 离线应用与客户端储存")]),e("h1",[s._v("24 最佳实践")]),e("h2",[s._v("可维护性")]),e("ul",[e("li",[e("p",[s._v("避免全局量")])]),e("li",[e("p",[s._v("避免与"),e("code",{pre:!0},[s._v("null")]),s._v("比较")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("sortArray")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("values")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (values "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v("){ "),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//推荐")]),s._v("\n    \tvalues.sort(comparator);\n    }\n}\n")])])]),e("li",[e("p",[s._v("使用常量")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" Constants = {\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("INVALID_VALUE_MSG")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Invalid value!"')]),s._v(",\n    "),e("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("INVALID_VALUE_URL")]),s._v(": "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"/errors/invalid.php"')]),s._v("\n};\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("validate")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!value){\n        alert(Constants.INVALID_VALUE_MSG);\n        location.href = Constants.INVALID_VALUE_URL;\n    }\n}\n")])])])]),e("h2",[s._v("性能")]),e("ul",[e("li",[e("p",[s._v("避免全局查找")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// wrong!")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("updateUI")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" imgs = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementsByTagName("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"img"')]),s._v(");\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i="),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", len=imgs.length; i < len; i++){\n    \timgs[i].title = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".title + "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" image "')]),s._v(" + i;\n    }\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" msg = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(".getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"msg"')]),s._v(");\n    msg.innerHTML = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Update complete."')]),s._v(";\n}\n")])]),e("p",[s._v("这里，首先将document 对象存在本地的doc 变量中；然后在余下的代码中替换原来的document。与原来的的版本相比，现在的函数只有一次全局查找，肯定更快。")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-function"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("updateUI")]),s._v("("),e("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" doc = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("document")]),s._v(";\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" imgs = doc.getElementsByTagName("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"img"')]),s._v(");\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i="),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(", len=imgs.length; i < len; i++){\n    \timgs[i].title = doc.title + "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('" image "')]),s._v(" + i;\n    }\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" msg = doc.getElementById("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"msg"')]),s._v(");\n    msg.innerHTML = "),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Update complete."')]),s._v(";\n}\n")])])]),e("li",[e("p",[s._v("避免with语句")])]),e("li",[e("p",[s._v("避免不必要的属性查找")]),e("p",[s._v("一旦多次用到对象属性，应该将其存储在局部变量中。第一次访问该值会是O(n)，然而后续的访问都会是O(1)，就会节省很多。例如，之前的代码可以如下重写：")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" url = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("window")]),s._v(".location.href;\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" query = url.substring(url.indexOf("),e("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"?"')]),s._v("));\n")])])]),e("li",[e("p",[s._v("展开循环")]),e("pre",{pre:!0},[e("code",{pre:!0,attrs:{"v-pre":"",class:"language-javascript"}},[e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//credit: Jeff Greenberg for JS implementation of Duff’s Device")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//假设 values.length > 0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" iterations = "),e("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Math")]),s._v(".ceil(values.length / "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v(");\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" startAt = values.length % "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("8")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("var")]),s._v(" i = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n"),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("do")]),s._v(" {\n    "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v("(startAt){\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("7")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("6")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(": process(values[i++]);\n        "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(": process(values[i++]);\n    }\nstartAt = "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n} "),e("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (--iterations > "),e("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(");\n")])]),e("h1",[s._v("25 新兴的API")]),e("ul",[e("li",[s._v("requestAnimationFrame()：是一个着眼于优化JavaScript 动画的API，能够在动画运行期间发出信号。通过这种机制，浏览器就能够自动优化屏幕重绘操作。")]),e("li",[s._v("Page Visibility API：让开发人员知道用户什么时候正在看着页面，而什么时候页面是隐藏的。")]),e("li",[s._v("Geolocation API：在得到许可的情况下，可以确定用户所在的位置。在移动Web 应用中，这个API 非常重要而且常用。")]),e("li",[s._v("File API：可以读取文件内容，用于显示、处理和上传。与HTML5 的拖放功能结合，很容易就 能创造出拖放上传功能。")]),e("li",[s._v("Web Timing：给出了页面加载和渲染过程的很多信息，对性能优化非常有价值。")]),e("li",[s._v("Web Workers：可以运行异步JavaScript 代码，避免阻塞用户界面。在执行复杂计算和数据处理的时候，这个API 非常有用；要不然，这些任务轻则会占用很长时间，重则会导致用户无法与页面交互。")])])])])])}]},d30c:function(s,t,a){s.exports=a.p+"img/1489669-20181016193120797-694786115.90af84dc.png"},d34d:function(s,t,a){"use strict";var e=a("7da4"),r=a.n(e);r.a},d38d:function(s,t,a){s.exports=a.p+"img/1588859468395.fd4cf56d.png"},d507:function(s,t,a){s.exports=a.p+"img/20190326213056321.edf1c7e8.png"},d66e:function(s,t,a){s.exports=a.p+"img/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzk0NDM2NS1iZGNjZGI3ODI3YmUyZWI4LmpwZz9pbWFnZU1vZ3IyL2F1dG8tb3JpZW50L3N0cmlwJTdDaW1hZ2VWaWV3Mi8yL3cvMTI0MA.727a42da.jpg"},db11:function(s,t,a){s.exports=a.p+"img/2019-03-21-04.e3f43ea3.png"},e347:function(s,t,a){s.exports=a.p+"img/2019-03-21-06.4b51fc89.png"},ee9b:function(s,t,a){s.exports=a.p+"img/1489669-20181016192344776-1456921556.6b79d4d5.png"},eebe:function(s,t,a){s.exports=a.p+"img/165792736493afd2.ef49fed5.png"},f49a:function(s,t,a){s.exports=a.p+"img/1599376927172.b1a5cc19.png"},f588:function(s,t,a){s.exports=a.p+"img/selfie.5f3ef21a.png"}}]);
//# sourceMappingURL=chunk-e3c194fe.798e48a2.js.map